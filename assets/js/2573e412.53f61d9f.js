"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[561],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>c});var a=t(7294);function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,p=function(e,n){if(null==e)return{};var t,a,p={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(p[t]=e[t]);return p}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,p=e.mdxType,l=e.originalType,o=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),k=u(t),d=p,c=k["".concat(o,".").concat(d)]||k[d]||m[d]||l;return t?a.createElement(c,i(i({ref:n},s),{},{components:t})):a.createElement(c,i({ref:n},s))}));function c(e,n){var t=arguments,p=n&&n.mdxType;if("string"==typeof e||p){var l=t.length,i=new Array(l);i[0]=d;var r={};for(var o in n)hasOwnProperty.call(n,o)&&(r[o]=n[o]);r.originalType=e,r[k]="string"==typeof e?e:p,i[1]=r;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1548:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>u});var a=t(7462),p=(t(7294),t(3905));const l={},i="\uba4b\uc9c4 \uc635\uc158 \ud30c\uc2f1",r={unversionedId:"glue/optparse",id:"glue/optparse",title:"\uba4b\uc9c4 \uc635\uc158 \ud30c\uc2f1",description:"\uc774\ubc88\uc5d0\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc704\ud55c \ub354 \uba4b\uc9c4 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud574\ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.",source:"@site/docs/05-glue/04-optparse.md",sourceDirName:"05-glue",slug:"/glue/optparse",permalink:"/learn-haskell-blog-generator/glue/optparse",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/05-glue/04-optparse.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud504\ub85c\uc81d\ud2b8\uc758 \uba85\uc138\ub97c \uc815\uc758\ud558\uae30",permalink:"/learn-haskell-blog-generator/glue/project"},next:{title:"\uc5d0\ub7ec \ucc98\ub9ac\uc640 \uc5ec\ub7ec \ud30c\uc77c \ub2e4\ub8e8\uae30",permalink:"/learn-haskell-blog-generator/errors_and_files/"}},o={},u=[{value:"\uba85\ub839\uc904 \ud30c\uc11c \ub9cc\ub4e4\uae30",id:"\uba85\ub839\uc904-\ud30c\uc11c-\ub9cc\ub4e4\uae30",level:2},{value:"\ubaa8\ub378 \uc815\uc758\ud558\uae30",id:"\ubaa8\ub378-\uc815\uc758\ud558\uae30",level:3},{value:"\ud30c\uc11c \ub9cc\ub4e4\uae30",id:"\ud30c\uc11c-\ub9cc\ub4e4\uae30",level:3},{value:"Functor",id:"functor",level:4},{value:"Applicative",id:"applicative",level:4},{value:"Alternative",id:"alternative",level:4},{value:"\uba85\ub839\uacfc \uc11c\ube0c\ud30c\uc11c",id:"\uba85\ub839\uacfc-\uc11c\ube0c\ud30c\uc11c",level:4},{value:"ParserInfo",id:"parserinfo",level:4},{value:"\ud30c\uc11c \uc2e4\ud589\ud558\uae30",id:"\ud30c\uc11c-\uc2e4\ud589\ud558\uae30",level:3},{value:"Options\uc5d0 \ub300\ud55c \ud328\ud134 \ub9e4\uce6d",id:"options\uc5d0-\ub300\ud55c-\ud328\ud134-\ub9e4\uce6d",level:3},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2}],s={toc:u},k="wrapper";function m(e){let{components:n,...t}=e;return(0,p.kt)(k,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"\uba4b\uc9c4-\uc635\uc158-\ud30c\uc2f1"},"\uba4b\uc9c4 \uc635\uc158 \ud30c\uc2f1"),(0,p.kt)("p",null,"\uc774\ubc88\uc5d0\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc704\ud55c \ub354 \uba4b\uc9c4 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud574\ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"getArgs"),"\uc640 \ud328\ud134 \ub9e4\uce6d\uc73c\ub85c\ub3c4 \ubb34\uc5b8\uac00\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc9c0\ub9cc, \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 \ub354 \uc88b\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ubc88 \uc7a5\uc5d0\uc11c\ub294 ",(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/optparse-applicative"},"optparse-applicative"),"\ub77c\ub294 \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative"),"\ub294 \uba85\ub839\ud589 \uc778\uc790 \ud30c\uc11c\ub97c \ub9cc\ub4e4\uae30 \uc704\ud55c EDSL\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\uba85\ub839, \uc2a4\uc704\uce58, \ud50c\ub798\uadf8 \ub4f1\uc744 \ub9cc\ub4e4\uace0 \uc870\ud569\ud558\uc5ec \uc2e4\uc81c\ub85c \ubb38\uc790\uc5f4\uc5d0 \ub300\ud55c \uc5f0\uc0b0\uc744 \uc791\uc131\ud558\uc9c0 \uc54a\uace0\ub3c4\n\uba85\ub839\ud589 \uc778\uc790\ub97c \ud30c\uc2f1\ud558\ub294 \ud30c\uc11c\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub610\ud55c \uc0ac\uc6a9\ubc95, \ub3c4\uc6c0\ub9d0, \uc5d0\ub7ec \uba54\uc2dc\uc9c0 \ub4f1\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\ub294 \ub4f1\uc758 \uae30\ub2a5\ub3c4 \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative"),"\uc758 \uc758\uc874\uc131 \ud48b\ud504\ub9b0\ud2b8\ub294 \ud06c\uc9c0 \uc54a\uc9c0\ub9cc, \uc6b0\ub9ac \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uc0ac\uc6a9\uc790\uac00\n\uba85\ub839\ud589 \ud30c\uc2f1\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},".cabal")," \ud30c\uc77c\uc758 (",(0,p.kt)("inlineCode",{parentName:"p"},"libray")," \uc139\uc158\uc774 \uc544\ub2cc) ",(0,p.kt)("inlineCode",{parentName:"p"},"executable")," \uc139\uc158\uc5d0\n\uc758\uc874\uc131\uc744 \ucd94\uac00\ud558\ub294\uac8c \ubc14\ub78c\uc9c1\ud569\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-diff"}," executable hs-blog-gen\n   import: common-settings\n   hs-source-dirs: app\n   main-is: Main.hs\n   build-depends:\n       base\n+    , optparse-applicative\n     , hs-blog\n   ghc-options:\n     -O\n")),(0,p.kt)("h2",{id:"\uba85\ub839\uc904-\ud30c\uc11c-\ub9cc\ub4e4\uae30"},"\uba85\ub839\uc904 \ud30c\uc11c \ub9cc\ub4e4\uae30"),(0,p.kt)("p",null,"optparse-applicative \ud328\ud0a4\uc9c0\ub294 \uaf64 \uad1c\ucc2e\uc740\n",(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/optparse-applicative-0.16.1.0#optparse-applicative"},"\ubb38\uc11c"),",\n\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774 \uc7a5\uc5d0\uc11c \uc911\uc694\ud55c \uba87 \uac00\uc9c0 \uc0ac\ud56d\uc744 \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc77c\ubc18\uc801\uc73c\ub85c, \uc6b0\ub9ac\uac00 \ud574\uc57c \ud560 \uc77c\uc740 \ub124 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\ubaa8\ub378\uc744 \uc815\uc758\ud569\ub2c8\ub2e4 - \ud504\ub85c\uadf8\ub7a8\uc758 \ub2e4\uc591\ud55c \uc635\uc158\uacfc \uba85\ub839\uc744 \uc124\uba85\ud558\ub294 ADT\ub97c \uc815\uc758\ud569\ub2c8\ub2e4."),(0,p.kt)("li",{parentName:"ol"},"\uc2e4\ud589\ud560 \ub54c \ubaa8\ub378 \ud0c0\uc785\uc758 \uac12\uc744 \uc0dd\uc131\ud558\ub294 \ud30c\uc11c\ub97c \uc815\uc758\ud569\ub2c8\ub2e4."),(0,p.kt)("li",{parentName:"ol"},"\ud30c\uc11c\ub97c \ud504\ub85c\uadf8\ub7a8 \uc778\uc790 \uc785\ub825\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4."),(0,p.kt)("li",{parentName:"ol"},"\ubaa8\ub378\uc744 \ud328\ud134 \ub9e4\uce6d\ud558\uace0 \uc635\uc158\uc5d0 \ub530\ub77c \uc62c\ubc14\ub978 \uc791\uc5c5\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4.")),(0,p.kt)("h3",{id:"\ubaa8\ub378-\uc815\uc758\ud558\uae30"},"\ubaa8\ub378 \uc815\uc758\ud558\uae30"),(0,p.kt)("p",null,"\uba3c\uc800 \uc6b0\ub9ac\uc758 \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0c1\uc0c1\ud574\ubd05\uc2dc\ub2e4. \uc5b4\ub5a4 \uae30\ub2a5\uc774 \uc788\uc744\uae4c\uc694?"),(0,p.kt)("p",null,"\ub2e8\uc77c \ud30c\uc77c\uc774\ub098 \uc785\ub825 \uc2a4\ud2b8\ub9bc\uc744 \ud30c\uc77c\uc774\ub098 \ucd9c\ub825 \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ubcc0\ud658\ud574\uac70\ub098,\n\ub514\ub809\ud1a0\ub9ac \uc804\uccb4\ub97c \ucc98\ub9ac\ud558\uace0 \uc0c8 \ub514\ub809\ud1a0\ub9ac\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 \uc774\ub97c ADT\ub85c \ubaa8\ub378\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"data Options\n  = ConvertSingle SingleInput SingleOutput\n  | ConvertDir FilePath FilePath\n  deriving Show\n\ndata SingleInput\n  = Stdin\n  | InputFile FilePath\n  deriving Show\n\ndata SingleOutput\n  = Stdout\n  | OutputFile FilePath\n  deriving Show\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},(0,p.kt)("inlineCode",{parentName:"p"},"SingleInput"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleOutput"),"\uc744 ",(0,p.kt)("inlineCode",{parentName:"p"},"Maybe FilePath"),"\ub85c \ud45c\ud604\ud558\ub294 \uac83\ub3c4 \ud558\ub098\uc758 \ubc29\ubc95\uc785\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \uc774 \uacbd\uc6b0 \uac01 \ubb38\ub9e5\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"Nothing"),"\uc774 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud558\ub294\uc9c0 \uae30\uc5b5\ud574\uc57c \ud569\ub2c8\ub2e4.\n\uac01 \uc635\uc158\uc5d0 \ub300\ud55c \uc801\uc808\ud55c \uc774\ub984\uc744 \uac00\uc9c4 \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774 \ucf54\ub4dc\uc758 \uc758\ubbf8\ub97c \uc774\ud574\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.")),(0,p.kt)("p",null,"\uc778\ud130\ud398\uc774\uc2a4 \uad00\uc810\uc5d0\uc11c, \uc0ac\uc6a9\uc790\uac00 \ub2e8\uc77c \uc785\ub825 \uc18c\uc2a4\ub97c \ubcc0\ud658\ud558\ub824\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"convert")," \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0\n\uc635\uc158\uc73c\ub85c ",(0,p.kt)("inlineCode",{parentName:"p"},"--input FILEPATH"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"--output FILEPATH"),"\ub97c \uc81c\uacf5\ud558\uc5ec \ud30c\uc77c\uc5d0\uc11c \uc77d\uac70\ub098 \uc4f0\uac8c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub9cc\uc57d \uc0ac\uc6a9\uc790\uac00 \ud558\ub098 \uc774\uc0c1\uc758 \uc635\uc158\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc73c\uba74 \ud45c\uc900 \uc785\ub825/\ucd9c\ub825\uc5d0\uc11c \uc77d\uac70\ub098 \uc4f8 \uac83\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\ub9cc\uc57d \uc0ac\uc6a9\uc790\uac00 \ub514\ub809\ud1a0\ub9ac\ub97c \ubcc0\ud658\ud558\ub824\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"convert-dir")," \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0\n",(0,p.kt)("inlineCode",{parentName:"p"},"--input FILEPATH"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"--output FILEPATH"),"\ub97c \ud544\uc218\ub85c \uc785\ub825\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,p.kt)("h3",{id:"\ud30c\uc11c-\ub9cc\ub4e4\uae30"},"\ud30c\uc11c \ub9cc\ub4e4\uae30"),(0,p.kt)("p",null,"\uc774 \uacfc\uc815\uc5d0\uc11c \uac00\uc7a5 \ud765\ubbf8\ub85c\uc6b4 \ubd80\ubd84\uc785\ub2c8\ub2e4. \uc5b4\ub5bb\uac8c \ubaa8\ub378\uc5d0 \ub9de\ub294 \ud30c\uc11c\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc744\uae4c\uc694?"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative")," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub77c\ub294 \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Maybe"),"\ub098 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO"),"\uc640 \uac19\uc774 kind\uac00 ",(0,p.kt)("inlineCode",{parentName:"p"},"* -> *"),"\uc778 \ud0c0\uc785\uc785\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"Int"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"Bool")," \ub610\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Options"),"\uc640 \uac19\uc740 \uad6c\uccb4\uc801\uc778 \ud0c0\uc785\uc744 \uc81c\uacf5\ud574\uc57c ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub294 (\uac12\uc744 \uac00\uc9c0\ub294) \uad6c\uccb4\uc801\uc778 \ud0c0\uc785\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Parser a"),"\ub294 \uba85\ub839\uc904 \uc778\uc790\uac00 \uc131\uacf5\uc801\uc73c\ub85c \ud30c\uc2f1\ub41c \uacbd\uc6b0 \ud0c0\uc785 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\uc758 \uac12\uc744 \uc0dd\uc131\ud558\ub294 \uba85\ub839\uc904 \ud30c\uc11c\uc758 \uba85\uc138\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4.\n\uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO a"),"\uac00 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\uc758 \uac12\uc744 \uc0dd\uc131\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc758 \uba85\uc138\ub97c \uc758\ubbf8\ud558\ub294 \uac83\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4.\n\uc774 \ub450 \ud0c0\uc785\uc758 \uc8fc\uc694 \ucc28\uc774\uc810\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO a"),"\ub97c ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\ub85c \ubcc0\ud658\ud560 \uc218 \uc5c6\uc9c0\ub9cc\n(\uc6b0\ub9ac\ub294 \ub2e8\uc9c0 IO \uc5f0\uc0b0\uc744 \uc5f0\uacb0\ud558\uace0 Haskell \ub7f0\ud0c0\uc784\uc774 \uadf8\uac83\ub4e4\uc744 \uc2e4\ud589\ud558\uac8c \ud569\ub2c8\ub2e4),\n",(0,p.kt)("inlineCode",{parentName:"p"},"Parser a"),"\ub97c \ud504\ub85c\uadf8\ub7a8 \uc778\uc790\ub97c \uc758\ubbf8\ud558\ub294 \ubb38\uc790\uc5f4 \ubaa9\ub85d\uc744 \ubc1b\uace0 \uc778\uc790\ub97c \ud30c\uc2f1\ud560 \uc218 \uc788\uc73c\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\ub97c \uc0dd\uc131\ud558\ub294 \ud568\uc218\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc774\uc804 EDSL\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 ",(0,p.kt)("em",{parentName:"p"},"\uc870\ud569\uc790 \ud328\ud134"),"\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 \ud30c\uc11c\ub97c \ub9cc\ub4e4\uae30 \uc704\ud55c \uc6d0\uc2dc\uac12\ub4e4\uacfc \uc791\uc740 \ud30c\uc11c\ub97c \ud070 \ud30c\uc11c\ub85c \uc870\ud569\ud558\ub294 \ubc29\ubc95\uc744 \uc775\ud600\uc57c \ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc791\uc740 \ud30c\uc11c\uc758 \uc608\uc81c\ub97c \uc0b4\ud3b4\ubd05\uc2dc\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'inp :: Parser FilePath\ninp =\n  strOption\n    ( long "input"\n      <> short \'i\'\n      <> metavar "FILE"\n      <> help "Input file"\n    )\n\nout :: Parser FilePath\nout =\n  strOption\n    ( long "output"\n      <> short \'o\'\n      <> metavar "FILE"\n      <> help "Output file"\n    )\n')),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"strOption"),"\ub294 \ud30c\uc11c\ub97c \ub9cc\ub4dc\ub294 \ud568\uc218\uc785\ub2c8\ub2e4. \uc774 \ud568\uc218\ub294 \uc778\uc790\ub85c \uc870\ud569\ub41c ",(0,p.kt)("em",{parentName:"p"},"\uc635\uc158 \uc218\uc815\uc790"),"\ub97c \ubc1b\uc544 \ubb38\uc790\uc5f4\uc744 \ud30c\uc2f1\ud558\ub294 \ud30c\uc11c\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n\ud0c0\uc785\uc744 ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath"),"\ub85c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\ub294\ub370, ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath"),"\uac00 ",(0,p.kt)("inlineCode",{parentName:"p"},"String"),"\uc758 \ubcc4\uce6d\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\ud30c\uc11c \ube4c\ub354\ub294 \uac12\uc744 \ud30c\uc2f1\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud558\uace0, \uc218\uc815\uc790\ub294 \ud50c\ub798\uadf8 \uc774\ub984, \ud50c\ub798\uadf8 \uc774\ub984\uc758 \uc57d\uc5b4, \uc0ac\uc6a9\ubc95 \ubc0f \ub3c4\uc6c0\ub9d0 \uba54\uc2dc\uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uacfc \uac19\uc740 \uc18d\uc131\uc744 \uc124\uba85\ud569\ub2c8\ub2e4."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\uc0ac\uc2e4 ",(0,p.kt)("inlineCode",{parentName:"p"},"strOption"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"IsString")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uc5b4\ub5a4 \ubb38\uc790\uc5f4 \ud0c0\uc785\uc774\ub77c\ub3c4 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uadf8 \uc608\ub85c ",(0,p.kt)("inlineCode",{parentName:"p"},"text")," \ud328\ud0a4\uc9c0\uc5d0\uc11c \uac00\uc838\uc628 \ud6e8\uc52c \ud6a8\uc728\uc801\uc778 \uc720\ub2c8\ucf54\ub4dc \ud14d\uc2a4\ud2b8 \ud0c0\uc785\uc778 ",(0,p.kt)("inlineCode",{parentName:"p"},"Text"),"\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"String"),"\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Char"),"\uc758 \ub9c1\ud06c\ub4dc \ub9ac\uc2a4\ud2b8\ub85c \uad6c\ud604\ub418\uc9c0\ub9cc, ",(0,p.kt)("inlineCode",{parentName:"p"},"Text"),"\ub294 \ubc14\uc774\ud2b8 \ubc30\uc5f4\ub85c \uad6c\ud604\ub418\uae30 \ub54c\ubb38\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},"Text"),"\uac00 \ub354 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4.\n\ud14d\uc2a4\ud2b8 \uac12\uc744 \uc704\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"String")," \ub300\uc2e0 ",(0,p.kt)("inlineCode",{parentName:"p"},"Text"),"\ub97c \uc0ac\uc6a9\ud558\ub294\uac8c \uc88b\uc2b5\ub2c8\ub2e4.\n\uc9c0\uae08\uae4c\uc9c0\ub294 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\ub294\ub370 \uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"String"),"\ubcf4\ub2e4 \uc57d\uac04 \uc0ac\uc6a9\ud558\uae30 \ubd88\ud3b8\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \ud14d\uc2a4\ud2b8\ub97c \ud45c\ud604\ud560\ub54c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ud0c0\uc785\uc785\ub2c8\ub2e4!")),(0,p.kt)("p",null,"\ubcf4\uc2dc\ub2e4\uc2dc\ud53c, \uc218\uc815\uc790\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"<>")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud569\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc989, \uc218\uc815\uc790\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Semigroup")," \ud0c0\uc785\ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\ud604\ud588\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4!"),(0,p.kt)("p",null,"\uc774\ub7ec\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub85c \uc778\ud574, \uc6b0\ub9ac\ub294 \ubaa8\ub4e0 \uc218\uc815\uc790 \uc635\uc158\uc744 \uc81c\uacf5\ud560 \ud544\uc694\uac00 \uc5c6\uc774 \ud544\uc694\ud55c \ud56d\ubaa9\ub9cc \uc81c\uacf5\ud558\uba74 \ub429\ub2c8\ub2e4.\n\ub530\ub77c\uc11c \uc6b0\ub9ac\uac00 \uc9e7\uc740 \ud50c\ub798\uadf8 \uc774\ub984\uc744 \uac00\uc9c0\uace0 \uc2f6\uc9c0 \uc54a\ub2e4\uba74, \ucd94\uac00\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,p.kt)("h4",{id:"functor"},"Functor"),(0,p.kt)("p",null,"\uc6b0\ub9ac\uac00 \uc815\uc758\ud55c \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc704\ud574, ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser FilePath"),"\ub97c \uc815\uc758\ud588\ub2e4\ub294 \uac83\uc740\n\uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \ubc29\ud5a5\uc73c\ub85c \ud070 \ud30c\uc11c\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub294 \uc88b\uc740 \uc2dc\uc791\uc774\uc9c0\ub9cc, ",(0,p.kt)("inlineCode",{parentName:"p"},"ConvertSingle"),"\uc5d0 \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"SingleInput"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleOutput"),"\uc744 \uc704\ud55c ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\n\ub9cc\uc57d ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath"),"\uac00 \uc788\ub2e4\uba74, ",(0,p.kt)("inlineCode",{parentName:"p"},"InputFile")," \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\uc5ec ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleInput"),"\uc73c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"InputFile"),"\ub3c4 \ud568\uc218\ub77c\ub294 \uac83\uc744 \uae30\uc5b5\ud558\uc138\uc694:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"InputFile :: FilePath -> SingleInput\nOutputFile :: FilePath -> SingleOutput\n")),(0,p.kt)("p",null,"\uadf8\ub7ec\ub098 \ud30c\uc11c\ub97c \ubcc0\ud658\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0c0\uc785\uc758 \ud568\uc218\uac00 \ud544\uc694\ud569\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"f :: Parser FilePath -> Parser SingleInput\ng :: Parser FilePath -> Parser SingleOutput\n")),(0,p.kt)("p",null,"\ub2e4\ud589\ud788\ub3c4, ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser")," \uc778\ud130\ud398\uc774\uc2a4\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath -> SingleInput"),'\uc640 \uac19\uc740 \ud568\uc218\ub97c "lift"\ud558\ub294 \ud568\uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\uc989 ',(0,p.kt)("inlineCode",{parentName:"p"},"Parser FilePath -> Parser SingleInput"),"\uc640 \uac19\uc740 \ud0c0\uc785\uc758 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc90d\ub2c8\ub2e4.\n\uc774 \ud568\uc218\ub294 \uc5b4\ub5a0\ud55c \uc785\ub825\uacfc \ucd9c\ub825 \ubaa8\ub450\uc5d0 \ub300\ud574 \uc791\ub3d9\ud558\uae30\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},"a -> b")," \ud0c0\uc785\uc758 \ud568\uc218\uac00 \uc788\ub2e4\uba74\n\uc778\uc790\ub85c \uc804\ub2ec\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser a -> Parser b")," \ud0c0\uc785\uc758 \uc0c8 \ud568\uc218\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc774\ub7ec\ud55c \ud568\uc218\ub97c ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc774\ub77c\uace0 \ubd80\ub985\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"fmap :: (a -> b) -> Parser a -> Parser b\n\n-- \ub610\ub294 \uc911\uc704 \ud45c\uae30\ubc95\uc73c\ub85c\n(<$>)  :: (a -> b) -> Parser a -> Parser b\n")),(0,p.kt)("p",null,"\uc6b0\ub9ac\ub294 \uc774\uc804\uc5d0 \ub2e4\ub978 \ud0c0\uc785\uc758 \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \ubcf4\uc558\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"fmap :: (a -> b) -> [a] -> [b]\n\nfmap :: (a -> b) -> IO a -> IO b\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"<>"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"show"),"\uc640 \uac19\uc740 \ud0c0\uc785\ud074\ub798\uc2a4 \ud568\uc218\uc785\ub2c8\ub2e4.\n\uc774\ub294 ",(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Data-Functor.html#t:Functor"},(0,p.kt)("inlineCode",{parentName:"a"},"Functor")),"\ub77c\ub294 \ud0c0\uc785\ud074\ub798\uc2a4\uc5d0 \uc18d\ud569\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"class Functor f where\n  fmap :: (a -> b) -> f a -> f b\n")),(0,p.kt)("p",null,"\uadf8\ub9ac\uace0 \ub2e4\uc74c\uacfc \uac19\uc740 \ubc95\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"-- 1. \ud56d\ub4f1 \ubc95\uce59:\n--    \uac12\ub4e4\uc744 \ubcc0\uacbd\ud558\uc9c0 \uc54a\uc73c\uba74 \uc544\ubb34\uac83\ub3c4 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4.\nfmap id = id\n\n-- 2. \ud569\uc131 \ubc95\uce59:\n--    lift\ud55c \ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uac83\uc740 fmap\uc73c\ub85c lift\ud55c \ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4.\nfmap (f . g) == fmap f . fmap g\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \uad6c\ud604\ud558\uace0 \uc704 \ubc95\uce59\uc744 \ub530\ub974\ub294 \ud0c0\uc785\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor"),"\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},(0,p.kt)("inlineCode",{parentName:"p"},"f"),"\uc758 kind\uac00 ",(0,p.kt)("inlineCode",{parentName:"p"},"* -> *"),"\ub77c\ub294 \uac83\uc744 \uae30\uc5b5\ud558\uc138\uc694.\n",(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc758 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \ud1b5\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"f"),"\uc758 kind\ub97c \ucd94\ub860\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("ol",{parentName:"blockquote"},(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("inlineCode",{parentName:"li"},"a"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"li"},"b"),"\uc758 kind\ub294 ",(0,p.kt)("inlineCode",{parentName:"li"},"*"),"\uc785\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud568\uc218\uc758 \uc778\uc790/\ubc18\ud658 \ud0c0\uc785\uc73c\ub85c \uc0ac\uc6a9\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("inlineCode",{parentName:"li"},"f a"),"\uc758 kind\ub294 ",(0,p.kt)("inlineCode",{parentName:"li"},"*"),"\uc785\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 \ud568\uc218\uc758 \uc778\uc790\ub85c \uc0ac\uc6a9\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,p.kt)("li",{parentName:"ol"},"\uadf8\ub7ec\ubbc0\ub85c ",(0,p.kt)("inlineCode",{parentName:"li"},"f"),"\uc758 kind\ub294 ",(0,p.kt)("inlineCode",{parentName:"li"},"* -> *"),"\uc785\ub2c8\ub2e4."))),(0,p.kt)("p",null,"\ub370\uc774\ud130 \ud0c0\uc785 \ud558\ub098\ub97c \uc120\ud0dd\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor")," \uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\ud604\ud574\ubd05\uc2dc\ub2e4.\n\uba3c\uc800 ",(0,p.kt)("inlineCode",{parentName:"p"},"* -> *")," kind\ub97c \uac00\uc9c4 \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc120\ud0dd\ud574\uc57c \ud569\ub2c8\ub2e4. ",(0,p.kt)("inlineCode",{parentName:"p"},"Maybe"),"\uac00 \uc801\ud569\ud569\ub2c8\ub2e4.\n\uc774\uc81c ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap :: (a -> b) -> Maybe a -> Maybe b")," \ud568\uc218\ub97c \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4.\n\ub2e4\uc74c\uc740 \ub9e4\uc6b0 \uac04\ub2e8\ud558\uace0 (\uadf8\ub9ac\uace0 \uc798\ubabb\ub41c) \uad6c\ud604\uc785\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"mapMaybe :: (a -> b) -> Maybe a -> Maybe b\nmapMaybe func maybeX = Nothing\n")),(0,p.kt)("p",null,"\ud55c \ubc88 \ucef4\ud30c\uc77c\ud574\ubcf4\uc138\uc694! \uc131\uacf5\uc801\uc73c\ub85c \ucef4\ud30c\uc77c\ub429\ub2c8\ub2e4! \ud558\uc9c0\ub9cc \ubd88\ud589\ud558\uac8c\ub3c4 \uccab \ubc88\uc9f8 \ubc95\uce59\uc744 \ub9cc\uc871\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"fmap id = id"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"mapMaybe id (Just x) == Just x"),"\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4.\n\uadf8\ub7ec\ub098 \uc815\uc758\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"mapMaybe id (Just x) == Nothing"),"\uc774\ub77c\ub294 \uac83\uc744 \uba85\ud655\ud788 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc774\ub294 \ud558\uc2a4\ucf08\uc774 \ubc95\uce59\uc744 \ub9cc\uc871\ud560 \uc218 \uc788\uac8c \ubcf4\uc7a5\ud574\uc8fc\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uacfc \uc774\ub7ec\ud55c \ubc95\uce59\uc774 \uc911\uc694\ud558\ub2e4\ub294 \uac83\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.\n\ubc95\uce59\uc744 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor")," \uc778\uc2a4\ud134\uc2a4\ub294 \uc6b0\ub9ac\uac00 \uae30\ub300\ud558\ub294 \uac83\uacfc \ub2e4\ub974\uac8c \ub3d9\uc791\ud560 \uac83\uc785\ub2c8\ub2e4.\n\ub2e4\uc2dc \ud55c \ubc88 \uc2dc\ub3c4\ud574\ubd05\uc2dc\ub2e4!"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"mapMaybe :: (a -> b) -> Maybe a -> Maybe b\nmapMaybe func maybeX =\n  case maybeX of\n    Nothing -> Nothing\n    Just x -> Just (func x)\n")),(0,p.kt)("p",null,"\uc774 ",(0,p.kt)("inlineCode",{parentName:"p"},"mapMaybe"),"\ub294 \ubc95\uce59\uc744 \ub9cc\uc871\ud569\ub2c8\ub2e4. \uc774\ub294 \ub300\uc218\ud559\uc744 \ud1b5\ud574 \uc99d\uba85\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. - \ub9cc\uc57d \uce58\ud658\uc744 \ud1b5\ud574 \ub4f1\uc2dd\uc758 \ud55c\ucabd\uc5d0\uc11c \ub2e4\ub978 \ucabd\uc73c\ub85c \ub3c4\ub2ec\ud560 \uc218 \uc788\ub2e4\uba74, \ubc95\uce59\uc740 \uc131\ub9bd\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"Functor\ub294 \ub9e4\uc6b0 \uc911\uc694\ud55c \ud0c0\uc785\ud074\ub798\uc2a4\uc774\uba70, \ub9ce\uc740 \ud0c0\uc785\uc774 \uc774 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\uac00 \uc54c\uace0 \uc788\ub294 \uac83\ucc98\ub7fc, ",(0,p.kt)("inlineCode",{parentName:"p"},"IO"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"Maybe"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"[]"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser")," \ubaa8\ub450 ",(0,p.kt)("inlineCode",{parentName:"p"},"* -> *"),' kind\ub97c \uac00\uc9c0\uba70\n\uadf8\ub4e4\uc758 "payload" \ud0c0\uc785\uc5d0 \ub300\ud574 ',(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\uc885\uc885 \uc0ac\ub78c\ub4e4\uc740 \ud0c0\uc785\ud074\ub798\uc2a4\uac00 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud558\ub294\uc9c0\uc5d0 \ub300\ud55c \ube44\uc720\ub098 \uc740\uc720\ub97c \ucc3e\uc73c\ub824\uace0 \ud569\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc Functor`\uc640 \uac19\uc740 \uc7ac\ubbf8\uc788\ub294 \uc774\ub984\uc758 \ud0c0\uc785\ud074\ub798\uc2a4\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub4e0 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud55c\n\ube44\uc720\ub098 \uc740\uc720\ub97c \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc740\uc720\ub97c \ud3ec\uae30\ud558\uace0 \ubc95\uce59\uc744 \uac00\uc9c4 \uc778\ud130\ud398\uc774\uc2a4\ub85c \uadf8 \uc790\uccb4\ub85c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \ub354 \uc27d\uc2b5\ub2c8\ub2e4.")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\uc5d0 \ub300\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \uc0ac\uc6a9\ud574, ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath"),"\ub97c \ubc18\ud658\ud558\ub294 \ud30c\uc11c\ub97c ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleInput")," \ub610\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleOutput"),"\uc744 \ubc18\ud658\ud558\ub294 \ud30c\uc11c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'pInputFile :: Parser SingleInput\npInputFile = fmap InputFile parser\n  where\n    parser =\n      strOption\n        ( long "input"\n          <> short \'i\'\n          <> metavar "FILE"\n          <> help "Input file"\n        )\n\npOutputFile :: Parser SingleOutput\npOutputFile = OutputFile <$> parser -- fmap \uacfc <$> \ub294 \uac19\uc740 \uc758\ubbf8\uc785\ub2c8\ub2e4.\n  where\n    parser =\n      strOption\n        ( long "output"\n          <> short \'o\'\n          <> metavar "FILE"\n          <> help "Output file"\n        )\n')),(0,p.kt)("h4",{id:"applicative"},"Applicative"),(0,p.kt)("p",null,"\uc774\uc81c ",(0,p.kt)("inlineCode",{parentName:"p"},"pInputFile :: Parser SingleInput"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"pOutputFile :: Parser SingleOutput")," \ub450 \uac1c\uc758 \ud30c\uc11c\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 \uc774 \ub450 \ud30c\uc11c\ub97c ",(0,p.kt)("em",{parentName:"p"},"\uacb0\ud569"),"\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Options"),"\ub97c \ub9cc\ub4e4\ub824\uace0 \ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"SingleInput"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"SingleOutput"),"\uc774 \uc788\ub2e4\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"ConvertSingle")," \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"ConvertSingle :: SingleInput -> SingleOutput -> Options\n")),(0,p.kt)("p",null,"\ud639\uc2dc \uc774\uc804\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \ud65c\uc6a9\ud574 \ubcf8 \uac83\ucc98\ub7fc \ube44\uc2b7\ud55c \ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n\uc774\uc9c4 \ud568\uc218(binary function)\ub97c ",(0,p.kt)("em",{parentName:"p"},"\ub9ac\ud504\ud2b8"),"\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\uc5d0\uc11c\ub3c4 \ub3d9\uc791\ud558\uac8c \ud558\ub294 \ud568\uc218\uac00 \uc874\uc7ac\ud560\uae4c\uc694?\n\uc874\uc7ac\ud55c\ub2e4\uba74 \uc544\ub9c8 \uc774\ub7f0 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \uac00\uc9c0\uace0 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"???\n  :: (SingleInput -> SingleOutput -> Options)\n  -> (Parser SingleInput -> Parser SingleOutput -> Parser Options)\n")),(0,p.kt)("p",null,"\ub124. \uc774\ub7f0 \ud568\uc218\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ud568\uc218\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"liftA2"),"\ub77c\uace0 \ubd88\ub9ac\uba70 ",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative")," \ud0c0\uc785\ud074\ub798\uc2a4\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative")," (\ub610\ub294 applicative functor)\ub294 \uc138 \uac1c\uc758 \uc8fc\uc694 \ud568\uc218\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"class Functor f => Applicative f where\n  pure :: a -> f a\n  liftA2 :: (a -> b -> c) -> f a -> f b -> f c\n  (<*>) :: f (a -> b) -> f a -> f b\n")),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Applicative.html#t:Applicative"},(0,p.kt)("inlineCode",{parentName:"a"},"Applicative")),"\n\ub294 \ub9ce\uc740 \uc778\uc2a4\ud134\uc2a4\uac00 \uc874\uc7ac\ud558\ub294 \ub610 \ub2e4\ub978 \ub9e4\uc6b0 \uc778\uae30\uc788\ub294 \ud0c0\uc785\ud074\ub798\uc2a4\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\ubaa8\ub4e0 ",(0,p.kt)("inlineCode",{parentName:"p"},"Monoid"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Semigroup"),"\uc778 \uac83\ucc98\ub7fc, \ubaa8\ub4e0 ",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative"),"\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor"),"\uc785\ub2c8\ub2e4.\n\uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uace0\uc790 \ud558\ub294 \ud0c0\uc785\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor")," \uc778\ud130\ud398\uc774\uc2a4\ub3c4 \uad6c\ud604\ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"\ud2b9\uc815 \ud568\uc218 ",(0,p.kt)("inlineCode",{parentName:"p"},"f"),"\ub97c \ub9ac\ud504\ud2b8 \ud558\ub294 \uc77c\ubc18\uc801\uc778 functor\uc758 \uae30\ub2a5\uc744 \ub118\uc5b4, applicative functor\ub294\n\ud0c0\uc785 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\ub97c ",(0,p.kt)("inlineCode",{parentName:"p"},"f a"),'\ub85c "\ub9ac\ud504\ud2b8"\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4, \ud2b9\uc815 ',(0,p.kt)("inlineCode",{parentName:"p"},"f"),"\uc758 ",(0,p.kt)("em",{parentName:"p"},"\uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4"),"\uc5d0 \ud568\uc218\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc544\ub9c8 ",(0,p.kt)("inlineCode",{parentName:"p"},"pure"),"\ub294 \uc774\ubbf8 \uc775\uc219\ud560 \uac83\uc785\ub2c8\ub2e4. \uc608\uc804\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO"),"\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud560 \ub54c \ubcf4\uc558\uc744 \uac83\uc785\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"IO"),"\uc5d0 \ub300\ud574, ",(0,p.kt)("inlineCode",{parentName:"p"},"pure"),"\ub294 IO\ub97c \uc218\ud589\ud558\uc9c0 \uc54a\uace0\ub3c4 \ud2b9\uc815 \ubc18\ud658 \uac12\uc744 \uac00\uc9c0\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO")," \uc561\uc158\uc744 \ub9cc\ub4e4\uc5b4\uc90d\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\uc5d0 \ub300\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"pure"),"\ub97c \uc0ac\uc6a9\ud558\uba74, \ud30c\uc2f1\uc744 \ud558\uc9c0 \uc54a\uace0\ub3c4 \ud2b9\uc815 \uac12\uc744 \ubc18\ud658\ud558\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"liftA2"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"<*>"),"\ub294 \ub458 \ub2e4 \uc11c\ub85c\ub97c \ud65c\uc6a9\ud574 \uad6c\ud604\ud560 \uc218 \uc788\ub294 \ud568\uc218\uc785\ub2c8\ub2e4.\n\uc0ac\uc2e4 ",(0,p.kt)("inlineCode",{parentName:"p"},"<*>"),"\uac00 \ub450 \ud568\uc218 \uc911 \ub354 \uc720\uc6a9\ud569\ub2c8\ub2e4.\n\uc65c\ub0d0\ud558\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"fmap")," (\ub610\ub294 \uc911\uc704 \uc5f0\uc0b0\uc790 ",(0,p.kt)("inlineCode",{parentName:"p"},"<$>"),")\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 \ub450 \uac1c \uc774\uc0c1\uc758 \ub9ce\uc740 \uc778\uc790\ub97c \uac00\uc9c4 \ud568\uc218\uc5d0\ub3c4 \uc801\uc6a9\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\ub450 \ud30c\uc11c\ub97c \ud558\ub098\ub85c \uacb0\ud569\ud558\uae30\uc704\ud574, ",(0,p.kt)("inlineCode",{parentName:"p"},"liftA2")," \ub610\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"<$>"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"<*>"),"\uc758 \uc870\ud569\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"-- with liftA2\npConvertSingle :: Parser Options\npConvertSingle =\n  liftA2 ConvertSingle pInputFile pOutputFile\n\n-- with <$> and <*>\npConvertSingle :: Parser Options\npConvertSingle =\n  ConvertSingle <$> pInputFile <*> pOutputFile\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"<$>"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"<*>"),"\ub294 \ubaa8\ub450 \uc67c\ucabd\uc73c\ub85c \uacb0\ud569\ub418\ubbc0\ub85c, \ub2e4\uc74c\uacfc \uac19\uc740 \ubcf4\uc774\uc9c0 \uc54a\ub294 \uad04\ud638\uac00 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"pConvertSingle :: Parser Options\npConvertSingle =\n  (ConvertSingle <$> pInputFile) <*> pOutputFile\n")),(0,p.kt)("p",null,"\uc704 \ucf54\ub4dc\uac00 \ud0c0\uc785\uccb4\ud06c\uc5d0 \uc131\uacf5\ud558\ub294\uc9c0 \uc99d\uba85\ud558\uae30 \uc704\ud574, \uac01 \ud558\uc704 \ud45c\ud604\uc2dd\uc758 \ud0c0\uc785\uc744 \uc0b4\ud3b4\ubd05\uc2dc\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"pConvertSingle :: Parser Options\n\npInputFile :: Parser SingleInput\npOutputFile :: Parser SingleOutput\n\nConvertSingle :: SingleInput -> SingleOutput -> Options\n\n(<$>) :: (a -> b) -> Parser a -> Parser b\n  -- \uc5ec\uae30\uc11c `a`\ub294 `SingleInput`\uc774\uace0 `b`\ub294 `SingleOutput -> Options`\uc785\ub2c8\ub2e4.\n\nConvertSingle <$> pInputFile :: Parser (SingleOutput -> Options)\n\n(<*>) :: Parser (a -> b) -> Parser a -> Parser b\n  -- \uc5ec\uae30\uc11c `a -> b`\ub294 `SingleOutput -> Options`\uc774\uba70, `a`\ub294 `SingleOutput`\uc774\uace0 `b`\ub294 `Options`\uc785\ub2c8\ub2e4.\n\n-- \ub530\ub77c\uc11c\n(ConvertSingle <$> pInputFile) <*> pOutputFile :: Parser Options\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"<$>"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"<*>"),"\ub97c \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ub9cc\ud07c \ub9ce\uc740 \ud30c\uc11c\ub97c \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 \ucee4\ub9c1(currying)\uacfc \ub9e4\uac1c\ubcc0\uc218 \ub2e4\ud615\uc131(parametric polymorphism) \ub450 \uac00\uc9c0 \uc774\uc720 \ub54c\ubb38\uc785\ub2c8\ub2e4.\nHaskell\uc5d0\uc11c \ud568\uc218\ub294 \uc815\ud655\ud788 \ud558\ub098\uc758 \uc778\uc790\ub97c \ubc1b\uace0 \uc815\ud655\ud788 \ud558\ub098\uc758 \uac12\uc744 \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0,\n\uc5ec\ub7ec \uc778\uc790\ub97c \uac00\uc9c4 \ud568\uc218\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"a -> b"),"\uc640 \uac19\uc774 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"applicative functor\uc758 \ubc95\uce59\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc740 ",(0,p.kt)("a",{parentName:"p",href:"https://wiki.haskell.org/Typeclassopedia#Laws_2"},"Typeclassopedia"),"\uae00\uc744 \ucc38\uace0\ud558\uc138\uc694.\n\uc774 \uae00\uc740 \ub2e4\uc591\ud55c \uc720\uc6a9\ud55c \ud0c0\uc785\ud074\ub798\uc2a4\uc640 \uadf8\ub4e4\uc758 \ubc95\uce59\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud569\ub2c8\ub2e4.")),(0,p.kt)("p",null,"Applicative functor\ub294 \ub9e4\uc6b0 \uc911\uc694\ud55c \uac1c\ub150\uc774\uba70 \ub2e4\uc591\ud55c \ud30c\uc11c \uc778\ud130\ud398\uc774\uc2a4 (\uba85\ub839\uc904 \ubfd0\ub9cc\uc544\ub2c8\ub77c JSON\uc774\ub098 \uc77c\ubc18\uc801\uc778 \ud30c\uc11c), I/O, \ub3d9\uc2dc\uc131, \ube44\uacb0\uc815\uc131 \ub4f1\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\n\uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc774\ub984\uc774 optparse-applicative\uc778 \uc774\uc720\ub3c4 \ud30c\uc11c\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc8fc\uc694 API\ub85c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,p.kt)("hr",null),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\uc5f0\uc2b5\ubb38\uc81c"),": ",(0,p.kt)("inlineCode",{parentName:"p"},"Options"),"\uc758 \uc0dd\uc131\uc790 ",(0,p.kt)("inlineCode",{parentName:"p"},"ConvertDir"),"\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc720\uc0ac\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub9cc\ub4dc\uc138\uc694."),(0,p.kt)("details",null,(0,p.kt)("summary",null,"\uc815\ub2f5"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'pInputDir :: Parser FilePath\npInputDir =\n  strOption\n    ( long "input"\n      <> short \'i\'\n      <> metavar "DIRECTORY"\n      <> help "Input directory"\n    )\n\npOutputDir :: Parser FilePath\npOutputDir =\n  strOption\n    ( long "output"\n      <> short \'o\'\n      <> metavar "DIRECTORY"\n      <> help "Output directory"\n    )\n\npConvertDir :: Parser Options\npConvertDir =\n  ConvertDir <$> pInputDir <*> pOutputDir\n'))),(0,p.kt)("hr",null),(0,p.kt)("h4",{id:"alternative"},"Alternative"),(0,p.kt)("p",null,"\uc0ac\uc2e4 ",(0,p.kt)("inlineCode",{parentName:"p"},"ConvertSingle"),"\ub294 \uc785\ucd9c\ub825\uc73c\ub85c \ud45c\uc900 \uc785\ub825\uacfc \ucd9c\ub825\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\uc9c0\uae08\uae4c\uc9c0 ",(0,p.kt)("inlineCode",{parentName:"p"},"--input"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"--output")," \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc77c\uc744 \uc77d\uac70\ub098 \uc4f0\ub294 \ud558\ub098\uc758 \uc635\uc158\ub9cc \uc81c\uacf5\ud588\uc2b5\ub2c8\ub2e4.\n\uc774\uc81c \uc6b0\ub9ac\ub294 \uc774 \ud50c\ub798\uadf8\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c\ud574, \uc9c0\uc815\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud45c\uc900 \uc785\ucd9c\ub825\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub9cc\ub4e4\ub824\uace0 \ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"Control.Applicative"),"\uc758 ",(0,p.kt)("inlineCode",{parentName:"p"},"optional")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"optional :: Alternative f => f a -> f (Maybe a)\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"optional"),"\uc740 ",(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Applicative.html#t:Alternative"},(0,p.kt)("inlineCode",{parentName:"a"},"Alternative"))," \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uc778 \ud0c0\uc785\uc5d0 \ub300\ud574 \uc791\ub3d9\ud569\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"class Applicative f => Alternative f where\n  (<|>) :: f a -> f a -> f a\n  empty :: f a\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Alternative"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Monoid")," \ud0c0\uc785 \ud074\ub798\uc2a4\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uc9c0\ub9cc, applicative functor\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.\n\uc774 \ud0c0\uc785 \ud074\ub798\uc2a4\ub294 \uc790\uc8fc \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc73c\uba70, \uc8fc\ub85c \ud30c\uc2f1 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\n\uc774\ub294 \ub450 \uac1c\uc758 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub97c \uacb0\ud569\ud560 \uc218 \uc788\ub294 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4 - \uccab \ubc88\uc9f8 \ud30c\uc11c\uac00 \ud30c\uc2f1\uc5d0 \uc2e4\ud328\ud558\uba74 \ub2e4\ub978 \ud30c\uc11c\ub97c \uc2dc\ub3c4\ud569\ub2c8\ub2e4.\n\ub610\ud55c \ud604\uc7ac \uc6b0\ub9ac\uc5d0\uac8c \ub3c4\uc6c0\uc774 \ub418\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"optional"),"\uacfc \uac19\uc740 \uc720\uc6a9\ud55c \ud568\uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"pSingleInput :: Parser SingleInput\npSingleInput =\n  fromMaybe Stdin <$> optional pInputFile\n\npSingleOutput :: Parser SingleOutput\npSingleOutput =\n  fromMaybe Stdout <$> optional pOutputFile\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"fromMaybe :: a -> Maybe a -> a"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec ",(0,p.kt)("inlineCode",{parentName:"p"},"Maybe")," \uac12\uc744 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\ub85c \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Nothing"),"\uc774 \uc544\ub2cc \uacbd\uc6b0\uc5d0\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"a"),"\ub97c \ubc18\ud658\ud558\uace0, ",(0,p.kt)("inlineCode",{parentName:"p"},"Nothing"),"\uc778 \uacbd\uc6b0\uc5d0\ub294 \uae30\ubcf8\uac12\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc774\uc81c \ub354 \uc801\uc808\ud55c \ud568\uc218\ub4e4\uc744 \uc0ac\uc6a9\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"pConvertSingle"),"\uc744 \ub2e4\uc2dc \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"pConvertSingle :: Parser Options\npConvertSingle =\n  ConvertSingle <$> pSingleInput <*> pSingleOutput\n")),(0,p.kt)("h4",{id:"\uba85\ub839\uacfc-\uc11c\ube0c\ud30c\uc11c"},"\uba85\ub839\uacfc \uc11c\ube0c\ud30c\uc11c"),(0,p.kt)("p",null,"\ud604\uc7ac \uc778\ud130\ud398\uc774\uc2a4\ub294 \ub450 \uac00\uc9c0 \uac00\ub2a5\ud55c \ub3d9\uc791\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n\ub2e8\uc77c \uc18c\uc2a4\ub97c \ubcc0\ud658\ud558\uac70\ub098 \ub514\ub809\ud1a0\ub9ac\ub97c \ubcc0\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\n\uc801\uc808\ud55c \ub3d9\uc791\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud55c \uc88b\uc740 \uc778\ud130\ud398\uc774\uc2a4\ub294 \uba85\ub839\uc744 \ud1b5\ud574 \uc120\ud0dd\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\n\uc0ac\uc6a9\uc790\uac00 \ub2e8\uc77c \uc18c\uc2a4\ub97c \ubcc0\ud658\ud558\ub824\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"convert"),", \ub514\ub809\ud1a0\ub9ac\ub97c \ubcc0\ud658\ud558\ub824\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"convert-dir"),"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc6b0\ub9ac\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"subparser"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"command")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"subparser :: Mod CommandFields a -> Parser a\n\ncommand :: String -> ParserInfo a -> Mod CommandFields a\n")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"subparser"),"\ub294 ",(0,p.kt)("em",{parentName:"p"},"\uba85\ub839 \uc218\uc815\uc790(command modifiers)")," (\uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"command")," \ud568\uc218\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4)\ub97c \uc785\ub825\uc73c\ub85c \ubc1b\uc544 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"command"),'\ub294 \uba85\ub839 \uc774\ub984("convert" \ub610\ub294 "convert-dir")\uacfc ',(0,p.kt)("inlineCode",{parentName:"p"},"ParserInfo a"),"\ub97c \uc785\ub825\uc73c\ub85c \ubc1b\uc544 \uba85\ub839 \uc218\uc815\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n\uc774\uc804\uc5d0 \ubcf4\uc558\ub358 \uac83\ucc98\ub7fc \uc774\ub7ec\ud55c \uc218\uc815\uc790\ub4e4\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Monoid")," \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc5ec\ub7ec \uba85\ub839\uc744 \uc635\uc158\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"ParserInfo a"),"\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"info")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"info :: Parser a -> InfoMod a -> ParserInfo a\n")),(0,p.kt)("p",null,"\uc774 \ud568\uc218\ub294 \uc8fc\uc5b4\uc9c4 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser"),"\ub97c \ub3c4\uc6c0\ub9d0, \uc124\uba85\uacfc \uac19\uc740 \ucd94\uac00\uc815\ubcf4\ub97c \uac10\uc2f8, \ud504\ub85c\uadf8\ub7a8\uacfc \uac01 \uc11c\ube0c \uba85\ub839\uc774 \ucd94\uac00\uc815\ubcf4\ub97c \ucd9c\ub825\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"ParserInfo"),"\ub294 \uc5b4\ub5bb\uac8c \ub9cc\ub4dc\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'pConvertSingleInfo :: ParserInfo Options\npConvertSingleInfo =\n  info\n    (helper <*> pConvertSingle)\n    (progDesc "Convert a single markup source to html")\n')),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"helper"),"\ub294 \ud30c\uc11c\uac00 \uc2e4\ud328\ud560 \ub54c \ucd9c\ub825\ud560 \ub3c4\uc6c0\ub9d0\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uba85\ub839\ub3c4 \uc0dd\uc131\ud574\ubd05\uc2dc\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'pConvertSingleCommand :: Mod CommandFields Options\npConvertSingleCommand =\n  command "convert" pConvertSingleInfo\n')),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"subparser"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \uc635\uc158\uc744 \uacb0\ud569\ud574 ",(0,p.kt)("inlineCode",{parentName:"p"},"Parser Options"),"\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\uc138\uc694."),(0,p.kt)("details",null,(0,p.kt)("summary",null,"\uc815\ub2f5"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'pOptions :: Parser Options\npOptions =\n  subparser\n    ( command\n      "convert"\n      ( info\n        (helper <*> pConvertSingle)\n        (progDesc "Convert a single markup source to html")\n      )\n      <> command\n      "convert-dir"\n      ( info\n        (helper <*> pConvertDir)\n        (progDesc "Convert a directory of markup files to html")\n      )\n    )\n'))),(0,p.kt)("h4",{id:"parserinfo"},"ParserInfo"),(0,p.kt)("p",null,"\uc774\uc81c \ud30c\uc11c\ub97c \uc644\uc131\ud588\uc73c\ubbc0\ub85c, ",(0,p.kt)("inlineCode",{parentName:"p"},"ParserInfo"),"\ub85c \uac10\uc2f8\uace0 \uba87 \uac00\uc9c0 \uc815\ubcf4\ub97c \ucd94\uac00\ud558\uc5ec \uc2e4\ud589\ud560 \uc900\ube44\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'opts :: ParserInfo Options\nopts =\n  info (helper <*> pOptions)\n    ( fullDesc\n      <> header "hs-blog-gen - a static blog generator"\n      <> progDesc "Convert markup files or directories to html"\n    )\n')),(0,p.kt)("h3",{id:"\ud30c\uc11c-\uc2e4\ud589\ud558\uae30"},"\ud30c\uc11c \uc2e4\ud589\ud558\uae30"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative"),"\ub294 \uc778\uc790\ub97c \ud30c\uc2f1\ud558\ub294\ub370 ",(0,p.kt)("inlineCode",{parentName:"p"},"IO"),"\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \uac00\uc7a5 \ud3b8\ub9ac\ud55c \ubc29\ubc95\uc740 \uc778\uc790\ub97c \uac00\uc838\uc624\uace0, \ud30c\uc2f1\uc744 \uc2dc\ub3c4\ud558\uace0, \uc2e4\ud328\ud558\uba74 \uc624\ub958\uc640 \ub3c4\uc6c0\ub9d0 \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud558\ub294 \uac83\uc744 ",(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative"),"\uc5d0 \ub9e1\uae30\ub294 \uac83\uc785\ub2c8\ub2e4.\n\uc774\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"execParser :: ParserInfo a -> IO a")," \ud568\uc218\ub85c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc0c8\ub85c\uc6b4 \ubaa8\ub4c8\uc5d0 \uc774\ub7ec\ud55c \uc635\uc158\uc744 \ud30c\uc2f1\ud558\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uace0, ",(0,p.kt)("inlineCode",{parentName:"p"},"app/Main.hs"),"\uc5d0\uc11c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub2e4\uc74c\uc740 \uc9c0\uae08\uae4c\uc9c0 \uc791\uc5c5\ud55c \ucf54\ub4dc\uc785\ub2c8\ub2e4:"),(0,p.kt)("details",null,(0,p.kt)("summary",null,"app/OptParse.hs"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | \uba85\ub839\uc904 \uc635\uc158 \ud30c\uc2f1\n\nmodule OptParse\n  ( Options(..)\n  , SingleInput(..)\n  , SingleOutput(..)\n  , parse\n  )\n  where\n\nimport Data.Maybe (fromMaybe)\nimport Options.Applicative\n\n------------------------------------------------\n-- * \uba85\ub839\uc904 \uc635\uc158 \ubaa8\ub378\n\n-- | \ubaa8\ub378\ndata Options\n  = ConvertSingle SingleInput SingleOutput\n  | ConvertDir FilePath FilePath\n  deriving Show\n\n-- | \ub2e8\uc77c \uc785\ub825 \uc18c\uc2a4\ndata SingleInput\n  = Stdin\n  | InputFile FilePath\n  deriving Show\n\n-- | \ub2e8\uc77c \ucd9c\ub825 sink\ndata SingleOutput\n  = Stdout\n  | OutputFile FilePath\n  deriving Show\n\n------------------------------------------------\n-- * Parser\n\n-- | \uba85\ub839\uc904 \uc635\uc158 \ud30c\uc2f1\nparse :: IO Options\nparse = execParser opts\n\nopts :: ParserInfo Options\nopts =\n  info (pOptions <**> helper)\n    ( fullDesc\n      <> header "hs-blog-gen - a static blog generator"\n      <> progDesc "Convert markup files or directories to html"\n    )\n\n-- | \ubaa8\ub4e0 \uc635\uc158\uc5d0 \ub300\ud55c \ud30c\uc11c\npOptions :: Parser Options\npOptions =\n  subparser\n    ( command\n      "convert"\n      ( info\n        (helper <*> pConvertSingle)\n        (progDesc "Convert a single markup source to html")\n      )\n      <> command\n      "convert-dir"\n      ( info\n        (helper <*> pConvertDir)\n        (progDesc "Convert a directory of markup files to html")\n      )\n    )\n\n------------------------------------------------\n-- * \ub2e8\uc77c \uc18c\uc2a4\ub97c \uc704\ud55c \ud30c\uc11c\n\n-- | \ub2e8\uc77c \uc18c\uc2a4\ub97c \uc704\ud55c \uc635\uc158 \ud30c\uc11c\npConvertSingle :: Parser Options\npConvertSingle =\n  ConvertSingle <$> pSingleInput <*> pSingleOutput\n\n-- | \ub2e8\uc77c \uc785\ub825 \uc18c\uc2a4\ub97c \uc704\ud55c \ud30c\uc11c\npSingleInput :: Parser SingleInput\npSingleInput =\n  fromMaybe Stdin <$> optional pInputFile\n\n-- | \ub2e8\uc77c \ucd9c\ub825 sink\ub97c \uc704\ud55c \ud30c\uc11c\npSingleOutput :: Parser SingleOutput\npSingleOutput =\n  fromMaybe Stdout <$> optional pOutputFile\n\n-- | \uc785\ub825 \ud30c\uc77c \ud30c\uc11c\npInputFile :: Parser SingleInput\npInputFile = fmap InputFile parser\n  where\n    parser =\n      strOption\n        ( long "input"\n          <> short \'i\'\n          <> metavar "FILE"\n          <> help "Input file"\n        )\n\n-- | \ucd9c\ub825 \ud30c\uc77c \ud30c\uc11c\npOutputFile :: Parser SingleOutput\npOutputFile = OutputFile <$> parser\n  where\n    parser =\n      strOption\n        ( long "output"\n          <> short \'o\'\n          <> metavar "FILE"\n          <> help "Output file"\n        )\n\n------------------------------------------------\n-- * \ub514\ub809\ud1a0\ub9ac \ubcc0\ud658 \ud30c\uc11c\n\npConvertDir :: Parser Options\npConvertDir =\n  ConvertDir <$> pInputDir <*> pOutputDir\n\n-- | \uc785\ub825 \ub514\ub809\ud1a0\ub9ac \ud30c\uc11c\npInputDir :: Parser FilePath\npInputDir =\n  strOption\n    ( long "input"\n      <> short \'i\'\n      <> metavar "DIRECTORY"\n      <> help "Input directory"\n    )\n\n-- | \ucd9c\ub825 \ub514\ub809\ud1a0\ub9ac \ud30c\uc11c\npOutputDir :: Parser FilePath\npOutputDir =\n  strOption\n    ( long "output"\n      <> short \'o\'\n      <> metavar "DIRECTORY"\n      <> help "Output directory"\n    )\n'))),(0,p.kt)("h3",{id:"options\uc5d0-\ub300\ud55c-\ud328\ud134-\ub9e4\uce6d"},"Options\uc5d0 \ub300\ud55c \ud328\ud134 \ub9e4\uce6d"),(0,p.kt)("p",null,"\uba85\ub839\uc904 \ud30c\uc11c\ub97c \uc2e4\ud589\ud558\uace0 \ub098\uba74, \ubaa8\ub378\uc5d0 \ub300\ud55c \ud328\ud134 \ub9e4\uce6d\uc744 \ud1b5\ud574 \uc62c\ubc14\ub978 \ud568\uc218\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud604\uc7ac \ud504\ub85c\uadf8\ub7a8\uc740 \uc774\ub7ec\ud55c \uc885\ub958\uc758 API\ub97c \ub178\ucd9c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\ub530\ub77c\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"src/HsBlog.hs")," \ubaa8\ub4c8\ub85c \uc774\ub3d9\ud558\uace0 API\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"main"),"\uc744 \uc0ad\uc81c\ud558\uace0 \ub300\uc2e0 \ub450 \uac1c\uc758 \uc0c8 \ud568\uc218\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"convertSingle :: Html.Title -> Handle -> Handle -> IO ()\n\nconvertDirectory :: FilePath -> FilePath -> IO ()\n")),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/System-IO.html#t:Handle"},(0,p.kt)("inlineCode",{parentName:"a"},"Handle")),"\n\uc740 \ud30c\uc77c \uc2dc\uc2a4\ud15c \uac1d\uccb4\uc5d0 \ub300\ud55c I/O \ucd94\uc0c1\ud654\uc785\ub2c8\ub2e4. ",(0,p.kt)("inlineCode",{parentName:"p"},"stdin"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"stdout"),"\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.\n\uc774\uc804\uc5d0\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"writeFile"),"\uacfc ",(0,p.kt)("inlineCode",{parentName:"p"},"getContents"),"\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. - \uc774 \ud568\uc218\ub4e4\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"Handle"),"\uc774 \ud45c\uc900 I/O\ub77c\uace0 \uac00\uc815\ud558\uac70\ub098, ",(0,p.kt)("inlineCode",{parentName:"p"},"FilePath"),"\ub97c \uc5f4\uace0 \uc791\uc5c5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\uc81c\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"System.IO"),"\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"Handle"),"\uc744 \uac00\uc838\uc624\ub294 \uba85\uc2dc\uc801\uc778 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},"convertSingle :: Html.Title -> Handle -> Handle -> IO ()\nconvertSingle title input output = do\n  content <- hGetContents input\n  hPutStrLn output (process title content)\n")),(0,p.kt)("p",null,"\uc9c0\uae08\uc740 ",(0,p.kt)("inlineCode",{parentName:"p"},"convertDirectory"),"\uc758 \uad6c\ud604\uc740 \ub0a8\uaca8\ub450\uace0, \ub2e4\uc74c \uc7a5\uc5d0\uc11c \uad6c\ud604\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"app/Main.hs"),"\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"Options"),"\uc5d0 \ub300\ud55c \ud328\ud134 \ub9e4\uce6d\uc774 \ud544\uc694\ud558\uba70 ",(0,p.kt)("inlineCode",{parentName:"p"},"HsBlog"),"\uc758 \ud568\uc218\ub4e4\uc744 \ud638\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"app/Main.hs"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"src/HsBlog.hs"),"\uc758 \uc804\uccb4 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,p.kt)("details",null,(0,p.kt)("summary",null,"app/Main.hs"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | hs-blog-gen \ud504\ub85c\uadf8\ub7a8\uc758 \uc9c4\uc785\uc810\n\nmodule Main where\n\nimport OptParse\nimport qualified HsBlog\n\nimport System.Exit (exitFailure)\nimport System.Directory (doesFileExist)\nimport System.IO\n\nmain :: IO ()\nmain = do\n  options <- parse\n  case options of\n    ConvertDir input output ->\n      HsBlog.convertDirectory input output\n\n    ConvertSingle input output -> do\n      (title, inputHandle) <-\n        case input of\n          Stdin ->\n            pure ("", stdin)\n          InputFile file ->\n            (,) file <$> openFile file ReadMode\n\n      outputHandle <-\n        case output of\n          Stdout -> pure stdout\n          OutputFile file -> do\n            exists <- doesFileExist file\n            shouldOpenFile <-\n              if exists\n                then confirm\n                else pure True\n            if shouldOpenFile\n              then\n                openFile file WriteMode\n              else\n                exitFailure\n\n      HsBlog.convertSingle title inputHandle outputHandle\n      hClose inputHandle\n      hClose outputHandle\n\n------------------------------------------------\n-- * Utilities\n\n-- | Confirm user action\nconfirm :: IO Bool\nconfirm =\n  putStrLn "Are you sure? (y/n)" *>\n    getLine >>= \\answer ->\n      case answer of\n        "y" -> pure True\n        "n" -> pure False\n        _ -> putStrLn "Invalid response. use y or n" *>\n          confirm\n'))),(0,p.kt)("details",null,(0,p.kt)("summary",null,"src/HsBlog.hs"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-haskell"},'-- HsBlog.hs\nmodule HsBlog\n  ( convertSingle\n  , convertDirectory\n  , process\n  )\n  where\n\nimport qualified HsBlog.Markup as Markup\nimport qualified HsBlog.Html as Html\nimport HsBlog.Convert (convert)\n\nimport System.IO\n\nconvertSingle :: Html.Title -> Handle -> Handle -> IO ()\nconvertSingle title input output = do\n  content <- hGetContents input\n  hPutStrLn output (process title content)\n\nconvertDirectory :: FilePath -> FilePath -> IO ()\nconvertDirectory = error "Not implemented"\n\nprocess :: Html.Title -> String -> String\nprocess title = Html.render . convert title . Markup.parse\n'))),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},".cabal")," \ud30c\uc77c\uc5d0 \uba87 \uac00\uc9c0 \uc791\uc740 \uc218\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uba3c\uc800, ",(0,p.kt)("inlineCode",{parentName:"p"},"executable")," \uc139\uc158\uc5d0 ",(0,p.kt)("inlineCode",{parentName:"p"},"directory")," \uc758\uc874\uc131\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.\n\uc65c\ub0d0\ud558\uba74 ",(0,p.kt)("inlineCode",{parentName:"p"},"Main"),"\uc5d0\uc11c ",(0,p.kt)("inlineCode",{parentName:"p"},"System.Directory")," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,p.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c, ",(0,p.kt)("inlineCode",{parentName:"p"},"OptParse")," \ubaa8\ub4c8\uc744 ",(0,p.kt)("inlineCode",{parentName:"p"},"executable")," \uc139\uc158\uc758 ",(0,p.kt)("inlineCode",{parentName:"p"},"other-modules"),"\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-diff"}," executable hs-blog-gen\n   import: common-settings\n   hs-source-dirs: app\n   main-is: Main.hs\n+  other-modules:\n+    OptParse\n   build-depends:\n       base\n+    , directory\n     , optparse-applicative\n     , hs-blog\n   ghc-options:\n     -O\n")),(0,p.kt)("h2",{id:"\uc694\uc57d"},"\uc694\uc57d"),(0,p.kt)("p",null,"\uc9c0\uae08\uae4c\uc9c0 ",(0,p.kt)("inlineCode",{parentName:"p"},"optparse-applicative")," \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \ub300\ud574 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.\n\uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc120\uc5b8\uc801\uc778 \ubc29\ubc95\uc73c\ub85c \uac15\ub825\ud55c \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub9cc\ub4dc\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,p.kt)("inlineCode",{parentName:"p"},"hs-blog-gen --help")," (\ub610\ub294 \uc774\uc804 \uc7a5\uc5d0\uc11c \ub17c\uc758\ud55c ",(0,p.kt)("inlineCode",{parentName:"p"},"cabal"),"/",(0,p.kt)("inlineCode",{parentName:"p"},"stack")," \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud574\uc11c)\ub97c \uc2e4\ud589\ud574, \uacb0\uacfc\ub97c \ud655\uc778\ud574 \ubcf4\uc138\uc694:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"hs-blog-gen - a static blog generator\n\nUsage: hs-blog-gen COMMAND\n  Convert markup files or directories to html\n\nAvailable options:\n  -h,--help                Show this help text\n\nAvailable commands:\n  convert                  Convert a single markup source to html\n  convert-dir              Convert a directory of markup files to html\n")),(0,p.kt)("p",null,"\uadf8\ub3d9\uc548 \uc6b0\ub9ac\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"Functor"),"\uc640 ",(0,p.kt)("inlineCode",{parentName:"p"},"Applicative"),"\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uac15\ub825\ud55c \uc0c8\ub85c\uc6b4 \ucd94\uc0c1\ud654\ub97c \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.\n\ub610\ud55c ",(0,p.kt)("inlineCode",{parentName:"p"},"Monoid"),"\ub77c\ub294 \ucd94\uc0c1\ud654\ub97c \ub2e4\uc2dc \uc0b4\ud3b4\ubcf4\uc558\uc2b5\ub2c8\ub2e4.\n\uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud1b5\ud574 \uc774\ub7ec\ud55c \ucd94\uc0c1\ud654\uac00 API\uc640 DSL\uc744 \uad6c\ucd95\ud558\ub294 \ub370 \uc5bc\ub9c8\ub098 \uc720\uc6a9\ud55c\uc9c0 \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4."),(0,p.kt)("p",null,"\uc6b0\ub9ac\ub294 \uc774 \ucc45\uc758 \ub098\uba38\uc9c0 \ubd80\ubd84\uc5d0\uc11c \uc774\ub7ec\ud55c \ucd94\uc0c1\ud654\ub97c \uacc4\uc18d \ub9cc\ub098\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4."),(0,p.kt)("hr",null),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\ucd94\uac00 \uc5f0\uc2b5\ubb38\uc81c"),": \ucd9c\ub825 \ud30c\uc77c\uc774\ub098 \ub514\ub809\ud1a0\ub9ac\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ub36e\uc5b4\uc368\ub3c4 \uad1c\ucc2e\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud558\ub294 ",(0,p.kt)("inlineCode",{parentName:"p"},"--replace")," \ud50c\ub798\uadf8\ub97c \ucd94\uac00\ud558\uc138\uc694."),(0,p.kt)("hr",null),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"Git \ucee4\ubc0b\uc744 \ud1b5\ud574\n",(0,p.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/commit/d0d76aad632fe3abd8701e44db5ba687e0c7ac96"},"\uc774\ubc88\uc5d0 \uc218\uc815\ud55c \ub0b4\uc5ed"),"\n\uacfc ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/tree/d0d76aad632fe3abd8701e44db5ba687e0c7ac96"},"\ud604\uc7ac\uae4c\uc9c0 \ucf54\ub4dc")," \ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")))}m.isMDXComponent=!0}}]);