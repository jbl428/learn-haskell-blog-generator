"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[114],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),m=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),k=m(n),s=a,u=k["".concat(o,".").concat(s)]||k[s]||d[s]||l;return n?r.createElement(u,p(p({ref:t},c),{},{components:n})):r.createElement(u,p({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,p=new Array(l);p[0]=s;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[k]="string"==typeof e?e:a,p[1]=i;for(var m=2;m<l;m++)p[m]=n[m];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7241:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const l={},p="Either\uc640 IO",i={unversionedId:"errors_and_files/except",id:"errors_and_files/except",title:"Either\uc640 IO",description:"I/O\ub97c \uc694\uad6c\ud558\ub294 IO \uc561\uc158\uc744 \ub9cc\ub4e4 \ub54c\ub294 \ub2e4\uc591\ud55c \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.",source:"@site/docs/06-errors_and_files/02-except.md",sourceDirName:"06-errors_and_files",slug:"/errors_and_files/except",permalink:"/learn-haskell-blog-generator/errors_and_files/except",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/06-errors_and_files/02-except.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Either\ub97c \ud65c\uc6a9\ud55c \uc5d0\ub7ec \ucc98\ub9ac",permalink:"/learn-haskell-blog-generator/errors_and_files/either"},next:{title:"Exceptions",permalink:"/learn-haskell-blog-generator/errors_and_files/exceptions"}},o={},m=[{value:"ExceptT\ub97c \uc0ac\uc6a9\ud55c IO + Either \ud569\uc131",id:"exceptt\ub97c-\uc0ac\uc6a9\ud55c-io--either-\ud569\uc131",level:2}],c={toc:m},k="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"either\uc640-io"},"Either\uc640 IO"),(0,a.kt)("p",null,"I/O\ub97c \uc694\uad6c\ud558\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," \uc561\uc158\uc744 \ub9cc\ub4e4 \ub54c\ub294 \ub2e4\uc591\ud55c \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uba74, ",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile"),"\uc744 \uc0ac\uc6a9\ud560 \ub54c \ud30c\uc77c\uc744 \uc4f0\ub294 \uc911\uc5d0 \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud574\uc9c8 \uc218 \uc788\uace0, \ud30c\uc77c\uc774 \uc4f0\uae30 \ubcf4\ud638\ub418\uc5b4 \uc788\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \uc0c1\ud669\uc740 \ud754\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc740 \uc5b8\uc81c\ub098 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"readFile"),"\uacfc ",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile"),"\uacfc \uac19\uc740 \ud558\uc2a4\ucf08 \ud568\uc218\ub97c ",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\ub97c \ubc18\ud658\ud558\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," \uc5f0\uc0b0\uc73c\ub85c \ubc14\uafd4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"readFile :: FilePath -> IO (Either ReadFileError String)\nwriteFile :: FilePath -> String -> IO (Either WriteFileError ())\n")),(0,a.kt)("p",null,"\ud558\uc9c0\ub9cc \uc5ec\uae30\uc5d0\ub294 \uba87 \uac00\uc9c0 \ubb38\uc81c\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\uccab \ubc88\uc9f8\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," \uc561\uc158\uc744 \ud569\uc131\ud558\ub294 \uac83\uc774 \ub354 \uc5b4\ub824\uc6cc\uc9c4\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.\n\uc774\uc804\uc5d0 \uc791\uc131\ud55c \ub2e4\uc74c \ucf54\ub4dc\ub294"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},'readFile "input.txt" >>= writeFile "output.html"\n')),(0,a.kt)("p",null,"\uc774\uc81c\ub294 \ud0c0\uc785\uc774 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 - ",(0,a.kt)("inlineCode",{parentName:"p"},"readFile"),"\uc740 \uc2e4\ud589\ub420 \ub54c ",(0,a.kt)("inlineCode",{parentName:"p"},"Either ReadFileError String"),"\uc744 \ubc18\ud658\ud558\uc9c0\ub9cc,\n",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile"),"\uc740 ",(0,a.kt)("inlineCode",{parentName:"p"},"String"),"\uc744 \uc785\ub825\uc73c\ub85c \ubc1b\uc2b5\ub2c8\ub2e4.\n\ub530\ub77c\uc11c ",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile"),"\ub97c \ud638\ucd9c\ud558\uae30 \uc804\uc5d0 \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"exceptt\ub97c-\uc0ac\uc6a9\ud55c-io--either-\ud569\uc131"},"ExceptT\ub97c \uc0ac\uc6a9\ud55c IO + Either \ud569\uc131"),(0,a.kt)("p",null,"\uc774\ub97c \ud574\uacb0\ud558\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 ",(0,a.kt)("strong",{parentName:"p"},"monad transformer"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\nMonad transformer\ub294 ",(0,a.kt)("strong",{parentName:"p"},"monad \uae30\ub2a5\uc744 \ud558\ub098\uc529 \uc313\uc544 \uc62c\ub9b4 \uc218 \uc788\ub294 \ubc29\ubc95"),"\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\uc774\ub984\uc774 transformer\uc778 \uc774\uc720\ub294 ",(0,a.kt)("strong",{parentName:"p"},"monad \uc778\uc2a4\ud134\uc2a4\ub97c \uc785\ub825\uc73c\ub85c \ubc1b\uc544 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc744 \uc313\uc544 \uc62c\ub9b0 \uc0c8\ub85c\uc6b4 monad \ud0c0\uc785\uc744 \ubc18\ud658\ud558\uae30 \ub54c\ubb38"),"\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4, ",(0,a.kt)("inlineCode",{parentName:"p"},"IO (Either Error a)"),"\uc640 \uac19\uc740 \ud0c0\uc785\uc758 \uac12\uc744 monadic \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud569\uc131\ud558\uace0 \uc2f6\ub2e4\uace0 \uac00\uc815\ud574\ubd05\uc2dc\ub2e4.\n\uc774\ub97c \uc704\ud574 ",(0,a.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Except.html#g:2"},(0,a.kt)("inlineCode",{parentName:"a"},"ExceptT")),"\ub77c\ub294 monad transformer\ub97c \uc0ac\uc6a9\ud558\uc5ec ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," \uc704\uc5d0 \uc313\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT"),"\uc758 \uc815\uc758\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"newtype ExceptT e m a = ExceptT (m (Either e a))\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"newtype"),"\uc740 \uae30\uc874 \ud0c0\uc785\uc758 \uc0c8\ub85c\uc6b4 \uc774\ub984\uc744 \ub9cc\ub4dc\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"e"),"\ub97c ",(0,a.kt)("inlineCode",{parentName:"p"},"Error"),"\ub85c, ",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"\uc744 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),"\ub85c \ubc14\uafb8\uba74 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \uac83\uacfc \uc815\ud655\ud788 \uc77c\uce58\ud558\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO (Either Error a)"),"\uac00 \ub429\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 ",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT Error IO a"),"\ub97c ",(0,a.kt)("inlineCode",{parentName:"p"},"IO (Either Error a)"),"\ub85c \ubcc0\ud658\ud558\ub294 \ud568\uc218 ",(0,a.kt)("inlineCode",{parentName:"p"},"runExceptT"),"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"runExceptT :: ExceptT e m a -> m (Either e a)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT"),"\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\uc758 \uae30\ub2a5\uacfc \uc784\uc758\uc758 ",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"\uc758 \uae30\ub2a5\uc744 \uacb0\ud569\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \ubaa8\ub098\ub4dc \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT e m"),"\uc740 ",(0,a.kt)("inlineCode",{parentName:"p"},"Monad")," \uc778\uc2a4\ud134\uc2a4\uc774\ubbc0\ub85c, \ud2b9\uc218\ud654\ub41c ",(0,a.kt)("inlineCode",{parentName:"p"},">>="),"\uc758 \uad6c\ud604\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"-- \uc77c\ubc18\uc801\uc778 \ubc84\uc804\n(>>=) :: Monad m => m a -> (a -> m b) -> m b\n\n-- \ud2b9\uc218\ud654\ub41c \ubc84\uc804, \uc704\uc758 `m`\uc744 `ExceptT e m`\uc73c\ub85c \ubc14\uafb8\uba74 \ub429\ub2c8\ub2e4.\n(>>=) :: Monad m => ExceptT e m a -> (a -> ExceptT e m b) -> ExceptT e m b\n")),(0,a.kt)("p",null,"\ud2b9\uc218\ud654\ub41c \ubc84\uc804\uc5d0\uc11c\uc758 ",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"\uc740 \uc5ec\uc804\ud788 ",(0,a.kt)("inlineCode",{parentName:"p"},"Monad")," \uc778\uc2a4\ud134\uc2a4\uc5ec\uc57c \ud569\ub2c8\ub2e4."),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\ub2e4\uba74, ",(0,a.kt)("inlineCode",{parentName:"p"},"IO (Either Error a)"),"\uc758 ",(0,a.kt)("inlineCode",{parentName:"p"},">>="),"\ub97c \uad6c\ud604\ud574\ubcf4\uc138\uc694:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"bindExceptT :: IO (Either Error a) -> (a -> IO (Either Error b)) -> IO (Either Error b)\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\uc815\ub2f5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"bindExceptT :: IO (Either Error a) -> (a -> IO (Either Error b)) -> IO (Either Error b)\nbindExceptT mx f = do\n  x <- mx -- `x`\uc758 \ud0c0\uc785\uc740 `Either Error a`\uc785\ub2c8\ub2e4.\n  case x of\n    Left err -> pure (Left err)\n    Right y -> f y\n")),(0,a.kt)("p",null,"\uc5ec\uae30\uc11c ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," \ub610\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),"\uc758 \uad6c\ud604 \uc138\ubd80 \uc0ac\ud56d\uc744 \uc2e4\uc81c\ub85c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"Error"),"\ub294 \uc804\ud600 \uc5b8\uae09\ub418\uc9c0 \uc54a\uc558\uace0, ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),"\uc5d0 \ub300\ud574\uc11c\ub294 do \ud45c\uae30\ubc95\uacfc \ud568\uaed8 \ubaa8\ub098\ub4dc \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.\n\ub530\ub77c\uc11c \ub354 \uc77c\ubc18\ud654\ub41c \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub85c \ub3d9\uc77c\ud55c \ud568\uc218\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"bindExceptT :: Monad m => m (Either e a) -> (a -> m (Either e b)) -> m (Either e b)\nbindExceptT mx f = do\n  x <- mx -- `x` has the type `Either e a`\n  case x of\n    Left err -> pure (Left err)\n    Right y -> f y\n")),(0,a.kt)("p",null,"\uadf8\ub9ac\uace0 ",(0,a.kt)("inlineCode",{parentName:"p"},"newtype ExceptT e m a = ExceptT (m (Either e a))"),"\uc774\uae30 \ub54c\ubb38\uc5d0\n",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT")," \uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud574 \uac10\uc300 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"bindExceptT :: Monad m => ExceptT e m a -> (a -> ExceptT e m b) -> ExceptT e m b\nbindExceptT mx f = ExceptT $ do\n  -- `runExceptT mx`\uc758 \ud0c0\uc785\uc740 `m (Either e a)`\uc785\ub2c8\ub2e4.\n  -- `x`\uc758 \ud0c0\uc785\uc740 `Either e a`\uc785\ub2c8\ub2e4.\n  x <- runExceptT mx\n  case x of\n    Left err -> pure (Left err)\n    Right y -> runExceptT (f y)\n"))),(0,a.kt)("hr",null),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"monad transformer\ub97c \uc313\uc744 \ub54c, \uc313\ub294 \uc21c\uc11c\uac00 \uc911\uc694\ud558\ub2e4\ub294 \uc810\uc744 \uae30\uc5b5\ud558\uc138\uc694.\n",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT Error IO a"),"\uc744 \uc0ac\uc6a9\ud558\uba74, ",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\ub97c \ubc18\ud658\ud558\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"IO")," \uc5f0\uc0b0\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT"),"\ub294 \ub450 \uac00\uc9c0 \uacbd\uc6b0\ub97c \ubaa8\ub450 \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. - ",(0,a.kt)("inlineCode",{parentName:"p"},"throwError")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ub958 \uac12\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"throwError :: e -> ExceptT e m a\n")),(0,a.kt)("p",null,"\uadf8\ub9ac\uace0 monadic \ud0c0\uc785 ",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"\uc758 \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ub04c\uc5b4\uc62c\ub824(",(0,a.kt)("inlineCode",{parentName:"p"},"lift"),"), ",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT e m a"),"\ub97c \ubc18\ud658\ud558\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"lift :: m a -> ExceptT e m a\n")),(0,a.kt)("p",null,"\uc608\ub97c \ub4e4\uba74:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"getLine :: IO String\n\nlift getLine :: ExceptT e IO String\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"lift"),"\ub294 \uc0ac\uc2e4 ",(0,a.kt)("inlineCode",{parentName:"p"},"MonadTrans"),"\uc758 \ud0c0\uc785 \ud074\ub798\uc2a4 \ud568\uc218\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"MonadTrans"),"\ub294 monad transformer\uc758 \ud0c0\uc785 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4.\n\ub530\ub77c\uc11c \uc815\ud655\ud55c \ud0c0\uc785\uc740 ",(0,a.kt)("inlineCode",{parentName:"p"},"lift getLine :: MonadTrans t => t IO String"),"\uc774\uc9c0\ub9cc, > \uc5ec\uae30\uc11c\ub294 \uc774\ud574\ub97c \ub3d5\uae30 \uc704\ud574 \uad6c\uccb4\ud654\ud588\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc774\uc81c \ub2e4\uc74c\uc758 \uacbd\uc6b0:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},"readFile :: FilePath -> ExceptT IOError IO String\n\nwriteFile :: FilePath -> String -> ExceptT IOError IO ()\n")),(0,a.kt)("p",null,"\ubb38\uc81c \uc5c6\uc774 \ud569\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-haskell"},'readFile "input.txt" >>= writeFile "ouptut.html"\n')),(0,a.kt)("p",null,"\uc5ec\uae30\uc11c \uc8fc\uc758\ud574\uc57c \ud560 \uc810\uc740 \uc5d0\ub7ec \ud0c0\uc785 ",(0,a.kt)("inlineCode",{parentName:"p"},"e"),"\uac00 (",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\uc640 ",(0,a.kt)("inlineCode",{parentName:"p"},"Except")," \ubaa8\ub450) \uac01 \ud568\uc218 \ub0b4\uc5d0\uc11c \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4!\n\uc774\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"readFile"),"\uacfc ",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile")," \ubaa8\ub450 \uc5d0\ub7ec\ub97c \ub098\ud0c0\ub0b4\ub294 \ud0c0\uc785\uc774 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\n\ub530\ub77c\uc11c \uc774\ub7ec\ud55c \ud568\uc218\uc758 \uc0ac\uc6a9\uc790\uac00 \ub3d9\uc77c\ud55c \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud574\uc57c \ud568\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"writeFile"),'\uc744 \ud638\ucd9c\ud55c \uc0ac\uc6a9\uc790\ub294 "\ud30c\uc77c\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc74c" \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud574\uc57c \ud560\uae4c\uc694?\n',(0,a.kt)("inlineCode",{parentName:"p"},"readFile"),'\uc744 \ud638\ucd9c\ud55c \uc0ac\uc6a9\uc790\ub294 "\ub514\uc2a4\ud06c \uacf5\uac04 \ubd80\uc871" \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud574\uc57c \ud560\uae4c\uc694?\n"\ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0 \ubd88\uac00", "\uba54\ubaa8\ub9ac \ubd80\uc871", "\ucde8\uc18c\ub41c \uc2a4\ub808\ub4dc" \ub4f1 \uc774 \uc678\uc5d0 \uc218\ub9ce\uc740 IO \uc5d0\ub7ec\uac00 \uc788\uc2b5\ub2c8\ub2e4!\n\uc0ac\uc6a9\uc790\uac00 \uc774\ub7ec\ud55c \ubaa8\ub4e0 \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud558\ub3c4\ub85d \uc694\uad6c\ud560 \uc218\ub294 \uc5c6\uc73c\uba70, \ub370\uc774\ud130 \ud0c0\uc785\uc5d0\uc11c \uc774\ub7ec\ud55c \ubaa8\ub4e0 \uc5d0\ub7ec\ub97c \ub2e4\ub8f0 \uc218\ub3c4 \uc5c6\uc2b5\ub2c8\ub2e4.'),(0,a.kt)("p",null,"\uadf8\ub807\ub2e4\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud560\uae4c\uc694?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"IO \ucf54\ub4dc\uc5d0 \ub300\ud574\uc11c\ub294")," \uc774\ub7ec\ud55c \uc811\uadfc \ubc29\uc2dd\uc744 \ud3ec\uae30\ud558\uace0, Exceptions \ub77c\ub294 \ub2e4\ub978 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\ub2e4\uc74c \uc7a5\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\ub9cc\uc57d ",(0,a.kt)("inlineCode",{parentName:"p"},"ExceptT"),"\ub97c\n",(0,a.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Data-Functor-Identity.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Identity")),"\n\ub77c \ubd88\ub9ac\ub294 \ub2e4\ub978 \ud0c0\uc785 \uc704\uc5d0 \uc313\ub294\ub2e4\uba74,\n",(0,a.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/transformers-0.6.0.2/docs/Control-Monad-Trans-Except.html#t:Except"},(0,a.kt)("inlineCode",{parentName:"a"},"Except")),"\n\ub77c\ub294 \uc774\ub984(\ub05d\uc5d0 ",(0,a.kt)("inlineCode",{parentName:"p"},"T"),"\uac00 \uc5c6\uc2b5\ub2c8\ub2e4)\uc758 ",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\uc640 \ub3d9\uc77c\ud55c \ud0c0\uc785\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,a.kt)("inlineCode",{parentName:"p"},"Except"),"\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"Either"),"\ubcf4\ub2e4 \ub354 \uc801\uc808\ud55c \uc774\ub984\uacfc \uc5d0\ub7ec \ucc98\ub9ac\ub97c \uc704\ud55c \ub354 \ub098\uc740 API\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0\n",(0,a.kt)("inlineCode",{parentName:"p"},"Either")," \ub300\uc2e0 ",(0,a.kt)("inlineCode",{parentName:"p"},"Except"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \uc88b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")))}d.isMDXComponent=!0}}]);