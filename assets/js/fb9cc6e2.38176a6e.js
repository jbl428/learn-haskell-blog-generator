"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[950],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=r,u=c["".concat(p,".").concat(m)]||c[m]||k[m]||o;return t?a.createElement(u,i(i({ref:n},d),{},{components:t})):a.createElement(u,i({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},349:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={},i="\uc608\uc678",l={unversionedId:"errors_and_files/exceptions",id:"errors_and_files/exceptions",title:"\uc608\uc678",description:"Control.Exception",source:"@site/docs/06-errors_and_files/03-exceptions.md",sourceDirName:"06-errors_and_files",slug:"/errors_and_files/exceptions",permalink:"/learn-haskell-blog-generator/errors_and_files/exceptions",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/06-errors_and_files/03-exceptions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Either\uc640 IO",permalink:"/learn-haskell-blog-generator/errors_and_files/except"},next:{title:"Lets code already!",permalink:"/learn-haskell-blog-generator/errors_and_files/implementation"}},p={},s=[{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2}],d={toc:s},c="wrapper";function k(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\uc608\uc678"},"\uc608\uc678"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html"},"Control.Exception"),"\n\ubaa8\ub4c8\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"IO")," \ucf54\ub4dc\uc5d0\uc11c \uc608\uc678\ub97c\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#v:throwIO"},"throw"),"\n\ud558\uace0,\n",(0,r.kt)("inlineCode",{parentName:"p"},"IO")," \ucf54\ub4dc\uc5d0\uc11c \ud558\uc2a4\ucf08 \uc608\uc678\ub97c\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#g:5"},(0,r.kt)("inlineCode",{parentName:"a"},"catch")),"\n\ud558\uace0, \uc2ec\uc9c0\uc5b4 ",(0,r.kt)("inlineCode",{parentName:"p"},"IO (Either ...)"),"\ub85c \ubcc0\ud658\ud558\ub294 \ud568\uc218\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#g:7"},(0,r.kt)("inlineCode",{parentName:"a"},"try")),"\n\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"throwIO :: Exception e => e -> IO a\n\ncatch\n  :: Exception e\n  => IO a         -- \uc2e4\ud589\ud558\ub824\ub294 \uacc4\uc0b0\n  -> (e -> IO a)  -- \uc608\uc678\uac00 \ubc1c\uc0dd\ud558\uba74 \ud638\ucd9c\ud560 \ud578\ub4e4\ub7ec\n  -> IO a\n\ntry :: Exception e => IO a -> IO (Either e a)\n")),(0,r.kt)("p",null,"\uc704 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\uc5d0\uc11c \uc911\uc694\ud55c \ubd80\ubd84\uc740\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#t:Exception"},(0,r.kt)("inlineCode",{parentName:"a"},"Exception")),"\n\ud0c0\uc785 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4.\n\ud0c0\uc785\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"Exception")," \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \ub9cc\ub4e4\uba74, ",(0,r.kt)("inlineCode",{parentName:"p"},"IO")," \ucf54\ub4dc\uc5d0\uc11c \uc608\uc678\ub97c \ub358\uc9c0\uace0 \uc7a1\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'{-# language LambdaCase #-}\n\nimport Control.Exception\nimport System.IO\n\ndata MyException\n  = ErrZero\n  | ErrOdd Int\n  deriving Show\n\ninstance Exception MyException\n\nsayDiv2 :: Int -> IO ()\nsayDiv2 n\n  | n == 0 = throwIO ErrZero\n  | n `mod` 2 /= 0 = throwIO (ErrOdd n)\n  | otherwise = print (n `div` 2)\n\nmain :: IO ()\nmain =\n  catch\n    ( do\n      putStrLn "Going to print a number now."\n      sayDiv2 7\n      putStrLn "Did you like it?"\n    )\n    ( \\case\n      ErrZero ->\n        hPutStrLn stderr "Error: we don\'t support dividing zeroes for some reason"\n      ErrOdd n ->\n        hPutStrLn stderr ("Error: " <> show n <> " is odd and cannot be divided by 2")\n    )\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ucc38\uace0: \uc5ec\uae30\uc11c \ub450 \uac00\uc9c0 \uc0c8\ub85c\uc6b4 \uac83\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4: guard\uc640 ",(0,r.kt)("inlineCode",{parentName:"p"},"LambdaCase")," \uc5b8\uc5b4 \ud655\uc7a5\uc785\ub2c8\ub2e4."),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sayDiv2"),"\uc5d0\uc11c \ubcf8 guard\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"if-then-else")," \ud45c\ud604\uc2dd\uc758 \ub354 \ub098\uc740 \ubb38\ubc95\uc785\ub2c8\ub2e4.\nguard\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec ",(0,r.kt)("inlineCode",{parentName:"p"},"if")," \ubd84\uae30\ub97c \uac00\uc9c8 \uc218 \uc788\uace0, \ub9c8\uc9c0\ub9c9\uc73c\ub85c ",(0,r.kt)("inlineCode",{parentName:"p"},"otherwise"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"else")," \ubd84\uae30\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uac01 guard(",(0,r.kt)("inlineCode",{parentName:"p"},"|"),") \ub4a4\uc5d0\ub294 \uc870\uac74\uc774 \uc788\uace0, \uc870\uac74 \ub4a4\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"="),"\uac00 \uc788\uace0, \uadf8 \ub2e4\uc74c\uc5d0\ub294 \ud45c\ud604\uc2dd\uc774 \uc788\uc2b5\ub2c8\ub2e4. (",(0,r.kt)("inlineCode",{parentName:"p"},"if")," \ud45c\ud604\uc2dd\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"then")," \ub4a4\uc5d0 \uc788\ub294 \ubd80\ubd84)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"catch"),"\uc5d0\uc11c \ubcf8 ",(0,r.kt)("inlineCode",{parentName:"p"},"LambdaCase"),"\ub294 \uba87 \uac1c\uc758 \ubb38\uc790\ub97c \uc904\uc774\uae30 \uc704\ud55c \ubb38\ubc95\uc801 \uc124\ud0d5\uc77c \ubfd0\uc785\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"\\e -> case e of")," \ub300\uc2e0\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"\\case"),"\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub97c \uc704\ud574\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"LambdaCase")," \ud655\uc7a5\uc744 \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,r.kt)("h4",{parentName:"li",id:"\uc5b8\uc5b4-\ud655\uc7a5"},"\uc5b8\uc5b4 \ud655\uc7a5"),(0,r.kt)("p",{parentName:"li"},"\ud558\uc2a4\ucf08\uc740 \ud45c\uc900\ud654\ub41c \uc5b8\uc5b4\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc GHC\ub294 \uc5b8\uc5b4\uc5d0 ",(0,r.kt)("em",{parentName:"p"},"\ud655\uc7a5"),"\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. - \ud558\uc2a4\ucf08 98 \ub610\ub294 2010 \ud45c\uc900\uc5d0\uc11c \ub2e4\ub8e8\uc9c0 \uc54a\ub294 \ucd94\uac00 \uae30\ub2a5\uc744 \ub9d0\ud569\ub2c8\ub2e4.\nLambdaCase\uc640 \uac19\uc740 \ubb38\ubc95 \ud655\uc7a5, \ud0c0\uc785 \uccb4\ucee4\uc5d0 \ub300\ud55c \ud655\uc7a5 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",{parentName:"li"},"\uc774\ub7ec\ud55c \ud655\uc7a5\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"{-# language <\ud655\uc7a5 \uc774\ub984> #-}")," (",(0,r.kt)("inlineCode",{parentName:"p"},"language")," \ubd80\ubd84\uc740 \ub300\uc18c\ubb38\uc790 \uad6c\ubd84 \uc5c6\uc74c)\uc744 \uc18c\uc2a4 \ud30c\uc77c\uc758 \ub9e8 \uc704\uc5d0 \ucd94\uac00\ud558\uac70\ub098,\n",(0,r.kt)("inlineCode",{parentName:"p"},".cabal \ud30c\uc77c"),"\uc758 ",(0,r.kt)("a",{parentName:"p",href:"https://cabal.readthedocs.io/en/stable/cabal-package.html#pkg-field-default-extensions"},"default-extensions"),"\n\uc139\uc158\uc5d0 \uc9c0\uc815\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8 \uc804\uccb4\uc5d0 \uc804\uc5ed\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",{parentName:"li"},"\uc5b8\uc5b4 \ud655\uc7a5 \ubaa9\ub85d\uc740 ",(0,r.kt)("a",{parentName:"p",href:"https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts.html"},"GHC \ub9e4\ub274\uc5bc"),"\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ucc3e\uc544\ubcf4\ub294 \uac83\uc740 \uc790\uc720\uc9c0\ub9cc, \ubaa8\ub4e0 \ud655\uc7a5\uc744 \uae30\uc5b5\ud558\uc2e4 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.")))),(0,r.kt)("p",null,"\ubb3c\ub860 \uc774 \uc608\uc81c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Either"),"\ub97c \uc0ac\uc6a9\ud558\uace0 '\uae30\ub2a5\uc801 \ucf54\uc5b4, \uba85\ub839\ud615 \uc258'\ucc98\ub7fc \ub098\ub204\ub294 \uac83\uc774 \ud6e8\uc52c \ub354 \uc798 \uc791\ub3d9\ud569\ub2c8\ub2e4.\n\uc5b4\uca0c\ub4e0, \uc608\uc81c\ub85c\uc11c\ub294 \uc798 \uc791\ub3d9\ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 \ucee4\uc2a4\ud140 \uc608\uc678\ub97c \ub9cc\ub4e4\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"IO")," \ube14\ub85d \ubc16\uc5d0\uc11c \ud2b9\ubcc4\ud558\uac8c \ucc98\ub9ac\ud588\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc ",(0,r.kt)("inlineCode",{parentName:"p"},"putStrLn"),"\uc774 \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\ub294 \uc608\uc678\ub294 \ucc98\ub9ac\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uc5b4, \uc5b4\ub5a4 \uc774\uc720\ub85c ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout")," \ud578\ub4e4\uc744 \uc774 \ube14\ub85d \uc774\uc804\uc5d0 \ub2eb\ub294\ub2e4\uba74:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'main :: IO ()\nmain = do\n  hClose stdout\n  catch\n    ( do\n      putStrLn "Going to print a number now."\n      sayDiv2 7\n      putStrLn "Did you like it?"\n    )\n    ( \\case\n      ErrZero ->\n        hPutStrLn stderr "Error: we don\'t support dividing zeroes for some reason"\n      ErrOdd n ->\n        hPutStrLn stderr ("Error: " <> show n <> " is odd and cannot be divided by 2")\n    )\n')),(0,r.kt)("p",null,"\ud504\ub85c\uadf8\ub7a8\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ghc: <stdout>: hFlush: illegal operation (handle is closed)\n")),(0,r.kt)("p",null,"\uc6b0\uc120 \uc5b4\ub5a4 \uc608\uc678\ub97c \ucc98\ub9ac\ud574\uc57c \ud558\ub294\uc9c0 \uc5b4\ub5bb\uac8c \uc54c \uc218 \uc788\uc744\uae4c\uc694?\n\uba87 \uac00\uc9c0 \ud568\uc218\uc758 \ubb38\uc11c\uc5d0\ub294 \uc774\uac83\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0\ub9cc, \ubd88\ud589\ud788\ub3c4 ",(0,r.kt)("inlineCode",{parentName:"p"},"putStrLn"),"\uc758 \ubb38\uc11c\uc5d0\ub294 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"Exception")," \ud0c0\uc785 \ud074\ub798\uc2a4\uac00 \uac00\uc9c0\uace0 \uc788\ub294\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#i:Exception"},"\uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d"),"\n\uc744 \ucc38\uc870\ud574 \ucd94\uce21\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc544\ub9c8\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/GHC-IO-Exception.html#t:IOException"},(0,r.kt)("inlineCode",{parentName:"a"},"IOException"))," fits.\n\ub97c \ucc98\ub9ac\ud558\uba74 \ub420\uac70 \uac19\uc2b5\ub2c8\ub2e4.\n\uc774\uc81c \uc774 \uc5d0\ub7ec\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\uc744\uae4c\uc694? catch\ub97c \uc5f0\uc18d\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'-- \uc0c1\ub2e8\uc5d0 \uc544\ub798 \ub0b4\uc6a9\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.\n\n{-# language ScopedTypeVariables #-}\n\nimport GHC.IO.Exception (IOException(..))\n\nmain :: IO ()\nmain = do\n  hClose stdout\n  catch\n    ( catch\n      ( do\n        putStrLn "Going to print a number now."\n        sayDiv2 7\n        putStrLn "Did you like it?"\n      )\n      ( \\case\n        ErrZero ->\n          hPutStrLn stderr "Error: we don\'t support dividing zeroes for some reason"\n        ErrOdd n ->\n          hPutStrLn stderr ("Error: " <> show n <> " is odd and cannot be divided by 2")\n      )\n    )\n    ( \\(e :: IOException) ->\n      -- stderr \ud578\ub4e4\uc5d0 \ub300\ud55c \uc798\ubabb\ub41c \uc791\uc5c5\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n      if ioe_handle e /= Just stderr && ioe_type e /= IllegalOperation\n        then pure () -- stderr \ud578\ub4e4\uc774 \ub2eb\ud614\uae30 \ub54c\ubb38\uc5d0 stderr\uc5d0 \uc4f8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n        else hPutStrLn stderr (displayException e)\n    )\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"let \ud45c\ud604\uc2dd, \ub78c\ub2e4, \ud328\ud134 \ub9e4\uce6d \ub4f1\uc5d0\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uae30 \uc704\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"ScopedTypeVariables"),"\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("p",null,"\ub610\ub294 \uc720\uc6a9\ud55c \ud568\uc218\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#v:catches"},(0,r.kt)("inlineCode",{parentName:"a"},"catches")),"\n\ub97c \uc0ac\uc6a9\ud574 \uc608\uc678\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#t:Handler"},"handlers"),"\n\ubaa9\ub85d\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'main :: IO ()\nmain = do\n  hClose stdout\n  catches\n    ( do\n      putStrLn "Going to print a number now."\n      sayDiv2 7\n      putStrLn "Did you like it?"\n    )\n    [ Handler $ \\case\n      ErrZero ->\n        hPutStrLn stderr "Error: we don\'t support dividing zeroes for some reason"\n      ErrOdd n ->\n        hPutStrLn stderr ("Error: " <> show n <> " is odd and cannot be divided by 2")\n\n    , Handler $ \\(e :: IOException) ->\n      -- stderr \ud578\ub4e4\uc5d0 \ub300\ud55c \uc798\ubabb\ub41c \uc791\uc5c5\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n      if ioe_handle e /= Just stderr && ioe_type e /= IllegalOperation\n        then pure () -- stderr \ud578\ub4e4\uc774 \ub2eb\ud614\uae30 \ub54c\ubb38\uc5d0 stderr\uc5d0 \uc4f8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n        else hPutStrLn stderr (displayException e)\n    ]\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ucd94\uac00\ub85c ",(0,r.kt)("inlineCode",{parentName:"p"},"Handler"),"\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Exception"),"\uc744 \uad6c\ud604\ud558\ub294 \uc784\uc758\uc758 \ud0c0\uc785\uc744 \uac00\uc9c0\ub294 \ud568\uc218\ub97c \uc228\uae30\uae30 \uc704\ud574\n",(0,r.kt)("a",{parentName:"p",href:"https://en.m.wikibooks.org/wiki/Haskell/Existentially_quantified_types"},"existentially quantified types"),"\n\ub77c\ub294 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uc774\ub97c \ud1b5\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"catches"),"\uac00 \uc785\ub825\uc73c\ub85c \ubc1b\ub294, \uc608\uc678\ub97c \ucc98\ub9ac\ud558\ub294 \ud568\uc218\ub4e4\uc758 \ud63c\ud569\ub41c \ub9ac\uc2a4\ud2b8\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \ud328\ud134\uc740 \uc790\uc8fc \uc0ac\uc6a9\ub418\uc9c0\ub294 \uc54a\uc9c0\ub9cc, \ud63c\ub780\uc744 \ud53c\ud558\uae30 \uc704\ud574 \uc5ec\uae30\uc5d0 \ud3ec\ud568\uc2dc\ucf30\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("p",null,"\ub9cc\uc57d \ubaa8\ub4e0 \uc608\uc678\ub97c \ucc98\ub9ac\ud558\uace0 \uc2f6\ub2e4\uba74, ",(0,r.kt)("inlineCode",{parentName:"p"},"SomeException"),"\uc744 \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'main :: IO ()\nmain = do\n  hClose stdout\n  catch\n    ( do\n      putStrLn "Going to print a number now."\n      sayDiv2 7\n      putStrLn "Did you like it?"\n    )\n    ( \\(SomeException e) ->\n      hPutStrLn stderr (show e)\n    )\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SomeException"),"\uc740 \ub2e4\ub978 \uc0c1\ud669\uc5d0 \ub300\ud55c \ud2b9\ubcc4\ud55c \ucc98\ub9ac\ub97c \uc6d0\ud55c\ub2e4\uba74, ",(0,r.kt)("inlineCode",{parentName:"p"},"catches")," \ub9ac\uc2a4\ud2b8\uc758 \ub9c8\uc9c0\ub9c9 \uc694\uc18c\ub85c \ub123\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ub2e4\ub978 \uc54c\uc544\ub450\uba74 \uc88b\uc740 \ud568\uc218\ub85c\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#v:bracket"},(0,r.kt)("inlineCode",{parentName:"a"},"bracket")),"\n\uacfc\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.16.4.0/docs/Control-Exception.html#v:finally"},(0,r.kt)("inlineCode",{parentName:"a"},"finally")),"\n\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \ud568\uc218\ub4e4\uc740 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4\ub97c \uc548\uc804\ud558\uac8c \ud68d\ub4dd\ud558\ub294\ub370 \ub3c4\uc6c0\uc744 \uc90d\ub2c8\ub2e4."),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"app/Main.hs")," \ud30c\uc77c\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"\uc5d0\uc11c\ub294 \ubcf4\ud1b5 \ud578\ub4e4\uc744 \uc5f4\uace0 \ub2eb\ub294 \uc791\uc5c5\uc744 \ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\uac00 \uc5f4\uc5c8\ub358 \ud578\ub4e4\uc744 \uc815\ub9ac\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc774 \uc788\uc744\uae4c\uc694?\n\uc5b4\ub5a4 \ubd80\ubd84\uc5d0\uc11c \uc608\uc678\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n\uc5b4\ub5a4 \ud578\ub4e4\uc740 \ub2eb\ud788\uc9c0 \uc54a\uc744\uae4c\uc694?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bracket"),"\uc744 \uc0ac\uc6a9\ud574 \uc608\uc678\uac00 \ubc1c\uc0dd\ud560\uc9c0\ub77c\ub3c4, \uc791\uc5c5 \uc774\ud6c4\uc5d0 \ud578\ub4e4\uc774 \ub2eb\ud788\ub3c4\ub85d \ud574\ubcf4\uc138\uc694.\n\ud558\uc9c0\ub9cc ",(0,r.kt)("inlineCode",{parentName:"li"},"stdin"),"\uacfc ",(0,r.kt)("inlineCode",{parentName:"li"},"stdout"),"\uc5d0 \ub300\ud574\uc11c\ub294 \ub2eb\ud788\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4.",(0,r.kt)("details",null,(0,r.kt)("summary",null,"\ud78c\ud2b8"),"\ub9e4\uac1c \ubcc0\uc218\ub97c \ubc1b\ub294 \ud568\uc218\ub97c \ub2e4\ub978 \ud568\uc218\ub85c \uc804\ub2ec\ud558\uace0, \ud574\ub2f9 \ud568\uc218\uac00 \ub9e4\uac1c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4 \ud638\ucd9c\ud558\ub294 \ubc29\uc2dd\uc778 continuation-passing style\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,r.kt)("li",{parentName:"ul"},"\uc5b4\ub5bb\uac8c \ud558\uba74 ",(0,r.kt)("inlineCode",{parentName:"li"},"Stdin"),"\uacfc ",(0,r.kt)("inlineCode",{parentName:"li"},"InputFile"),"\uc744 \uc704\ud55c ",(0,r.kt)("inlineCode",{parentName:"li"},"outputHandle")," \ucf54\ub4dc\uc758 \uc911\ubcf5\uc744 \uc81c\uac70\ud560 \uc218 \uc788\uc744\uae4c\uc694?",(0,r.kt)("details",null,(0,r.kt)("summary",null,"\ud78c\ud2b8"),"let\uc744 \uc0ac\uc6a9\ud558\uc138\uc694."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"\uc815\ub2f5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'import Control.Exception (bracket)\n\nmain :: IO ()\nmain = do\n...\n\n    ConvertSingle input output ->\n      let\n        -- \uc5ec\uae30\uc11c action\uc740 \uc6b0\ub9ac\uac00 \ud558\uace0 \uc2f6\uc740 \ub2e4\uc74c \ub2e8\uacc4\uc785\ub2c8\ub2e4.\n        -- \uc6b0\ub9ac\uac00 \ub9cc\ub4e0 \uac12\uc744 \uc785\ub825\uc73c\ub85c \ubc1b\uc544\uc11c \uc0ac\uc6a9\ud558\uace0,\n        -- \uc774\ud6c4 \uc815\ub9ac\ud560 \uc218 \uc788\ub3c4\ub85d control\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.\n        withInputHandle :: (String -> Handle -> IO a) -> IO a\n        withInputHandle action =\n          case input of\n            Stdin ->\n              action "" stdin\n            InputFile file ->\n              bracket\n                (openFile file ReadMode)\n                hClose\n                (action file)\n\n        -- \ub450 \ud568\uc218 \ubaa8\ub450 action\uc740 \uc6d0\ud558\ub294 \uc784\uc758\uc758 \ud0c0\uc785 `a`\ub97c \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n        withOutputHandle :: (Handle -> IO a) -> IO a\n        withOutputHandle action =\n          case output of\n            Stdout ->\n              action stdout\n            OutputFile file -> do\n              exists <- doesFileExist file\n              shouldOpenFile <-\n                if exists\n                  then confirm\n                  else pure True\n              if shouldOpenFile\n                then\n                  bracket (openFile file WriteMode) hClose action\n                else\n                  exitFailure\n      in\n        withInputHandle (\\title -> withOutputHandle . HsBlog.convertSingle title)\n'))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bracket (openFile file <mode>) hClose"),"\uacfc \uac19\uc740 \ub3d9\uc791\uc744 \ud558\ub294 \ucee4\uc2a4\ud140 \ud568\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\ubc14\ub85c\n",(0,r.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/base-4.17.0.0/docs/System-IO.html#v:withFile"},"withFile"),"\n\uc785\ub2c8\ub2e4.\n\ubcf4\ud1b5 ",(0,r.kt)("inlineCode",{parentName:"p"},"with")," \uc811\ub450\uc0ac\ub97c \uac00\uc9c4 \ud568\uc218\ub4e4\uc740, continuation-passing style \ud328\ud134\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\uc694\uc57d"},"\uc694\uc57d"),(0,r.kt)("p",null,"\uc608\uc678\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"IO"),"\ub97c \uc0ac\uc6a9\ud560 \ub54c \uc720\uc6a9\ud558\uace0 \ub54c\ub85c\ub294 \ud544\uc218\uc801\uc785\ub2c8\ub2e4.\n\uc774\ub294 \ud504\ub85c\uadf8\ub7a8\uc774 \uc624\ub958\ub97c \uc6b0\uc544\ud558\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"Either"),"\uc640 \ub2ec\ub9ac, \uc11c\ub85c \ub2e4\ub978 \ud0c0\uc785\uc758 \uc624\ub958\ub97c \ub358\uc9c8 \uc218 \uc788\ub294 \ud568\uc218\ub97c \uc27d\uac8c \uc870\ud569\ud560 \uc218 \uc788\uc9c0\ub9cc,\n\ubc18\ud658\uac12\uc744 \ud1b5\ud574 \ud0c0\uc785\uc744 \uc804\ub2ec\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ud578\ub4e4\ub9c1\uc744 \uac15\uc81c\ud558\uc9c0 \uc54a\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ud558\uc2a4\ucf08\uc5d0\uc11c\ub294 \uc5b8\uc5b4 \uc124\uacc4\uc790\ub4e4\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"IO"),"\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"Either")," \ub300\uc2e0 \uc608\uc678\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc120\ud0dd\uc9c0\ub97c \uc81c\uacf5\ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.\n\ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \ud6a8\uacfc\ub97c \uac00\uc9c4 \uacc4\uc0b0\uc744 \ub2e4\ub8f0 \ub54c \ucd94\ucc9c\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \ud6a8\uacfc\uac00 \uc5c6\ub294 \ucf54\ub4dc\uc758 \uacbd\uc6b0\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Either"),"\uac00 \ub354 \uc801\uc808\ud558\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.\n\uc65c\ub0d0\ud558\uba74 \uc6b0\ub9ac\uac00 \uc624\ub958\ub97c \uc778\uc9c0\ud558\uace0 \ucc98\ub9ac\ud574\uc57c \ud55c\ub2e4\ub294 \uac83\uc744 \uac15\uc81c\ud574, \ud504\ub85c\uadf8\ub7a8\uc744 \ub354 \uacac\uace0\ud558\uac8c \ub9cc\ub4e4\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\ub610\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"IO")," \ucf54\ub4dc\uc5d0\uc11c\ub9cc \uc608\uc678\ub97c \uc7a1\uc744 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4."))}k.isMDXComponent=!0}}]);