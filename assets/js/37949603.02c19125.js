"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[163],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(t),k=r,d=c["".concat(p,".").concat(k)]||c[k]||m[k]||l;return t?a.createElement(d,o(o({ref:n},u),{},{components:t})):a.createElement(d,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=k;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},3929:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const l={},o="\ud30c\uc2f1 \uacb0\uacfc \ubcf4\uc5ec\uc8fc\uae30 (\ud0c0\uc785 \ud074\ub798\uc2a4)",i={unversionedId:"markup/displaying-results",id:"markup/displaying-results",title:"\ud30c\uc2f1 \uacb0\uacfc \ubcf4\uc5ec\uc8fc\uae30 (\ud0c0\uc785 \ud074\ub798\uc2a4)",description:"\uc6b0\ub9ac\uac00 \ub9cc\ub4e0 Document \ud0c0\uc785\uc744 \ucd9c\ub825\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4.",source:"@site/docs/04-markup/03-displaying-results.md",sourceDirName:"04-markup",slug:"/markup/displaying-results",permalink:"/learn-haskell-blog-generator/markup/displaying-results",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/04-markup/03-displaying-results.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ub9c8\ud06c\uc5c5 \ud30c\uc2f1\ud558\uae30 01 (\uc7ac\uadc0)",permalink:"/learn-haskell-blog-generator/markup/parsing-01"},next:{title:"Parsing markup part 02 (Pattern matching)",permalink:"/learn-haskell-blog-generator/markup/parsing-02"}},p={},s=[{value:"\uc778\uc2a4\ud134\uc2a4 \uc790\ub3d9\uad6c\ud604",id:"\uc778\uc2a4\ud134\uc2a4-\uc790\ub3d9\uad6c\ud604",level:2},{value:"Laws",id:"laws",level:2}],u={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\ud30c\uc2f1-\uacb0\uacfc-\ubcf4\uc5ec\uc8fc\uae30-\ud0c0\uc785-\ud074\ub798\uc2a4"},"\ud30c\uc2f1 \uacb0\uacfc \ubcf4\uc5ec\uc8fc\uae30 (\ud0c0\uc785 \ud074\ub798\uc2a4)"),(0,r.kt)("p",null,"\uc6b0\ub9ac\uac00 \ub9cc\ub4e0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Document")," \ud0c0\uc785\uc744 \ucd9c\ub825\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4.\n\ucd9c\ub825\ud558\uae30 \uc704\ud55c \uba87 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\uc6b0\ub9ac\uac00 \uc9c1\uc811 ",(0,r.kt)("inlineCode",{parentName:"li"},"Document -> String")," \ud0c0\uc785\uc758 \ud568\uc218\ub97c \uc791\uc131\ud569\ub2c8\ub2e4"),(0,r.kt)("li",{parentName:"ol"},"\ud558\uc2a4\ucf08\uc774 \uc790\ub3d9\uc73c\ub85c \ub9cc\ub4e4\ub3c4\ub85d \ud569\ub2c8\ub2e4")),(0,r.kt)("p",null,"\ud558\uc2a4\ucf08\uc740 \ud0c0\uc785\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\uc73c\ub85c \ubc14\uafd4\uc8fc\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"show"),"\ub77c\ub294 ",(0,r.kt)("em",{parentName:"p"},"\ud0c0\uc785 \ud074\ub798\uc2a4")," \ud568\uc218\uc758 \uad6c\ud604\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud574\uc8fc\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"show")," \ud568\uc218\uc758 \ud0c0\uc785\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:\nThe type of the function ",(0,r.kt)("inlineCode",{parentName:"p"},"show")," looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"show :: Show a => a -> String\n")),(0,r.kt)("p",null,"\uc774 \ud568\uc218\ub294 \uc9c0\uae08\uae4c\uc9c0 \uc6b0\ub9ac\uac00 \ubd24\ub358 \uac83\uacfc\ub294 \ub2e4\ub985\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"::"),"\uc640 ",(0,r.kt)("inlineCode",{parentName:"p"},"=>")," \uc0ac\uc774\uc5d0 \uc788\ub294 \uac83\uc740 \ud0c0\uc785 ",(0,r.kt)("inlineCode",{parentName:"p"},"a"),"\uc5d0 \ub300\ud55c ",(0,r.kt)("strong",{parentName:"p"},"\ud0c0\uc785 \ud074\ub798\uc2a4 \uc81c\uc57d(type class constraint)"),"\uc774\ub77c\uace0 \ubd80\ub985\ub2c8\ub2e4.\n\uc774 \uc2dc\uadf8\ub2c8\ucc98\uc758 \uc758\ubbf8\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"show")," \ud568\uc218\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uba64\ubc84\uc778 \uc5b4\ub5a4 \ud0c0\uc785\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc791\ub3d9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ud0c0\uc785\ud074\ub798\uc2a4\ub294 \ud558\uc2a4\ucf08\uc5d0\uc11c \ud0c0\uc785\uc5d0 \uacf5\ud1b5\ub41c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\ud558\uc2a4\ucf08\uc758 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \ud0c0\uc785 \ud074\ub798\uc2a4\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud569\ub2c8\ub2e4\n(\uac04\ub2e8\ud558\uac8c \uc0dd\ub7b5\ud55c \ubc84\uc804\uc774\uc9c0\ub9cc \uc9c0\uae08\uc740 \uc774\uc815\ub3c4\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"class Show a where\n  show :: a -> String\n")),(0,r.kt)("p",null,"\ud0c0\uc785 \ud074\ub798\uc2a4 \uc120\uc5b8\uc740 \ud558\uc2a4\ucf08 \ud0c0\uc785\uc5d0 \ub300\ud55c \uacf5\ud1b5\ub41c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc124\uba85\ud569\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"show"),"\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uc5b4\ub5a0\ud55c ",(0,r.kt)("em",{parentName:"p"},"\uc778\uc2a4\ud134\uc2a4")," \ub300\ud574\uc11c\ub3c4 \uc791\ub3d9\ud560 \uc218 \uc788\ub294 \uc624\ubc84\ub85c\ub4dc\ub41c \ud568\uc218\uc785\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc218\ub3d9\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'instance Show Bool where\n  show x =\n    case x of\n      True -> "True"\n      False -> "False"\n')),(0,r.kt)("p",null,"\uc778\uc2a4\ud134\uc2a4\ub97c \uc815\uc758\ud558\ub294 \uac83\uc740 \ud2b9\uc815 \ud0c0\uc785\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"show")," \ud568\uc218\uc5d0 \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc804\ub2ec\ud558\uba74 \ucef4\ud30c\uc77c\ub7ec\ub294 \ud0c0\uc785\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\uace0, \uc778\uc2a4\ud134\uc2a4 \uc120\uc5b8\uc5d0\uc11c \uc81c\uacf5\ub41c \uad6c\ud604\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'ghci> show True\n"True"\nghci> show 187\n"187"\nghci> show "Hello"\n"\\"Hello\\""\n')),(0,r.kt)("p",null,"\uc704\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"show")," \ud568\uc218\ub294 \uac12\uc744 \ud14d\uc2a4\ud2b8\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n\uadf8\ub798\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},'"Hello"'),"\uc5d0\ub294 \ub530\uc634\ud45c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \ud0c0\uc785 \ud074\ub798\uc2a4\ub294 \uc8fc\ub85c \ub514\ubc84\uae45 \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"\uc778\uc2a4\ud134\uc2a4-\uc790\ub3d9\uad6c\ud604"},"\uc778\uc2a4\ud134\uc2a4 \uc790\ub3d9\uad6c\ud604"),(0,r.kt)("p",null,"\uba87 \uac00\uc9c0 \ud0c0\uc785 \ud074\ub798\uc2a4\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub2e4\ud589\ud788 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show"),"\ub3c4 \uadf8 \uc911 \ud558\ub098\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ub9cc\uc57d \uc6b0\ub9ac\uac00 \uc815\uc758\ud55c \ub370\uc774\ud130 \ud0c0\uc785\uc758 \ubaa8\ub4e0 \ud0c0\uc785\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c \uc774\ubbf8 \uad6c\ud604\ud558\uace0 \uc788\ub2e4\uba74,\n\ub370\uc774\ud130 \uc815\uc758 \ub05d\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"deriving Show"),"\ub97c \ucd94\uac00\ud558\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c ",(0,r.kt)("em",{parentName:"p"},"\uc790\ub3d9\uc73c\ub85c \uc0dd\uc131"),"\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"data Structure\n  = Heading Natural String\n  | Paragraph String\n  | UnorderedList [String]\n  | OrderedList [String]\n  | CodeBlock [String]\n  deriving Show\n")),(0,r.kt)("p",null,"\uc774\uc81c ",(0,r.kt)("inlineCode",{parentName:"p"},"Show"),"\uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\ud604\ud55c \uc5b4\ub5a0\ud55c \ud0c0\uc785\uc5d0 \ub300\ud574\uc11c\ub3c4 ",(0,r.kt)("inlineCode",{parentName:"p"},"show :: Show a => a -> String")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uc5b4 ",(0,r.kt)("inlineCode",{parentName:"p"},"print")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"print :: Show a => a -> IO ()\nprint = putStrLn . show\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"print")," \ud568\uc218\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"show")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac12\uc744 ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"\uc73c\ub85c \ubcc0\ud658\ud558\uace0, \ud45c\uc900 \ucd9c\ub825\uc73c\ub85c \ucd9c\ub825\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ub9ac\uc2a4\ud2b8 \ub610\ud55c \uc694\uc18c\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\uc84c\ub2e4\uba74 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.\n\uadf8\ub798\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"Document"),"\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"[Structure]"),"\uc758 \ubcc4\uce6d\uc774\uae30 \ub54c\ubb38\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Show")," \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\uc9d1\ub2c8\ub2e4.\n\ud55c \ubc88 \uc2dc\ub3c4\ud574\ubcf4\uc138\uc694!"),(0,r.kt)("p",null,"\ud558\uc2a4\ucf08\ub7ec\ub4e4\uc774 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \ub2e4\uc591\ud55c \ud0c0\uc785 \ud074\ub798\uc2a4\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\uadf8 \uc911\uc5d0 \ub3d9\ub4f1\uc131\uc744 \uc704\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"Eq"),"\uc640 \uc815\ub82c\uc744 \uc704\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"Ord"),"\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774 \ub450 \ud0c0\uc785 \ud074\ub798\uc2a4 \uc5ed\uc2dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h2",{id:"laws"},"Laws"),(0,r.kt)("p",null,'Type classes often come with "rules" or "laws" that instances should satisfy,\nthe purpose of these laws is to provide ',(0,r.kt)("em",{parentName:"p"},"predictable behaviour")," across\ninstances, so that when we run into a new instance we can be confident\nthat it will behave in an expected way, and we can write code\nthat works generically for all instances of a type class while expecting\nthem to adhere to these rules."),(0,r.kt)("p",null,"As an example, let's look at the ",(0,r.kt)("inlineCode",{parentName:"p"},"Semigroup")," type class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"class Semigroup a where\n  (<>) :: a -> a -> a\n")),(0,r.kt)("p",null,"This type class provides a common interface for types with an operation ",(0,r.kt)("inlineCode",{parentName:"p"},"<>"),"\nthat can combine two values into one in some way."),(0,r.kt)("p",null,"This type class also mentions that this ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," operation should be associative,\nmeaning that these two sides should evaluate to the same result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x <> (y <> z) = (x <> y) <> z\n")),(0,r.kt)("p",null,"An example of a lawful instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Semigroup")," is lists with the append operation (",(0,r.kt)("inlineCode",{parentName:"p"},"++"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"instance Semigroup [a] where\n  (<>) = (++)\n")),(0,r.kt)("p",null,'Unfortunately the Haskell type system cannot "prove" that instances\nsatisfy these laws, but as a community we often shun unlawful instances.'),(0,r.kt)("p",null,"Many data types (together with their respective operations) can\nform a ",(0,r.kt)("inlineCode",{parentName:"p"},"Semigroup"),", and instances\ndon't even have to look similar or have a common analogy/metaphor\n(and this is true for many other type classes as well)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type classes are often just ",(0,r.kt)("em",{parentName:"strong"},"interfaces")," with ",(0,r.kt)("em",{parentName:"strong"},"laws"))," (or expected behaviours if you will).\nApproaching them with this mindset can be very liberating!"),(0,r.kt)("p",null,"To put it differently, ",(0,r.kt)("strong",{parentName:"p"},"type classes can be used to create abstractions")," -\ninterfaces with laws/expected behaviours where we don't actually care about the\nconcrete details of the underlying type, just that it ",(0,r.kt)("em",{parentName:"p"},"implements a certain\nAPI and behaves in a certain way"),"."),(0,r.kt)("p",null,"Regarding ",(0,r.kt)("inlineCode",{parentName:"p"},"Semigroup"),", we have ",(0,r.kt)("a",{parentName:"p",href:"/learn-haskell-blog-generator/html/safer-construction#appending-htmlstructure"},"previously"),"\ncreated a function that looks like ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," for our ",(0,r.kt)("inlineCode",{parentName:"p"},"Html")," EDSL!\nWe can add a ",(0,r.kt)("inlineCode",{parentName:"p"},"Semigroup")," instance for our ",(0,r.kt)("inlineCode",{parentName:"p"},"Structure")," data type\nand have a nicer API!"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Exercise: Please do this and remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"append_")," function from the API."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Solution"),(0,r.kt)("p",null,"Replace this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"append_ :: Structure -> Structure -> Structure\nappend_ c1 c2 =\n  Structure (getStructureString c1 <> getStructureString c2)\n")),(0,r.kt)("p",null,"With this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"instance Semigroup Structure where\n  (<>) c1 c2 =\n    Structure (getStructureString c1 <> getStructureString c2)\n")),(0,r.kt)("p",null,"And remove the export of ",(0,r.kt)("inlineCode",{parentName:"p"},"append_")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"Html.hs"),". You won't need to further export anything\nas type class instances are exported automatically."),(0,r.kt)("p",null,"You will also need to replace the usage of ",(0,r.kt)("inlineCode",{parentName:"p"},"append_")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.hs"),".")),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);