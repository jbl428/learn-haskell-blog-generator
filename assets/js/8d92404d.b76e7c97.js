"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[643],{3905:(t,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>d});var r=e(7294);function l(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function a(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function o(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?a(Object(e),!0).forEach((function(n){l(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function i(t,n){if(null==t)return{};var e,r,l=function(t,n){if(null==t)return{};var e,r,l={},a=Object.keys(t);for(r=0;r<a.length;r++)e=a[r],n.indexOf(e)>=0||(l[e]=t[e]);return l}(t,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)e=a[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var u=r.createContext({}),c=function(t){var n=r.useContext(u),e=n;return t&&(e="function"==typeof t?t(n):o(o({},n),t)),e},p=function(t){var n=c(t.components);return r.createElement(u.Provider,{value:n},t.children)},m="mdxType",s={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(t,n){var e=t.components,l=t.mdxType,a=t.originalType,u=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),m=c(e),g=l,d=m["".concat(u,".").concat(g)]||m[g]||s[g]||a;return e?r.createElement(d,o(o({ref:n},p),{},{components:e})):r.createElement(d,o({ref:n},p))}));function d(t,n){var e=arguments,l=n&&n.mdxType;if("string"==typeof t||l){var a=e.length,o=new Array(a);o[0]=g;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=t,i[m]="string"==typeof t?t:l,o[1]=i;for(var c=2;c<a;c++)o[c]=e[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}g.displayName="MDXCreateElement"},7303:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=e(7462),l=(e(7294),e(3905));const a={},o="\uc5d0\ub7ec \ucc98\ub9ac\uc640 \uc5ec\ub7ec \ud30c\uc77c \ub2e4\ub8e8\uae30",i={unversionedId:"errors_and_files/index",id:"errors_and_files/index",title:"\uc5d0\ub7ec \ucc98\ub9ac\uc640 \uc5ec\ub7ec \ud30c\uc77c \ub2e4\ub8e8\uae30",description:"\uc774\uc804 \uc7a5\uc5d0\uc11c \uad6c\ud604\ud558\uc9c0 \uc54a\uc740 \ud568\uc218\uac00 \ud558\ub098 \ub0a8\uc544 \uc788\uc2b5\ub2c8\ub2e4.",source:"@site/docs/06-errors_and_files/index.md",sourceDirName:"06-errors_and_files",slug:"/errors_and_files/",permalink:"/learn-haskell-blog-generator/errors_and_files/",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/06-errors_and_files/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\uba4b\uc9c4 \uc635\uc158 \ud30c\uc2f1",permalink:"/learn-haskell-blog-generator/glue/optparse"},next:{title:"Either\ub97c \ud65c\uc6a9\ud55c \uc5d0\ub7ec \ucc98\ub9ac",permalink:"/learn-haskell-blog-generator/errors_and_files/either"}},u={},c=[{value:"HTML \ub9c1\ud06c",id:"html-\ub9c1\ud06c",level:2},{value:"\uc778\ub371\uc2a4 \ud398\uc774\uc9c0 \ub9cc\ub4e4\uae30",id:"\uc778\ub371\uc2a4-\ud398\uc774\uc9c0-\ub9cc\ub4e4\uae30",level:2},{value:"\ub514\ub809\ud130\ub9ac \ucc98\ub9ac\ud558\uae30",id:"\ub514\ub809\ud130\ub9ac-\ucc98\ub9ac\ud558\uae30",level:2}],p={toc:c},m="wrapper";function s(t){let{components:n,...e}=t;return(0,l.kt)(m,(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\uc5d0\ub7ec-\ucc98\ub9ac\uc640-\uc5ec\ub7ec-\ud30c\uc77c-\ub2e4\ub8e8\uae30"},"\uc5d0\ub7ec \ucc98\ub9ac\uc640 \uc5ec\ub7ec \ud30c\uc77c \ub2e4\ub8e8\uae30"),(0,l.kt)("p",null,"\uc774\uc804 \uc7a5\uc5d0\uc11c \uad6c\ud604\ud558\uc9c0 \uc54a\uc740 \ud568\uc218\uac00 \ud558\ub098 \ub0a8\uc544 \uc788\uc2b5\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 \uc6b0\ub9ac\uc758 \ud504\ub85c\uadf8\ub7a8\uc744 \uc815\uc801 \ube14\ub85c\uadf8 \uc0dd\uc131\uae30\ub77c\uace0 \ubd80\ub974\uae30 \uc704\ud574\uc11c\ub294 \uc544\uc9c1 \ud574\uc57c \ud560 \uc77c\uc774 \uba87 \uac00\uc9c0 \ub354 \uc788\uc2b5\ub2c8\ub2e4.\n\ub514\ub809\ud130\ub9ac \uc548 \uc5ec\ub7ec \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\uace0 \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c\uc758 \ub9c1\ud06c\uac00 \uc788\ub294 \uc778\ub371\uc2a4 \ub79c\ub529 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"html-\ub9c1\ud06c"},"HTML \ub9c1\ud06c"),(0,l.kt)("p",null,"\uc6b0\ub9ac\uc758 HTML EDSL\uc740 \uc544\uc9c1 \ub9c1\ud06c\ub098 \uad75\uc740 \uae00\uc528, \uc774\ud0e4\ub9ad\uccb4 \ub4f1\uc758 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\uc774 \uae30\ub2a5\ub4e4\uc744 \ucd94\uac00\ud574\uc11c \uc778\ub371\uc2a4\ub97c \ub9cc\ub4e4 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc9c0\uae08\uae4c\uc9c0\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),"\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"Structure"),"\uc5d0 \uc804\ub2ec\ud574\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"p_"),"\ub098 ",(0,l.kt)("inlineCode",{parentName:"p"},"h_"),"\uc640 \uac19\uc740 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.\n\ub300\uc2e0\uc5d0 \ud14d\uc2a4\ud2b8, \ub9c1\ud06c, \uc774\ubbf8\uc9c0 \ub4f1\uc744 \uc758\ubbf8\ud558\ub294 \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"Content"),"\ub97c \ub9cc\ub4e4\uc5b4\uc11c \uc774 \ud0c0\uc785\uc744 \uc804\ub2ec\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\uc5f0\uc2b5\ubb38\uc81c"),": \ubc29\uae08 \uc5b8\uae09\ud55c \uae30\ub2a5\ub4e4\uc744 \ucd94\uac00\ud574 \ubcf4\uc138\uc694. \ucef4\ud30c\uc77c\ub7ec \uc5d0\ub7ec\ub97c \ud574\uacb0\ud558\uace0 \ud544\uc694\ud558\ub2e4\uba74 \ub9ac\ud329\ud130\ub9c1\uc744 \uc9c4\ud589\ud558\uc138\uc694."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/Html/Internal.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'module HsBlog.Html.Internal where\n\nimport Numeric.Natural\n\n-- * Types\n\nnewtype Html\n  = Html String\n\nnewtype Structure\n  = Structure String\n\nnewtype Content\n  = Content String\n\ntype Title\n  = String\n\n-- * EDSL\n\nhtml_ :: Title -> Structure -> Html\nhtml_ title content =\n  Html\n    ( el "html"\n      ( el "head" (el "title" (escape title))\n        <> el "body" (getStructureString content)\n      )\n    )\n\n-- * Structure\n\np_ :: Content -> Structure\np_ = Structure . el "p" . getContentString\n\nh_ :: Natural -> Content -> Structure\nh_ n = Structure . el ("h" <> show n) . getContentString\n\nul_ :: [Structure] -> Structure\nul_ =\n  Structure . el "ul" . concat . map (el "li" . getStructureString)\n\nol_ :: [Structure] -> Structure\nol_ =\n  Structure . el "ol" . concat . map (el "li" . getStructureString)\n\ncode_ :: String -> Structure\ncode_ = Structure . el "pre" . escape\n\ninstance Semigroup Structure where\n  (<>) c1 c2 =\n    Structure (getStructureString c1 <> getStructureString c2)\n\ninstance Monoid Structure where\n  mempty = Structure ""\n\n-- * Content\n\ntxt_ :: String -> Content\ntxt_ = Content . escape\n\nlink_ :: FilePath -> Content -> Content\nlink_ path content =\n  Content $\n    elAttr\n      "a"\n      ("href=\\"" <> escape path <> "\\"")\n      (getContentString content)\n\nimg_ :: FilePath -> Content\nimg_ path =\n  Content $ "<img src=\\"" <> escape path <> "\\">"\n\nb_ :: Content -> Content\nb_ content =\n  Content $ el "b" (getContentString content)\n\ni_ :: Content -> Content\ni_ content =\n  Content $ el "i" (getContentString content)\n\ninstance Semigroup Content where\n  (<>) c1 c2 =\n    Content (getContentString c1 <> getContentString c2)\n\ninstance Monoid Content where\n  mempty = Content ""\n\n-- * Render\n\nrender :: Html -> String\nrender html =\n  case html of\n    Html str -> str\n\n-- * Utilities\n\nel :: String -> String -> String\nel tag content =\n  "<" <> tag <> ">" <> content <> "</" <> tag <> ">"\n\nelAttr :: String -> String -> String -> String\nelAttr tag attrs content =\n  "<" <> tag <> " " <> attrs <> ">" <> content <> "</" <> tag <> ">"\n\ngetStructureString :: Structure -> String\ngetStructureString structure =\n  case structure of\n    Structure str -> str\n\ngetContentString :: Content -> String\ngetContentString content =\n  case content of\n    Content str -> str\n\nescape :: String -> String\nescape =\n  let\n    escapeChar c =\n      case c of\n        \'<\' -> "&lt;"\n        \'>\' -> "&gt;"\n        \'&\' -> "&amp;"\n        \'"\' -> "&quot;"\n        \'\\\'\' -> "&#39;"\n        _ -> [c]\n  in\n    concat . map escapeChar\n\n\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/Html.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"module HsBlog.Html\n  ( Html\n  , Title\n  , Structure\n  , html_\n  , p_\n  , h_\n  , ul_\n  , ol_\n  , code_\n  , Content\n  , txt_\n  , img_\n  , link_\n  , b_\n  , i_\n  , render\n  )\n  where\n\nimport HsBlog.Html.Internal\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/Convert.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"module HsBlog.Convert where\n\nimport qualified HsBlog.Markup as Markup\nimport qualified HsBlog.Html as Html\n\nconvert :: Html.Title -> Markup.Document -> Html.Html\nconvert title = Html.html_ title . foldMap convertStructure\n\nconvertStructure :: Markup.Structure -> Html.Structure\nconvertStructure structure =\n  case structure of\n    Markup.Heading n txt ->\n      Html.h_ n $ Html.txt_ txt\n\n    Markup.Paragraph p ->\n      Html.p_ $ Html.txt_ p\n\n    Markup.UnorderedList list ->\n      Html.ul_ $ map (Html.p_ . Html.txt_) list\n\n    Markup.OrderedList list ->\n      Html.ol_ $ map (Html.p_ . Html.txt_) list\n\n    Markup.CodeBlock list ->\n      Html.code_ (unlines list)\n")))),(0,l.kt)("hr",null),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Git \ucee4\ubc0b\uc744 \ud1b5\ud574\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/commit/110a19029f0be42eb2ac656f5d38356dbf9c5746"},"\uc774\ubc88\uc5d0 \uc218\uc815\ud55c \ub0b4\uc5ed"),"\n\uacfc ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/tree/110a19029f0be42eb2ac656f5d38356dbf9c5746"},"\ud604\uc7ac\uae4c\uc9c0 \ucf54\ub4dc")," \ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,l.kt)("h2",{id:"\uc778\ub371\uc2a4-\ud398\uc774\uc9c0-\ub9cc\ub4e4\uae30"},"\uc778\ub371\uc2a4 \ud398\uc774\uc9c0 \ub9cc\ub4e4\uae30"),(0,l.kt)("p",null,"\uc774\uc81c \ud655\uc7a5\ub41c HTML EDSL\uc744 \uc0ac\uc6a9\ud574, \ub2e4\ub978 \ud398\uc774\uc9c0\ub85c\uc758 \ub9c1\ud06c\uac00 \uc788\ub294 \uc778\ub371\uc2a4 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4."),(0,l.kt)("p",null,"\uc778\ub371\uc2a4 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 ",(0,l.kt)("em",{parentName:"p"},"\ud0c0\uac9f \uacbd\ub85c"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"\ub9c8\ud06c\uc5c5"),"(\uccab \uc81c\ubaa9\uacfc \ubb38\ub2e8\uc744 \uac00\uc838\uc640 \uc778\ub371\uc2a4 \ud398\uc774\uc9c0\uc5d0 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c)\uc744 \uac00\uc9c4 \ud30c\uc77c \ubaa9\ub85d\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\n\ucd9c\ub825\uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"Html")," \ud398\uc774\uc9c0\uc5ec\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc740 \ud568\uc218\ub97c \uad6c\ud604\ud574\ubcf4\uc138\uc694:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"buildIndex :: [(FilePath, Markup.Document)] -> Html.Html\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'buildIndex :: [(FilePath, Markup.Document)] -> Html.Html\nbuildIndex files =\n  let\n    previews =\n      map\n        ( \\(file, doc) ->\n          case doc of\n            Markup.Heading 1 heading : article ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ heading))\n                <> foldMap convertStructure (take 3 article)\n                <> Html.p_ (Html.link_ file (Html.txt_ "..."))\n            _ ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ file))\n        )\n        files\n  in\n    Html.html_\n      "Blog"\n      ( Html.h_ 1 (Html.link_ "index.html" (Html.txt_ "Blog"))\n        <> Html.h_ 2 (Html.txt_ "Posts")\n        <> mconcat previews\n      )\n'))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\ub514\ub809\ud130\ub9ac-\ucc98\ub9ac\ud558\uae30"},"\ub514\ub809\ud130\ub9ac \ucc98\ub9ac\ud558\uae30"),(0,l.kt)("p",null,"\ub514\ub809\ud130\ub9ac\ub97c \ucc98\ub9ac\ud558\ub294 \uc77c\ubc18\uc801\uc778 \uc804\ub7b5\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \ub9cc\ub4ed\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},"\ub514\ub809\ud130\ub9ac\uc758 \ubaa8\ub4e0 \ud30c\uc77c \uc774\ub984\uc744 \uac00\uc838\uc635\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},"\ud655\uc7a5\uc790\uc5d0 \ub530\ub77c \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4, ",(0,l.kt)("inlineCode",{parentName:"li"},"txt")," \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\uace0 \ub2e4\ub978 \ud30c\uc77c\uc740 \uc218\uc815 \uc5c6\uc774 \ubcf5\uc0ac\ud569\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},"\uac01 \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ud30c\uc2f1\ud558\uace0, \uc778\ub371\uc2a4\ub97c \ub9cc\ub4e4\uace0, \ud30c\uc77c\uc744 HTML\ub85c \ubcc0\ud658\ud558\uace0, \ubaa8\ub4e0 \uac83\uc744 \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\uc5d0 \uc501\ub2c8\ub2e4")),(0,l.kt)("p",null,"\ud30c\uc2f1 \ud568\uc218\ub294 \uc2e4\ud328\ud560 \uac00\ub2a5\uc131\uc774 \uac70\uc758 \uc5c6\uc73c\ub098 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud30c\uc77c\uc744 \uc77d\uac70\ub098 \uc4f0\ub294 \uac83\uc740 \ub2e4\uc591\ud55c \uc6d0\uc778\uc73c\ub85c \uc778\ud574 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc815\uc801 \ube14\ub85c\uadf8 \uc0dd\uc131\uae30\ub294 \ud558\ub098\uc758 \ud30c\uc77c\uc774 \ubb38\uc81c\uac00 \uc788\uc5b4\ub3c4 \uc804\uccb4 \uacfc\uc815\uc774 \uc2e4\ud328\ud558\uc9c0\ub294 \uc54a\ub3c4\ub85d \ub3d9\uc791\ud558\ub824\uace0 \ud569\ub2c8\ub2e4.\n\uc774\ub294 \ud558\uc2a4\ucf08\uc5d0\uc11c \uc5d0\ub7ec \ucc98\ub9ac\uc5d0 \ub300\ud574 \ubc30\uc6b0\uae30 \uc88b\uc740 \uae30\ud68c\uc785\ub2c8\ub2e4.\n\ubd80\uc218 \ud6a8\uacfc\uac00 \uc5c6\ub294 \ucf54\ub4dc\uc640 I/O \ucf54\ub4dc\uc5d0 \ub300\ud55c \uc5d0\ub7ec \ucc98\ub9ac \ubaa8\ub450\uc5d0 \ub300\ud574 \ubc30\uc6cc\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ub2e4\uc74c \uba87 \uc7a5\uc5d0 \uac78\uccd0 \ud558\uc2a4\ucf08\ub808\uc5b4 \uc5d0\ub7ec \ucc98\ub9ac\uc5d0 \ub300\ud55c \uc804\ubc18\uc801\uc778 \ub0b4\uc6a9\uc744 \uc0b4\ud3b4\ubcf4\uace0, \uc6b0\ub9ac\uc758 \uacbd\uc6b0\uc5d0 \uc801\ud569\ud55c \uc811\uadfc \ubc29\uc2dd\uc744 \ucc3e\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."))}s.isMDXComponent=!0}}]);