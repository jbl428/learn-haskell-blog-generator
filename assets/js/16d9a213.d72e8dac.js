"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[27],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>u});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),o=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},h=function(e){var n=o(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),c=o(t),m=l,u=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return t?a.createElement(u,i(i({ref:n},h),{},{components:t})):a.createElement(u,i({ref:n},h))}));function u(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[c]="string"==typeof e?e:l,i[1]=s;for(var o=2;o<r;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5662:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var a=t(7462),l=(t(7294),t(3905));const r={},i="\ud14c\uc2a4\ud2b8",s={unversionedId:"testing",id:"testing",title:"\ud14c\uc2a4\ud2b8",description:"\uc774\uc81c \ube14\ub85c\uadf8 \uc0dd\uc131\uae30\uc5d0 \uba87 \uac00\uc9c0 \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.",source:"@site/docs/08-testing.md",sourceDirName:".",slug:"/testing",permalink:"/learn-haskell-blog-generator/testing",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/08-testing.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud658\uacbd \ubcc0\uc218 \uc804\ub2ec\ud558\uae30",permalink:"/learn-haskell-blog-generator/environment"},next:{title:"Generating documentation",permalink:"/learn-haskell-blog-generator/documentation"}},p={},o=[{value:"\ucd08\uae30 \uc124\uc815",id:"\ucd08\uae30-\uc124\uc815",level:2},{value:"Cabal \ud30c\uc77c \uc218\uc815",id:"cabal-\ud30c\uc77c-\uc218\uc815",level:3},{value:"Hspec \ud0d0\uc0c9",id:"hspec-\ud0d0\uc0c9",level:3},{value:"\ud14c\uc2a4\ud2b8 \uc791\uc131\ud558\uae30",id:"\ud14c\uc2a4\ud2b8-\uc791\uc131\ud558\uae30",level:2},{value:"Raw \ubb38\uc790\uc5f4",id:"raw-\ubb38\uc790\uc5f4",level:3},{value:"\ubcd1\ub82c \ud14c\uc2a4\ud2b8 \uc2e4\ud589",id:"\ubcd1\ub82c-\ud14c\uc2a4\ud2b8-\uc2e4\ud589",level:2},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2}],h={toc:o},c="wrapper";function d(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\ud14c\uc2a4\ud2b8"},"\ud14c\uc2a4\ud2b8"),(0,l.kt)("p",null,"\uc774\uc81c \ube14\ub85c\uadf8 \uc0dd\uc131\uae30\uc5d0 \uba87 \uac00\uc9c0 \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.\n\uc801\uc5b4\ub3c4 \uba87 \uac00\uc9c0 \ud68c\uadc0 \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uc5ec \ub9c8\ud06c\uc5c5 \uad6c\ubb38 \ubd84\uc11d \ucf54\ub4dc, HTML \uc0dd\uc131 \ucf54\ub4dc \ub610\ub294 \ub9c8\ud06c\uc5c5\uc5d0\uc11c HTML \ucf54\ub4dc\ub85c\uc758 \ubcc0\ud658 \uc791\uc5c5\uc5d0\uc11c \uc2e4\uc218\ub97c \ud558\ub354\ub77c\ub3c4 \ubb38\uc81c\ub97c \uc54c\ub824\uc8fc\ub294 \uc548\uc804\uc7a5\uce58\ub97c \ub9c8\ub828\ud558\uae30 \uc704\ud568\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uae30 \uc704\ud574 ",(0,l.kt)("a",{parentName:"p",href:"https://hspec.github.io/"},"Hspec")," \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/tasty"},"tasty"),"\uc640 \uac19\uc740 \ub2e4\ub978 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub3c4 \uc788\uc9c0\ub9cc, \uac1c\uc778\uc801\uc73c\ub85c Hspec\uc758 \ubb38\uc11c\uac00 \uc88b\uc544\uc11c \uc774\ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\ucd08\uae30-\uc124\uc815"},"\ucd08\uae30 \uc124\uc815"),(0,l.kt)("h3",{id:"cabal-\ud30c\uc77c-\uc218\uc815"},"Cabal \ud30c\uc77c \uc218\uc815"),(0,l.kt)("p",null,"\uc0c8\ub85c\uc6b4 \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\ub97c \uc815\uc758\ud558\uae30 \uc704\ud574 ",(0,l.kt)("inlineCode",{parentName:"p"},"hs-blog-gen.cabal")," \ud30c\uc77c\uc5d0 \uc0c8\ub85c\uc6b4 \uc139\uc158\uc744 \uc815\uc758\ud560 \uac83\uc785\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"test-suite"),"\ub77c\ub294 \uc139\uc158\uc774\uba70, ",(0,l.kt)("inlineCode",{parentName:"p"},"library"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"executable")," \uc139\uc158\uacfc \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://cabal.readthedocs.io/en/stable/cabal-package.html#test-suites"},"Cabal \ubb38\uc11c"),"\n\uc5d0 \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\ub97c \uc815\uc758\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc124\uba85\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n\uc6b0\ub9ac\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"exitcode-stdio-1.0")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \ub2e4\uc591\ud55c \uc124\uc815\uacfc \uc635\uc158\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cabal"},"test-suite hs-blog-gen-test\n  import: common-settings\n  type: exitcode-stdio-1.0\n  hs-source-dirs: test\n  main-is: Spec.hs\n\n  -- other-modules:\n  build-depends:\n      base\n    , hspec\n    , hspec-discover\n    , raw-strings-qq\n    , hs-blog\n  ghc-options:\n    -O -threaded -rtsopts -with-rtsopts=-N\n  build-tool-depends:\n    hspec-discover:hspec-discover\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hs-source-dirs: test")," - \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\uc758 \uc18c\uc2a4 \ud30c\uc77c \ub514\ub809\ud1a0\ub9ac"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"main-is: Spec.hs")," - \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\uc758 \uc9c4\uc785\uc810"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"other-modules")," - \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\uc758 \ubaa8\ub4c8\uc815\uc758, \ud604\uc7ac\ub294 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc544\uc11c \uc8fc\uc11d\ucc98\ub9ac \ud558\uc600\uc2b5\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build-depends")," - \uc0ac\uc6a9\ud560 \ud328\ud0a4\uc9c0:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/base"},(0,l.kt)("inlineCode",{parentName:"a"},"base"))," -\n\ud558\uc2a4\ucf08 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac, \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud588\ub358 \uac83\uacfc \uac19\uc2b5\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/hspec"},(0,l.kt)("inlineCode",{parentName:"a"},"hspec"))," -\n\uc774\ubc88\uc5d0 \uc0ac\uc6a9\ud560 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/hspec-discover"},(0,l.kt)("inlineCode",{parentName:"a"},"hspec-discover"))," -\n\uc790\ub3d9\uc73c\ub85c Hspec \ud14c\uc2a4\ud2b8\ub97c \ucc3e\uc544\uc90d\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/raw-strings-qq"},(0,l.kt)("inlineCode",{parentName:"a"},"raw-strings-qq"))," -\n\ubb38\uc790\uc5f4 \ub9ac\ud130\ub7f4\uc744 \uc791\uc131\ud558\uae30 \uc704\ud55c \ucd94\uac00\uc801\uc778 \ubb38\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hs-blog")," - \uc6b0\ub9ac\uac00 \uc791\uc131\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cabal.readthedocs.io/en/stable/cabal-package.html#pkg-field-ghc-options"},(0,l.kt)("inlineCode",{parentName:"a"},"ghc-options"))," -\nGHC\uc758 \ucd94\uac00 \uc635\uc158\uacfc \ud50c\ub798\uadf8:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/using-optimisation.html#options-optimise"},(0,l.kt)("inlineCode",{parentName:"a"},"-O"))," -\n\ucd5c\uc801\ud654 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucef4\ud30c\uc77c\ud569\ub2c8\ub2e4"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/phases.html#ghc-flag--threaded"},(0,l.kt)("inlineCode",{parentName:"a"},"-threaded"))," -\n\ub2e8\uc77c \ucf54\uc5b4 \ub7f0\ud0c0\uc784 \ub300\uc2e0 \uba40\ud2f0 \ucf54\uc5b4 \ub7f0\ud0c0\uc784\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uacbd\ud5d8\uc0c1 \uba40\ud2f0 \ucf54\uc5b4 \ub7f0\ud0c0\uc784\uc774 \uc57d\uac04 \ub290\ub9ac\uc9c0\ub9cc, \uc2e4\uc81c\ub85c \uc5ec\ub7ec \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \ucf54\ub4dc(\uc608\ub97c \ub4e4\uc5b4 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c \ud14c\uc2a4\ud2b8\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0)\ub97c \uc791\uc131\ud560 \ub54c\ub294 \uc131\ub2a5 \ud5a5\uc0c1\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/phases.html#ghc-flag--rtsopts%5B=%E2%9F%A8none%7Csome%7Call%7Cignore%7CignoreAll%E2%9F%A9%5D"},(0,l.kt)("inlineCode",{parentName:"a"},"-rtsopts"))," -\n\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uba85\ub839\ud589 \uc778\uc218\ub97c \uc804\ub2ec\ud558\uc5ec \ud558\uc2a4\ucf08 \ub7f0\ud0c0\uc784 \uc2dc\uc2a4\ud15c\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/phases.html#ghc-flag--with-rtsopts=%E2%9F%A8opts%E2%9F%A9"},(0,l.kt)("inlineCode",{parentName:"a"},"-with-rtsopts=-N"))," -\n\ub9c1\ud06c \uc2dc\uac04\uc5d0 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ud2b9\uc815 \uae30\ubcf8 \uc635\uc158\uc744 \uc124\uc815\ud569\ub2c8\ub2e4.\n\ud2b9\ud788, ",(0,l.kt)("a",{parentName:"li",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/using-concurrent.html#rts-flag--N%20%E2%9F%A8x%E2%9F%A9"},(0,l.kt)("inlineCode",{parentName:"a"},"-N")),"\n\uc635\uc158\uc740 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uc0ac\uc6a9\ud560 \ucf54\uc5b4\uc758 \uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cabal.readthedocs.io/en/stable/cabal-package.html#pkg-field-build-tool-depends"},(0,l.kt)("inlineCode",{parentName:"a"},"build-tool-depends"))," -\n\ud328\ud0a4\uc9c0 \ube4c\ub4dc\ub97c \uc704\ud55c \ud2b9\ubcc4\ud55c \uc2e4\ud589\ud30c\uc77c\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4.\n\uc608\uc81c\uc5d0\uc11c\ub294 ",(0,l.kt)("a",{parentName:"li",href:"https://hackage.haskell.org/package/hspec-discover"},(0,l.kt)("inlineCode",{parentName:"a"},"hspec-discover"))," \ud328\ud0a4\uc9c0\uc5d0 \ud3ec\ud568\ub41c ",(0,l.kt)("inlineCode",{parentName:"li"},"hspec-discover")," \uc2e4\ud589\ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uc774 \uc2e4\ud589\ud30c\uc77c\uc740 \ud14c\uc2a4\ud2b8 \uc18c\uc2a4 \ub514\ub809\ud1a0\ub9ac\ub97c \uac80\uc0ac\ud558\uc5ec \ubaa8\ub4e0 ",(0,l.kt)("inlineCode",{parentName:"li"},"Spec")," \ud30c\uc77c\uc744 \ucc3e\uace0, \ucc3e\uc740 \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc758 \uc9c4\uc785\uc810\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.")),(0,l.kt)("h3",{id:"hspec-\ud0d0\uc0c9"},"Hspec \ud0d0\uc0c9"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"hspec-discover"),'\uac00 \uc791\ub3d9\ud558\ub824\uba74, \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\uc758 "main" \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\uc758 \uacbd\uc6b0 ',(0,l.kt)("inlineCode",{parentName:"p"},"test/Spec.hs"),"\uc785\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"{-# OPTIONS_GHC -F -pgmF hspec-discover #-}\n")),(0,l.kt)("p",null,"\uc774\uc81c ",(0,l.kt)("inlineCode",{parentName:"p"},"hspec-discover"),"\uac00 \uc790\ub3d9\uc73c\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"main"),"\uc744 \uc815\uc758\ud560 \uac83\uc785\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"stack test")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal test")," (\uc120\ud0dd\ud55c \ud56d\ubaa9\uc5d0 \ub530\ub77c)\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc544\uc9c1 \ud14c\uc2a4\ud2b8\ub97c \uc815\uc758\ud558\uc9c0 \uc54a\uc558\uc73c\ubbc0\ub85c \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"Finished in 0.0000 seconds\n0 examples, 0 failures\n")),(0,l.kt)("p",null,"\uc0c8\ub85c\uc6b4 Hspec \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud560 \ub54c\ub9c8\ub2e4 ",(0,l.kt)("inlineCode",{parentName:"p"},"hspec-discover"),"\uac00 \uc790\ub3d9\uc73c\ub85c \ucc3e\uc544\uc11c \uc2e4\ud589\ud560 \uac83\uc785\ub2c8\ub2e4.\n(\ubb3c\ub860 ",(0,l.kt)("inlineCode",{parentName:"p"},"cabal")," \ud30c\uc77c\uc758 ",(0,l.kt)("inlineCode",{parentName:"p"},"other-modules")," \uc139\uc158\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4)."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"hspec-discover"),"\uac00 \ubaa8\ub4c8\uc744 \ud14c\uc2a4\ud2b8 \ubaa8\ub4c8\ub85c \uc778\uc2dd\ud558\ub824\uba74, \ub2e4\uc74c \uaddc\uce59\uc744 \ub530\ub77c\uc57c \ud569\ub2c8\ub2e4:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\ubaa8\ub4c8 \uc774\ub984\uc740 ",(0,l.kt)("inlineCode",{parentName:"li"},"Spec"),"\ub85c \ub05d\ub098\uc57c \ud569\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ol"},"(\ud14c\uc2a4\ud2b8 \uc758\ubbf8\ud558\ub294) ",(0,l.kt)("inlineCode",{parentName:"li"},"spec :: Spec"),"\uc774\ub77c\ub294 \uac12\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ubaa8\ub4c8 \uc678\ubd80\ub85c \ub0b4\ubcf4\ub0b4\uc57c \ud569\ub2c8\ub2e4.\n(\uc608\ub97c \ub4e4\uc5b4, \ubaa8\ub4c8\uc758 \ub0b4\ubcf4\ub0b4\uae30 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4)")),(0,l.kt)("h2",{id:"\ud14c\uc2a4\ud2b8-\uc791\uc131\ud558\uae30"},"\ud14c\uc2a4\ud2b8 \uc791\uc131\ud558\uae30"),(0,l.kt)("p",null,"\uccab \ubc88\uc9f8 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\ub9c8\ud06c\uc5c5 \ud30c\uc2f1\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 \ubaa8\ub4c8\uc744 \uc791\uc131\ud574\ubd05\uc2dc\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"MarkupParsing.hs"),"\ub77c\ub294 \uc0c8\ub85c\uc6b4 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0, \ub2e4\uc74c\uacfc \uac19\uc740 \ubaa8\ub4c8\uc744 \uac00\uc838\uc635\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"module MarkupParsingSpec where\n\nimport Test.Hspec\nimport HsBlog.Markup\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Hspec"),"\uc740 \ud14c\uc2a4\ud2b8 \uc0ac\uc591(",(0,l.kt)("inlineCode",{parentName:"p"},"Spec"),")\uc744 \uae30\uc220\ud558\uace0, \uc870\ud569\ud558\uace0, \uc911\ucca9\ud558\ub294 monadic \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"describe")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \uadf8\ub8f9\uc744 \uae30\uc220\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub610\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"it")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"shouldBe"),"\uc640 \uac19\uc740 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac12\uc744 \ube44\uad50\ud558\uace0, ",(0,l.kt)("inlineCode",{parentName:"p"},"Eq")," \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac12\uc774 \ub3d9\uc77c\ud55c\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub9cc\uc57d \ub3d9\uc77c\ud558\ub2e4\uba74 \ud14c\uc2a4\ud2b8\ub294 \ud1b5\uacfc\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ud14c\uc2a4\ud2b8\ub294 \uc2e4\ud328\ud558\uace0 \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ubb34\uc870\uac74 \uc2e4\ud328\ud558\ub294 \ud14c\uc2a4\ud2b8\ub97c \uba3c\uc800 \uc791\uc131\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4!"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'spec :: Spec\nspec = do\n  describe "Markup parsing tests" $ do\n    it "empty" $\n      shouldBe\n        (parse "")\n        [Heading 1 "bug"]\n')),(0,l.kt)("p",null,"cabal \ud30c\uc77c\uc758 ",(0,l.kt)("inlineCode",{parentName:"p"},"other-modules")," \ubaa9\ub85d\uc5d0 \uc774 \ubaa8\ub4c8\uc744 \ucd94\uac00\ud55c \ud6c4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"  other-modules:\n    MarkupParsingSpec\n")),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'MarkupParsing\n  Markup parsing tests\n    empty FAILED [1]\n\nFailures:\n\n  test/MarkupParsingSpec.hs:10:7:\n  1) MarkupParsing, Markup parsing tests, empty\n       expected: [Heading 1 "bug"]\n        but got: []\n\n  To rerun use: --match "/MarkupParsing/Markup parsing tests/empty/"\n\nRandomized with seed 763489823\n\nFinished in 0.0004 seconds\n1 example, 1 failure\n')),(0,l.kt)("p",null,"\uacc4\uce35 \ud2b8\ub9ac(\ubaa8\ub4c8, \uadf8\ub8f9, \ud14c\uc2a4\ud2b8) \ud615\ud0dc\ub85c \uc2e4\ud589\ub418\ub294 \ud14c\uc2a4\ud2b8 \uacb0\uacfc\uac00 \ucd9c\ub825\ub429\ub2c8\ub2e4.\n\uc774\ub97c \ud1b5\ud574 \uc5b4\ub5a4 \ud14c\uc2a4\ud2b8\uac00 \uc2e4\ud589\ub418\uc5c8\uace0, \ud14c\uc2a4\ud2b8\uac00 \ud1b5\uacfc\ud588\ub294\uc9c0 \uc2e4\ud328\ud588\ub294\uc9c0, \uc2e4\ud328\ud588\ub2e4\uba74 \uc5b4\ub5a4 \ucd9c\ub825\uacfc \uae30\ub300 \ucd9c\ub825\uc774 \uc788\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud558\ub3c4\ub85d \uc218\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'      shouldBe\n        (parse "")\n        []\n')),(0,l.kt)("p",null,"\uc774\uc81c \ud14c\uc2a4\ud2b8\uac00 \ud1b5\uacfc\ud558\uace0 \ub2e4\uc74c\uacfc \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"MarkupParsing\n  Markup parsing tests\n    empty\n\nFinished in 0.0001 seconds\n1 example, 0 failures\n")),(0,l.kt)("p",null,"\uba87 \uac00\uc9c0 \ud14c\uc2a4\ud2b8\ub97c \ub354 \ucd94\uac00\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'    it "paragraph" $\n      shouldBe\n        (parse "hello world")\n        [Paragraph "hello world"]\n\n    it "heading 1" $\n      shouldBe\n        (parse "* Heading 1")\n        [Heading 1 "Heading 1"]\n\n    it "code" $\n      shouldBe\n        (parse "> main = putStrLn \\"hello world!\\"")\n        [CodeBlock ["main = putStrLn \\"hello world!\\""]]\n')),(0,l.kt)("p",null,"\uc774\ud6c4 \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"MarkupParsing\n  Markup parsing tests\n    Test empty\n    paragraph\n    heading 1\n    code\n\nFinished in 0.0003 seconds\n4 examples, 0 failures\n")),(0,l.kt)("p",null,"\uc9c0\uae08\uae4c\uc9c0 Hspec\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uc558\uc2b5\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"describe"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec ",(0,l.kt)("inlineCode",{parentName:"p"},"Spec"),"\uc744 \uc911\ucca9\ud55c \ud2b8\ub9ac\uad6c\uc870\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4\ub294 \uc810\uc774 \uc911\uc694\ud569\ub2c8\ub2e4.\n\ubb3c\ub860 \ud14c\uc2a4\ud2b8\ub97c \ub2e4\ub978 \ud568\uc218\uc640 \ubaa8\ub4c8\ub85c \uc774\ub3d9\uc2dc\ucf1c\uc11c \ud14c\uc2a4\ud2b8 \uc2a4\uc704\ud2b8\ub97c \ub354 \uc798 \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc608\ub4e4 \ub4e4\uc5b4, \ub2e4\uc74c\uacfc \uac19\uc774 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'spec :: Spec\nspec = do\n  describe "Markup parsing tests" $ do\n    simple\n\nsimple :: Spec\nsimple = do\n  describe "simple" $ do\n    it "empty" $\n      shouldBe\n        (parse "")\n        []\n\n    it "paragraph" $\n      shouldBe\n        (parse "hello world")\n        [Paragraph "hello world"]\n\n    it "heading 1" $\n      shouldBe\n        (parse "* Heading 1")\n        [Heading 1 "Heading 1"]\n\n    it "code" $\n      shouldBe\n        (parse "> main = putStrLn \\"hello world!\\"")\n        [CodeBlock ["main = putStrLn \\"hello world!\\""]]\n')),(0,l.kt)("p",null,"\ub610\ud55c \ud14c\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294, ",(0,l.kt)("inlineCode",{parentName:"p"},"shouldBe"),'\uc640 \ube44\uc2b7\ud55c \ub2e4\ub978 "\uac80\uc99d\ubb38(expectations)"\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n',(0,l.kt)("a",{parentName:"p",href:"https://hspec.github.io/expectations.html"},"Hspec \ud29c\ud1a0\ub9ac\uc5bc"),"\n\ub610\ub294\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/hspec-expectations-0.8.2/docs/Test-Hspec-Expectations.html"},"haddock \ubb38\uc11c"),"\n\uc5d0\uc11c \uadf8 \ubaa9\ub85d\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"raw-\ubb38\uc790\uc5f4"},"Raw \ubb38\uc790\uc5f4"),(0,l.kt)("p",null,'\ub2e4\uc911 \ub77c\uc778 \ubb38\uc790\uc5f4\uc744 \uc791\uc131\ud558\uac70\ub098, "code" \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc5d0\uc11c \ud588\ub358 \uac83\ucc98\ub7fc \ubb38\uc790\uc5f4\uc744 \uc774\uc2a4\ucf00\uc774\ud504 \ud558\uc9c0 \uc54a\uc73c\ub824\uba74\n',(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/raw-strings-qq"},"raw-strings-qq"),"\n\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294\n",(0,l.kt)("a",{parentName:"p",href:"https://downloads.haskell.org/ghc/latest/docs/html/users_guide/exts/template_haskell.html#extension-QuasiQuotes"},(0,l.kt)("inlineCode",{parentName:"a"},"QuasiQuotes")),"\n\uc5b8\uc5b4 \ud655\uc7a5\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"QuasiQuotes"),"\ub294 \ud558\uc2a4\ucf08\uc758 \ubb38\ubc95\uc744 \ud655\uc7a5\ud558\ub294 \uba54\ud0c0 \ud504\ub85c\uadf8\ub798\ubc0d \ud655\uc7a5\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"quasi-quote\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"[quoter| string |]")," \ud615\ud0dc\ub97c \uac00\uc9c0\uba70, \uc5ec\uae30\uc11c quoter\ub294 \uc6b0\ub9ac\uac00 \uc0ac\uc6a9\ud558\uace0\uc790 \ud558\ub294 \ubb38\ubc95\uc744 \uc81c\uacf5\ud558\ub294 \ud568\uc218\uc758 \uc774\ub984\uc774\uace0, string\uc740 \uc785\ub825\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/raw-strings-qq-1.1/docs/Text-RawString-QQ.html"},"raw-strings-qq"),"\n\uc5d0 \uc815\uc758\ub41c quoter ",(0,l.kt)("inlineCode",{parentName:"p"},"r"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc911 \ub77c\uc778\uacfc \uc774\uc2a4\ucf00\uc774\ud504\ub418\uc9c0 \uc54a\uc740 \ubb38\uc790\uc5f4\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!\n\uc774\ub97c \ud65c\uc6a9\ud574 ",(0,l.kt)("a",{parentName:"p",href:"/learn-haskell-blog-generator/markup/data-type#exercises"},"\uc774\uc804\uc5d0 \uc791\uc131\ud55c \ucf54\ub4dc"),"\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"{-# language QuasiQuotes #-}\n\n...\n\nimport Text.RawString.QQ\n\n...\n\nexample3 :: String\nexample3 = [r|\nRemember that multiple lines with no separation\nare grouped together to a single paragraph\nbut list items remain separate.\n\n# Item 1 of a list\n# Item 2 of the same list\n|]\n")),(0,l.kt)("p",null,"\uc774\uc81c \ub2e4\uc911 \ub77c\uc778 \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'spec :: Spec\nspec = do\n  describe "Markup parsing tests" $ do\n    simple\n    multiline\n\n\nmultiline :: Spec\nmultiline = do\n  describe "Multi-line tests" $ do\n    it "example3" $\n      shouldBe\n        (parse example3)\n        example3Result\n\n\nexample3 :: String\nexample3 = [r|\nRemember that multiple lines with no separation\nare grouped together to a single paragraph\nbut list items remain separate.\n\n# Item 1 of a list\n# Item 2 of the same list\n|]\n\nexample3Result :: Document\nexample3Result =\n  [ Paragraph "Remember that multiple lines with no separation are grouped together to a single paragraph but list items remain separate."\n  , OrderedList\n    [ "Item 1 of a list"\n    , "Item 2 of the same list"\n    ]\n  ]\n')),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"MarkupParsing\n  Markup parsing tests\n    simple\n      Test empty\n      paragraph\n      heading 1\n      code\n    Multi-line tests\n      example3\n\nFinished in 0.0004 seconds\n5 examples, 0 failures\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\uc5f0\uc2b5\ubb38\uc81c"),": ",(0,l.kt)("a",{parentName:"p",href:"/learn-haskell-blog-generator/markup/data-type#exercises"},"\uc774\uc804 \uc5f0\uc2b5\ubb38\uc81c"),"\uc758 \ub124 \ubc88\uc9f8 \uc608\uc81c\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\uc138\uc694."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'multiline :: Spec\nmultiline = do\n  describe "Multi-line tests" $ do\n    it "example3" $\n      shouldBe\n        (parse example3)\n        example3Result\n\n    it "example4" $\n      shouldBe\n        (parse example4)\n        example4Result\n\n\nexample4 :: String\nexample4 = [r|\n* Compiling programs with ghc\n\nRunning ghc invokes the Glasgow Haskell Compiler (GHC),\nand can be used to compile Haskell modules and programs into native\nexecutables and libraries.\n\nCreate a new Haskell source file named hello.hs, and write\nthe following code in it:\n\n> main = putStrLn "Hello, Haskell!"\n\nNow, we can compile the program by invoking ghc with the file name:\n\n> \u279c ghc hello.hs\n> [1 of 1] Compiling Main             ( hello.hs, hello.o )\n> Linking hello ...\n\nGHC created the following files:\n\n- hello.hi - Haskell interface file\n- hello.o - Object file, the output of the compiler before linking\n- hello (or hello.exe on Microsoft Windows) - A native runnable executable.\n\nGHC will produce an executable when the source file satisfies both conditions:\n\n# Defines the main function in the source file\n# Defines the module name to be Main, or does not have a module declaration\n\nOtherwise, it will only produce the .o and .hi files.\n|]\n\nexample4Result :: Document\nexample4Result =\n  [ Heading 1 "Compiling programs with ghc"\n  , Paragraph "Running ghc invokes the Glasgow Haskell Compiler (GHC), and can be used to compile Haskell modules and programs into native executables and libraries."\n  , Paragraph "Create a new Haskell source file named hello.hs, and write the following code in it:"\n  , CodeBlock\n    [ "main = putStrLn \\"Hello, Haskell!\\""\n    ]\n  , Paragraph "Now, we can compile the program by invoking ghc with the file name:"\n  , CodeBlock\n    [ "\u279c ghc hello.hs"\n    , "[1 of 1] Compiling Main             ( hello.hs, hello.o )"\n    , "Linking hello ..."\n    ]\n  , Paragraph "GHC created the following files:"\n  , UnorderedList\n    [ "hello.hi - Haskell interface file"\n    , "hello.o - Object file, the output of the compiler before linking"\n    , "hello (or hello.exe on Microsoft Windows) - A native runnable executable."\n    ]\n  , Paragraph "GHC will produce an executable when the source file satisfies both conditions:"\n  , OrderedList\n    [ "Defines the main function in the source file"\n    , "Defines the module name to be Main, or does not have a module declaration"\n    ]\n  , Paragraph "Otherwise, it will only produce the .o and .hi files."\n  ]\n'))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\ubcd1\ub82c-\ud14c\uc2a4\ud2b8-\uc2e4\ud589"},"\ubcd1\ub82c \ud14c\uc2a4\ud2b8 \uc2e4\ud589"),(0,l.kt)("p",null,"\ud2b9\ubcc4\ud55c \uc124\uc815\uc744 \ud558\uc9c0 \uc54a\uc558\ub2e4\uba74, Hspec\uc740 \ubaa8\ub4e0 \ud14c\uc2a4\ud2b8\ub97c \uba54\uc778 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc21c\ucc28\uc801\uc73c\ub85c \uc2e4\ud589\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n\ud558\ub098\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Spec"),"\uc744 \uc9c1\uc811 ",(0,l.kt)("inlineCode",{parentName:"p"},"parallel")," \ud568\uc218\uc5d0 \uc804\ub2ec\ud558\uc5ec \ubcd1\ub82c\ub85c \uc2e4\ud589\ud558\ub3c4\ub85d \ud45c\uc2dc\ud558\ub294 \uac83\uc774\uace0,\n\ub2e4\ub978 \ud558\ub098\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"hspec-discover"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc790\ub3d9\uc73c\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"parallel"),"\uc744 \uc801\uc6a9\ud558\ub294 /hook/ \uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://hspec.github.io/parallel-spec-execution.html#running-all-tests-in-parallel-with-hspec-discover"},"Hspec \ubb38\uc11c"),"\n\ub97c \ucc38\uace0\ud558\uc5ec \ub450 \uac00\uc9c0 \ubc29\ubc95\uc744 \ubaa8\ub450 \uc2dc\ub3c4\ud574\ubcf4\uc138\uc694.\n\uc6b0\ub9ac\ub294 \uc774\ubbf8 cabal \ud30c\uc77c\uc5d0\uc11c \uc2a4\ub808\ub4dc \uae30\ubc18 \ub7f0\ud0c0\uc784\uc744 \ud65c\uc131\ud654\ud558\uace0 \uba40\ud2f0 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud588\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\uc694\uc57d"},"\uc694\uc57d"),(0,l.kt)("p",null,"\uc774\ubc88 \uc7a5\uc5d0\uc11c \uc18c\uac1c\ud55c \ud14c\uc2a4\ud2b8 \ubc29\ubc95\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc740 \ube59\uc0b0\uc758 \uc77c\uac01\uc5d0 \ubd88\uacfc\ud569\ub2c8\ub2e4.\n",(0,l.kt)("a",{parentName:"p",href:"https://www.scs.stanford.edu/16wi-cs240h/slides/testing.html"},"\uc18d\uc131 \ud14c\uc2a4\ud2b8")," \ub610\ub294\n",(0,l.kt)("a",{parentName:"p",href:"https://ro-che.info/articles/2017-12-04-golden-tests"},"\uace8\ub4e0 \ud14c\uc2a4\ud2b8"),"\n\uc5d0 \ub300\ud574\uc11c\ub294 \uc5b8\uae09\uc870\ucc28 \ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n\ub610\ud55c \uc608\uc678 \ud14c\uc2a4\ud2b8, IO \ucf54\ub4dc \ud14c\uc2a4\ud2b8, \ud14c\uc2a4\ud2b8 \ubd84\uc11d, \ubca4\uce58\ub9c8\ud06c \ub4f1\ub4f1\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub2e4\ub8e8\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n\uc774\ub97c \ub2e4\ub8e8\uae30\uc5d0\ub294 \ub108\ubb34 \ubc29\ub300\ud55c \uc8fc\uc81c\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4!"),(0,l.kt)("p",null,"\uc774\ubc88 \uc7a5\uc744 \ud1b5\ud574 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ud14c\uc2a4\ud2b8 \uc791\uc131\uc744 \uc2dc\uc791\ud558\uae30 \uc704\ud55c \uae30\ubcf8\uc801\uc778 \ub0b4\uc6a9\uc744 \uc804\ub2ec\ud558\uace0\uc790 \ud588\uc2b5\ub2c8\ub2e4.\n\uc120\ud0dd\ud55c \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\uc758 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \ucc38\uace0\ud558\uace0, \uc9c1\uc811 \ud14c\uc2a4\ud2b8\uc5d0 \ub300\ud55c \ucd94\uac00\uc801\uc778 \ubb38\uc11c\ub97c \uc77d\uc5b4\ubcf4\uc138\uc694."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Git \ucee4\ubc0b\uc744 \ud1b5\ud574\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/commit/da1615b6e0a2a4ff2728528240d790754853bf02"},"\uc774\ubc88\uc5d0 \uc218\uc815\ud55c \ub0b4\uc5ed"),"\n\uacfc ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/tree/da1615b6e0a2a4ff2728528240d790754853bf02"},"\ud604\uc7ac\uae4c\uc9c0 \ucf54\ub4dc")," \ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")))}d.isMDXComponent=!0}}]);