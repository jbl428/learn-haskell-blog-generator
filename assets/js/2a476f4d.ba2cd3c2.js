"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[499],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>c});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=a.createContext({}),m=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=m(e.components);return a.createElement(o.Provider,{value:n},e.children)},k="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),k=m(t),u=l,c=k["".concat(o,".").concat(u)]||k[u]||s[u]||r;return t?a.createElement(c,i(i({ref:n},d),{},{components:t})):a.createElement(c,i({ref:n},d))}));function c(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[k]="string"==typeof e?e:l,i[1]=p;for(var m=2;m<r;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8265:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var a=t(7462),l=(t(7294),t(3905));const r={},i="\ud658\uacbd \ubcc0\uc218 \uc804\ub2ec\ud558\uae30",p={unversionedId:"environment",id:"environment",title:"\ud658\uacbd \ubcc0\uc218 \uc804\ub2ec\ud558\uae30",description:"\uc774\ubc88 \uc7a5\uc5d0\uc11c\ub294 \ube14\ub85c\uadf8 \uc774\ub984, \uc2a4\ud0c0\uc77c\uc2dc\ud2b8 \uc704\uce58\uc640 \uac19\uc740 \ube14\ub85c\uadf8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc815\ubcf4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\ub294 \ud658\uacbd\uc744 \ucd94\uac00\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.",source:"@site/docs/07-environment.md",sourceDirName:".",slug:"/environment",permalink:"/learn-haskell-blog-generator/environment",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/07-environment.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\uc694\uc57d",permalink:"/learn-haskell-blog-generator/errors_and_files/summary"},next:{title:"\ud14c\uc2a4\ud2b8",permalink:"/learn-haskell-blog-generator/testing"}},o={},m=[{value:"\ud658\uacbd",id:"\ud658\uacbd",level:2},{value:"ReaderT",id:"readert",level:3},{value:"Reader \uc0ac\uc6a9\ubc95",id:"reader-\uc0ac\uc6a9\ubc95",level:3},{value:"\ud568\uc218 \uc815\uc758\ud558\uae30",id:"\ud568\uc218-\uc815\uc758\ud558\uae30",level:4},{value:"<code>Env</code> \ucd94\ucd9c\ud558\uae30",id:"env-\ucd94\ucd9c\ud558\uae30",level:4},{value:"<code>Reader</code> \uc2e4\ud589\ud558\uae30",id:"reader-\uc2e4\ud589\ud558\uae30",level:3},{value:"\ucd94\uac00: \ud2b9\uc815 \ud638\ucd9c\uc744 \uc704\ud574 <code>Env</code> \ubcc0\ud658\ud558\uae30",id:"\ucd94\uac00-\ud2b9\uc815-\ud638\ucd9c\uc744-\uc704\ud574-env-\ubcc0\ud658\ud558\uae30",level:3},{value:"\ub85c\uc9c1\uc5d0\uc11c <code>Env</code> \uc0ac\uc6a9\ud558\uae30",id:"\ub85c\uc9c1\uc5d0\uc11c-env-\uc0ac\uc6a9\ud558\uae30",level:3},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:3}],d={toc:m},k="wrapper";function s(e){let{components:n,...t}=e;return(0,l.kt)(k,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\ud658\uacbd-\ubcc0\uc218-\uc804\ub2ec\ud558\uae30"},"\ud658\uacbd \ubcc0\uc218 \uc804\ub2ec\ud558\uae30"),(0,l.kt)("p",null,"\uc774\ubc88 \uc7a5\uc5d0\uc11c\ub294 \ube14\ub85c\uadf8 \uc774\ub984, \uc2a4\ud0c0\uc77c\uc2dc\ud2b8 \uc704\uce58\uc640 \uac19\uc740 \ube14\ub85c\uadf8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc815\ubcf4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\ub294 \ud658\uacbd\uc744 \ucd94\uac00\ud558\uace0\uc790 \ud569\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\ud658\uacbd"},"\ud658\uacbd"),(0,l.kt)("p",null,"\ud658\uacbd\uc740 \ub808\ucf54\ub4dc \ub370\uc774\ud130 \ud0c0\uc785\uc73c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc73c\uba70 \uc0ac\uc6a9\uc790 \uc785\ub825\uc744 \ud1b5\ud574 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc5ec\uae30\uc11c \uc0ac\uc6a9\uc790 \uc785\ub825\uc740 \uba85\ub839\ud589 \uc778\uc790, \uad6c\uc131 \ud30c\uc77c \ub610\ub294 \uadf8 \uc678 \ub2e4\ub978 \uac83\ub4e4\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'module HsBlog.Env where\n\ndata Env\n  = Env\n    { eBlogName :: String\n    , eStylesheetPath :: FilePath\n    }\n  deriving Show\n\ndefaultEnv :: Env\ndefaultEnv = Env "My Blog" "style.css"\n')),(0,l.kt)("p",null,"\uc774\ub7ec\ud55c \ub808\ucf54\ub4dc\ub97c \uc694\uccad\ubc1b\uc740 \uc815\ubcf4\ub85c \ucc44\uc6b4\uc774\ud6c4, \ud544\uc694\ub85c \ud558\ub294 \ud568\uc218\uc758 \uc785\ub825\uc73c\ub85c \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 \uc791\uc740 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc798 \ub3d9\uc791\ud558\uc9c0\ub9cc, \ud504\ub85c\uc81d\ud2b8\uac00 \ucee4\uc9c0\uace0 \ub9ce\uc740 \uc911\ucca9\ub41c \ud568\uc218\ub4e4\uc774 \uac19\uc740 \uc815\ubcf4\ub97c \ud544\uc694\ub85c \ud560 \ub54c\ub294 \ud658\uacbd\uc744 \uc804\ub2ec\ud558\ub294 \uac83\uc774 \ubc88\uac70\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud568\uc218\uc758 \uc785\ub825\uc73c\ub85c \ud658\uacbd\uc744 \uc804\ub2ec\ud558\ub294 \ub300\uc2e0, ",(0,l.kt)("inlineCode",{parentName:"p"},"mtl")," (\ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"transformers"),") \ud328\ud0a4\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#g:2"},(0,l.kt)("inlineCode",{parentName:"a"},"ReaderT")),"\n\ud0c0\uc785\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"readert"},"ReaderT"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"newtype ReaderT r m a = ReaderT (r -> m a)\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"ExceptT"),"\uc640 \ube44\uc2b7\ud55c ",(0,l.kt)("em",{parentName:"p"},"monad transformer"),"\uc774\uba70\n",(0,l.kt)("inlineCode",{parentName:"p"},"Functor"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Applicative"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Monad")," \uadf8\ub9ac\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"MonadTrans"),"\uc758 \uc778\uc2a4\ud134\uc2a4 \ub610\ud55c \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc815\uc758\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774, ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," \ud0c0\uc785\uc758 \uac12\uc744 \ubc1b\uc544 ",(0,l.kt)("inlineCode",{parentName:"p"},"m a")," \ud0c0\uc785\uc758 \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \uac10\uc2fc ",(0,l.kt)("em",{parentName:"p"},"newtype")," \uc785\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"r"),"\uc740 \ubcf4\ud1b5 \uc6b0\ub9ac\uac00 \ud569\uc131\ud558\uace0\uc790 \ud558\ub294 \ud568\uc218\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uacf5\uc720\ud558\uace0\uc790 \ud558\ub294 \ud658\uacbd\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"m a"),"\ub294 \uc6b0\ub9ac\uac00 \ubc18\ud658\ud558\uace0\uc790 \ud558\ub294 \uacb0\uacfc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"m"),"\uc740 \uc6b0\ub9ac\uac00 \uc775\uc219\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"Monad"),"\ub97c \uad6c\ud604\ud558\ub294 \uc5b4\ub5a4 \ud0c0\uc785\uc774\ub4e0 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ubcf4\ud1b5 ",(0,l.kt)("inlineCode",{parentName:"p"},"IO")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Identity"),"\uc640 \uc798 \uc5b4\uc6b8\ub9ac\ub294\ub370, \ud658\uacbd\uc744 \ud6a8\uacfc\uac00 \uc788\ub294 \ub610\ub294 \ud6a8\uacfc\uac00 \uc5c6\ub294 \uacc4\uc0b0 \uc0ac\uc774\uc5d0\uc11c \uacf5\uc720\ud558\uace0\uc790 \ud560 \ub54c\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," \ud0c0\uc785\uc758 \uac12\uc744 ",(0,l.kt)("em",{parentName:"p"},"\uac00\uc9c0\uace0 \uc788\uace0")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Applicative"),"\uacfc ",(0,l.kt)("inlineCode",{parentName:"p"},"Monad")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c \ub2e4\ub978 \ud568\uc218\ub4e4\uc5d0\uac8c ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," \ud0c0\uc785\uc758 \uac12\uc744 \uc804\ub2ec\ud569\ub2c8\ub2e4.\n\ub530\ub77c\uc11c \uc9c1\uc811 ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," \ud0c0\uc785\uc758 \uac12\uc744 \uc804\ub2ec\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4.\n\ud544\uc694\ud55c \uacbd\uc6b0 \ub2e8\uc21c\ud788 ",(0,l.kt)("inlineCode",{parentName:"p"},"ask"),"\ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ube14\ub85c\uadf8\uc758 \uacbd\uc6b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Env"),"\ub97c \uc804\ub2ec\ud558\ub294 \ub300\uc2e0 \uc6b0\ub9ac\uc758 \ud568\uc218\ub4e4\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub97c \uc0ac\uc6a9\ud558\uac8c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud6a8\uacfc\uac00 \uc5c6\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"IO"),"\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\uba74 ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \ub300\uc2e0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader Env a"),"\ub97c \ubc18\ud658\ud558\uace0 (\ub610\ub294 \ub354 \uac04\ub2e8\ud55c \ubc84\uc804\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader Env a"),"),\n\ud6a8\uacfc\uac00 \uc788\ub294 \uacbd\uc6b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"IO a")," \ub300\uc2e0 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT Env IO a"),"\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774\uc804\uc5d0 \uc5b8\uae09\ud588\ub4ef\uc774, ",(0,l.kt)("inlineCode",{parentName:"p"},"Functor"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Applicative")," \uadf8\ub9ac\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Monad"),"\ub294 \uc774\ub4e4\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud55c \ud0c0\uc785\uc774 ",(0,l.kt)("inlineCode",{parentName:"p"},"* -> *")," kind\ub97c \uac00\uc838\uc57c\ud569\ub2c8\ub2e4.\n\uc774\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT r m"),"\uc774 \uc774\ub4e4\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud558\uace0, \ud568\uc218\ub4e4\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"<*>")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},">>="),"\ub85c \ud569\uc131\ud560 \ub54c ",(0,l.kt)("inlineCode",{parentName:"p"},"f")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"m"),"\uc744 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\uc5d0\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT r m"),"\uc73c\ub85c \ub300\uccb4\ud55c\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Either e"),"\uc758 \uacbd\uc6b0 \uac19\uc740 \uc5d0\ub7ec\ud0c0\uc785\uc744 \uac00\uc9c4 \ud568\uc218\ub07c\ub9ac\ub9cc \ud569\uc131\ud560 \uc218 \uc788\uc5c8\ub358 \uac83\uacfc \ube44\uc2b7\ud558\uac8c,\n",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT r m"),"\uc758 \uacbd\uc6b0 \uac19\uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"r")," \ud0c0\uc785\uacfc \uac19\uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"m")," \ud0c0\uc785\uc744 \uac00\uc9c4 \ud568\uc218\ub07c\ub9ac\ub9cc \ud569\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc6b0\ub9ac\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"m"),"\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"Identity"),"\ub85c \ud558\ub294 \ud2b9\uc218\ud654\ub41c ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\uc778\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#g:2"},(0,l.kt)("inlineCode",{parentName:"a"},"Reader")),"\n\ub97c \uc0ac\uc6a9\ud560 \uc608\uc815\uc778\ub514\u314f.\n",(0,l.kt)("inlineCode",{parentName:"p"},"Control.Monad.Reader"),"\ub294 \ub2e4\uc74c alias\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4: ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader r a = ReaderT r Identity a"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\ub9cc\uc57d ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\uc5d0 \ub300\ud55c \uac1c\ub150\uc774 \uc544\uc9c1 \ud63c\ub780\uc2a4\ub7fd\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\uac00 \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0 \ub354 \uc798 \uc774\ud574\ud558\uace0 \uc2f6\ub2e4\uba74, \ub2e4\uc74c \uc5f0\uc2b5\ubb38\uc81c\ub97c \ud480\uc5b4\ubcf4\uc138\uc694:"),(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Applicative")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"li"},"Monad")," \uc778\ud130\ud398\uc774\uc2a4 \ud568\uc218\ub97c \uc120\ud0dd\ud558\uc138\uc694. \uac1c\uc778\uc801\uc73c\ub85c ",(0,l.kt)("inlineCode",{parentName:"li"},"liftA2"),"\ub97c \ucd94\ucc9c\ud569\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 ",(0,l.kt)("inlineCode",{parentName:"li"},"f")," (\ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"li"},"m"),")\ub97c ",(0,l.kt)("inlineCode",{parentName:"li"},"ReaderT")," \ud0c0\uc785\uc778 ",(0,l.kt)("inlineCode",{parentName:"li"},"ReaderT Int IO"),"\uc640 \uac19\uc740 \uad6c\uccb4\uc801\uc778 \ud0c0\uc785\uc73c\ub85c \ub300\uccb4\ud558\uc5ec \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \ud2b9\uc218\ud654\ud558\uc138\uc694."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"ReaderT")," newtype\uc744 \ud480\uc5b4 ",(0,l.kt)("inlineCode",{parentName:"li"},"ReaderT Int IO t"),"\ub97c ",(0,l.kt)("inlineCode",{parentName:"li"},"Int -> IO t"),"\ub85c \ub300\uccb4\ud558\uc138\uc694."),(0,l.kt)("li",{parentName:"ol"},"\uc120\ud0dd\ud55c \ud568\uc218\ub97c \ud2b9\uc218\ud654\ub41c \ud0c0\uc785\uc5d0 \ub300\ud574 \uad6c\ud604\ud558\uc138\uc694.")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"liftA2\uc5d0 \ub300\ud55c \uc815\ub2f5"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"liftA2 :: Applicative f => (a -> b -> c) -> f a -> f b -> f c\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"(1)\ubc88 \uc815\ub2f5"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"-- \ud2b9\uc218\ud654: `f`\ub97c `ReaderT Env IO`\ub85c \ub300\uccb4\nliftA2 :: (a -> b -> c) -> ReaderT Env IO a -> ReaderT Env IO b -> ReaderT Env IO c\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"(2)\ubc88 \uc815\ub2f5"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"-- newtype \ud574\uc81c, `ReaderT Env IO a`\ub97c `Env -> IO a`\ub85c \ub300\uccb4\nliftA2 :: (a -> b -> c) -> (Env -> IO a) -> (Env -> IO b) -> (Env -> IO c)\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"(3)\ubc88 \uc815\ub2f5"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"specialLiftA2 :: (a -> b -> c) -> (Env -> IO a) -> (Env -> IO b) -> (Env -> IO c)\nspecialLiftA2 combine funcA funcB env =\n  liftA2 combine (funcA env) (funcB env)\n")),(0,l.kt)("p",{parentName:"blockquote"},"\uc774\ub7ec\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\uc5d0 \ub300\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"liftA2"),"\uc758 \uc5ed\ud560\uc740 \ub450 \ud568\uc218\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"p"},"env"),"\ub97c \uc81c\uacf5\ud558\uace0, \ub098\uba38\uc9c0 \uc77c\uc740 \uae30\ubc18 \ud0c0\uc785 ",(0,l.kt)("inlineCode",{parentName:"p"},"m")," (\uc6b0\ub9ac\uc758 \uacbd\uc6b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"IO"),")\uc758 ",(0,l.kt)("inlineCode",{parentName:"p"},"liftA2")," \uad6c\ud604\uc5d0 \uc704\uc784\ud558\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \ud615\ud0dc\ub294 \ub2e4\uc591\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"m"),"\uc5d0 \ub300\ud574 \uae30\ub2a5\uc744 \ucd94\uac00\ud558\ub294 \uac83\ucc98\ub7fc \ubcf4\uc774\uc9c0 \uc54a\ub098\uc694?\n\uc774\uac83\uc774 \ubc14\ub85c monad transformer\uc758 \uc544\uc774\ub514\uc5b4\uc785\ub2c8\ub2e4.")))),(0,l.kt)("h3",{id:"reader-\uc0ac\uc6a9\ubc95"},"Reader \uc0ac\uc6a9\ubc95"),(0,l.kt)("h4",{id:"\ud568\uc218-\uc815\uc758\ud558\uae30"},"\ud568\uc218 \uc815\uc758\ud558\uae30"),(0,l.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc740 \ud568\uc218\ub97c \uc815\uc758\ud558\ub294 \ub300\uc2e0:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"txtsToRenderedHtml :: Env -> [(FilePath, String)] -> [(FilePath, String)]\n")),(0,l.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud569\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"txtsToRenderedHtml :: [(FilePath, String)] -> Reader Env [(FilePath, String)]\n")),(0,l.kt)("p",null,"\uc774\uc81c \uc774 \ud568\uc218\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ubbc0\ub85c, \ud568\uc218 \uad6c\ud604\ubd80\ub3c4 \uc218\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ubcc0\uacbd \uc804:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'txtsToRenderedHtml :: Env -> [(FilePath, String)] -> [(FilePath, String)]\ntxtsToRenderedHtml env txtFiles =\n let\n   txtOutputFiles = map toOutputMarkupFile txtFiles\n   index = ("index.html", buildIndex env txtOutputFiles)\n   htmlPages = map (convertFile env) txtOutputFiles\n in\n   map (fmap Html.render) (index : htmlPages)\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"env"),"\ub97c \ub2e4\ub978 \ud568\uc218\uc5d0\uac8c \uc5b4\ub5bb\uac8c \uc804\ub2ec\ud558\ub294\uc9c0 \uc8fc\uc758\uae4a\uac8c \uc0b4\ud3b4\ubcf4\uc138\uc694."),(0,l.kt)("p",null,"\ubcc0\uacbd \ud6c4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'txtsToRenderedHtml :: [(FilePath, String)] -> Reader Env [(FilePath, String)]\ntxtsToRenderedHtml txtFiles = do\n  let\n    txtOutputFiles = map toOutputMarkupFile txtFiles\n  index <- (,) "index.html" <$> buildIndex txtOutputFiles\n  htmlPages <- traverse convertFile txtOutputFiles\n  pure $ map (fmap Html.render) (index : htmlPages)\n')),(0,l.kt)("p",null,"\uc774\uc81c ",(0,l.kt)("em",{parentName:"p"},"do \ud45c\uae30\ubc95"),"\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\uba70, ",(0,l.kt)("inlineCode",{parentName:"p"},"env"),"\ub97c \uc804\ub2ec\ud558\uc9c0 \uc54a\uace0\ub3c4 ",(0,l.kt)("inlineCode",{parentName:"p"},"buildIndex"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"convertFile"),"\uc744 ",(0,l.kt)("em",{parentName:"p"},"\ud569\uc131"),"\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud568\uc218\ub97c \ud569\uc131\ud558\uae30 \uc704\ud574 \ud0c0\uc785 \ud074\ub798\uc2a4 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\n",(0,l.kt)("inlineCode",{parentName:"p"},"buildIndex"),"\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \uc0ac\uc6a9\ud574 \ucd9c\ub825 \ud30c\uc77c\uc744 \ucd94\uac00\ud558\uace0, ",(0,l.kt)("inlineCode",{parentName:"p"},"map")," \ub300\uc2e0 ",(0,l.kt)("inlineCode",{parentName:"p"},"traverse"),"\ub97c \uc0ac\uc6a9\ud574 ",(0,l.kt)("inlineCode",{parentName:"p"},"convertFile"),"\uc774 \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader")," \uac12\uc744 \ud569\uc131\ud569\ub2c8\ub2e4."),(0,l.kt)("h4",{id:"env-\ucd94\ucd9c\ud558\uae30"},(0,l.kt)("inlineCode",{parentName:"h4"},"Env")," \ucd94\ucd9c\ud558\uae30"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Env"),"\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\uc5d0\uc11c ",(0,l.kt)("em",{parentName:"p"},"\ucd94\ucd9c"),"\ud574\uc57c \ud569\ub2c8\ub2e4.\n\ub2e4\uc74c \ud568\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"ask :: ReaderT r m r\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ask"),"\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\uc5d0\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"r"),"\uc744 \uaebc\ub0b4\uc624\uba70 ",(0,l.kt)("inlineCode",{parentName:"p"},">>=")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"do")," \ud45c\uae30\ubc95 \uc548\uc5d0\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"<-"),"\uc744 \uc0ac\uc6a9\ud574 \ucd94\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ub2e4\uc74c \ucf54\ub4dc\ub97c \ube44\uad50\ud574\ubcf4\uc138\uc694:"),(0,l.kt)("p",null,"\ubcc0\uacbd \uc804:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"convertFile :: Env -> (FilePath, Markup.Document) -> (FilePath, Html.Html)\nconvertFile env (file, doc) =\n  (file, convert env (takeBaseName file) doc)\n")),(0,l.kt)("p",null,"\ubcc0\uacbd \ud6c4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"convertFile :: (FilePath, Markup.Document) -> Reader Env (FilePath, Html.Html)\nconvertFile (file, doc) = do\n  env <- ask\n  pure (file, convert env (takeBaseName file) doc)\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 ",(0,l.kt)("inlineCode",{parentName:"p"},"convert"),"\ub97c \uc218\uc815\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"convert"),"\uac00 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ub178\ucd9c\ub418\ub294 API\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\ub354 \uac04\ub2e8\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud568\uc73c\ub85c\uc368, monad transformer\uc5d0 \ub300\ud574 \uc544\uc9c1 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub3c4 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",{parentName:"admonition"},"\ud568\uc218 \uc778\uc790 \uc804\ub2ec \uc778\ud130\ud398\uc774\uc2a4\ub294 \uac04\ub2e8\ud558\uac8c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.")),(0,l.kt)("h3",{id:"reader-\uc2e4\ud589\ud558\uae30"},(0,l.kt)("inlineCode",{parentName:"h3"},"Reader")," \uc2e4\ud589\ud558\uae30"),(0,l.kt)("p",null,"\uc774\uc804\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Either"),"\ub97c \uc0ac\uc6a9\ud574 \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uacfc \ube44\uc2b7\ud558\uac8c, ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uacc4\uc0b0\uc5d0 \ud658\uacbd\uc744 \uc804\ub2ec\ud558\uace0, \uacc4\uc0b0\uc5d0\uc11c \uacb0\uacfc\ub97c \ucd94\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4.\n\uc774\ub97c \uc704\ud574 ",(0,l.kt)("inlineCode",{parentName:"p"},"runReader"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"runReaderT")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"runReader :: Reader r a -> (r -> a)\n\nrunReaderT :: ReaderT r m a -> (r -> m a)\n")),(0,l.kt)("p",null,"\uc774\ub7ec\ud55c \ud568\uc218\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader")," \ub610\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"r"),"\uc744 \ubc1b\ub294 \ud568\uc218\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n\uadf8\ub7ec\uba74 \uc774 \ud568\uc218\uc5d0 \ucd08\uae30 \ud658\uacbd\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'convertDirectory :: Env -> FilePath -> FilePath -> IO ()\nconvertDirectory env inputDir outputDir = do\n  DirContents filesToProcess filesToCopy <- getDirFilesAndContent inputDir\n  createOutputDirectoryOrExit outputDir\n  let\n    outputHtmls = runReader (txtsToRenderedHtml filesToProcess) env\n  copyFiles outputDir filesToCopy\n  writeFiles outputDir outputHtmls\n  putStrLn "Done."\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"let outputHtmls")," \ubd80\ubd84\uc744 \uc0b4\ud3b4\ubcf4\uc138\uc694."),(0,l.kt)("h3",{id:"\ucd94\uac00-\ud2b9\uc815-\ud638\ucd9c\uc744-\uc704\ud574-env-\ubcc0\ud658\ud558\uae30"},"\ucd94\uac00: \ud2b9\uc815 \ud638\ucd9c\uc744 \uc704\ud574 ",(0,l.kt)("inlineCode",{parentName:"h3"},"Env")," \ubcc0\ud658\ud558\uae30"),(0,l.kt)("p",null,"\ub54c\ub85c\ub294 \ud2b9\uc815 \ud568\uc218 \ud638\ucd9c\uc5d0 \uc804\ub2ec\ud558\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Env"),"\ub97c \uc218\uc815\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\uc608\ub97c \ub4e4\uc5b4, \ub9ce\uc740 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub294 \uc77c\ubc18\uc801\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"Env")," \ud0c0\uc785\uc774 \uc788\uace0, \uadf8 \uc911 \uc77c\ubd80 \uc815\ubcf4\ub9cc \ud544\uc694\ub85c \ud558\ub294 \ud568\uc218 \ud638\ucd9c\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ub9cc\uc57d \ud638\ucd9c\ud558\ub294 \ud568\uc218\uac00 ",(0,l.kt)("inlineCode",{parentName:"p"},"conver"),"\uc640 \ube44\uc2b7\ud558\uace0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub300\uc2e0 \ud658\uacbd\uc744 \uc778\uc790\ub85c \ubc1b\ub294\ub2e4\uba74,\n",(0,l.kt)("inlineCode",{parentName:"p"},"ask"),"\ub97c \ud65c\uc6a9\ud574 \ud658\uacbd\uc744 \ucd94\ucd9c\ud558\uace0, \ubcc0\ud658\ud55c \ud6c4 \uadf8 \uacb0\uacfc\ub97c \ud568\uc218\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"outer :: Reader BigEnv MyResult\nouter = do\n  env <- ask\n  pure (inner (extractSmallEnv env))\n\ninner :: SmallEnv -> MyResult\ninner = ...\n\nextractSmallEnv :: BigEnv -> SmallEnv\nextractSmallEnv = ...\n")),(0,l.kt)("p",null,"\ud558\uc9c0\ub9cc \ub9cc\uc57d ",(0,l.kt)("inlineCode",{parentName:"p"},"inner"),"\uac00 \uc778\uc790 \uc804\ub2ec \ub300\uc2e0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader SmallEnv"),"\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74,\n",(0,l.kt)("inlineCode",{parentName:"p"},"runReader"),"\ub97c \uc0ac\uc6a9\ud574 ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"em"},"inner"),"\ub97c \uc77c\ubc18 \ud568\uc218\ub85c \ubcc0\ud658"),"\ud560 \uc218 \uc788\uc73c\uba70 \uc704\uc640 \uac19\uc740 \ubc29\uc2dd\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"outer :: Reader BigEnv MyResult\nouter = do\n  env <- ask\n  -- Here the type of `runReader inner` is `SmallEnv -> MyResult`\n  pure (runReader inner (extractSmallEnv env))\n\ninner :: Reader SmallEnv MyResult\ninner = ...\n\nextractSmallEnv :: BigEnv -> SmallEnv\nextractSmallEnv = ...\n")),(0,l.kt)("p",null,"\uc774\ub7ec\ud55c \ud328\ud134\uc740 \uc77c\ubc18\uc801\uc774\ub77c\uc11c\n",(0,l.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/transformers-0.6.0.2/docs/Control-Monad-Trans-Reader.html#v:withReaderT"},"withReaderT"),"\n\ub77c\ub294 \ud568\uc218\uac00 \uc874\uc7ac\ud558\uba70 \uc774\ub97c \uc0ac\uc6a9\ud574 \ub354 \uac04\ub2e8\ud558\uac8c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"withReaderT :: (env2 -> env1) -> ReaderT env1 m a -> ReaderT env2 m a\n")),(0,l.kt)("p",null,"\uc774 \ud568\uc218\ub294 \ud658\uacbd\uc744 \ubcc0\ud658\ud558\ub294 \ud568\uc218\ub97c \ubc1b\uc544 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT env1 m a")," \uacc4\uc0b0\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT env2 m a")," \uacc4\uc0b0\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774\ubc88 \uc608\uc81c\uc5d0 \uc801\uc6a9\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"outer :: Reader BigEnv MyResult\nouter = withReaderT extractSmallEnv inner\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\ubb38\uc81c: \uc774\ubc88 \uc608\uc81c\ub85c \uad6c\uccb4\ud654\ud558\uba74 ",(0,l.kt)("inlineCode",{parentName:"p"},"withReaderT"),"\uc758 \ud0c0\uc785\uc740 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"withReaderT\n  :: (BigEnv -> SmallEnv)     -- `extractSmallEnv` \ud0c0\uc785\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4.\n  -> Reader SmallEnv MyResult -- `inner` \ud0c0\uc785\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4.\n  -> Reader BigEnv   MyResult -- `outer` \ud0c0\uc785\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4.\n"))),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\uac01 \ud658\uacbd\uc758 \uc21c\uc11c\uc5d0 \uc8fc\uc758\ud558\uc138\uc694!\n",(0,l.kt)("inlineCode",{parentName:"p"},"SmallEnv"),"\uc758 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"BigEnv"),"\uc758 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub85c \ubcc0\ud658\ud558\uae30 \uc704\ud574\uc11c\ub294, ",(0,l.kt)("inlineCode",{parentName:"p"},"BigEnv"),"\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"SmallEnv"),"\ub85c \ubcc0\ud658\ud558\ub294 \ud568\uc218\uac00 \ud544\uc694\ud569\ub2c8\ub2e4!"),(0,l.kt)("p",null,"\uc774\ub7ec\ud55c \uc21c\uc11c\ub97c \uac00\uc9c0\ub294 \uc774\uc720\ub294 \ud568\uc218\uc758 ",(0,l.kt)("em",{parentName:"p"},"\ucd9c\ub825"),"\ub300\uc2e0 ",(0,l.kt)("em",{parentName:"p"},"\uc785\ub825"),"\uc5d0 \ub300\ud574 \ub9e4\ud551\uc744 \uc218\ud589\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\n\uc774\ub294 \uacf5\ubcc0(variance)\uacfc \ubc18\uacf5\ubcc0(covariance)\uc5d0 \ub300\ud55c \uc8fc\uc81c\uc640 \uad00\ub828\uc774 \uc788\uc9c0\ub9cc, \uc9c0\uae08 \ub2f9\uc7a5\uc740 \uc911\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"\ub85c\uc9c1\uc5d0\uc11c-env-\uc0ac\uc6a9\ud558\uae30"},"\ub85c\uc9c1\uc5d0\uc11c ",(0,l.kt)("inlineCode",{parentName:"h3"},"Env")," \uc0ac\uc6a9\ud558\uae30"),(0,l.kt)("p",null,"\uc544\uc9c1 \ub2e4\ub8e8\uc9c0 \ubabb\ud55c \uc8fc\uc81c\uac00 \ud558\ub098 \uc788\uc2b5\ub2c8\ub2e4.\n\ubc14\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"convert")," \ud568\uc218\ub97c \ud1b5\ud574 \uc6d0\ud558\ub294 \ud398\uc774\uc9c0\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.\n\uc0ac\uc2e4 \uc6b0\ub9ac\ub294 \uc544\uc9c1 \uc2a4\ud0c0\uc77c\uc2dc\ud2b8\ub97c HTML EDSL\uc5d0 \ucd94\uac00\ud558\ub294 \uae30\ub2a5\uc870\ucc28 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n\uc774\uc81c \uc774 \uae30\ub2a5\uc744 \ucd94\uac00\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4:"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\uc2a4\ud0c0\uc77c\uc2dc\ud2b8\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"head")," \uc694\uc18c\uc5d0 \ub4e4\uc5b4\uac00\uae30 \ub54c\ubb38\uc5d0, ",(0,l.kt)("inlineCode",{parentName:"p"},"head")," \uc815\ubcf4\ub97c \uc704\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"Structure"),"\uc640 \uac19\uc740 \ucd94\uac00\uc801\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"newtype"),"\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\uc81c\ubaa9, \uc2a4\ud0c0\uc77c\uc2dc\ud2b8, \uadf8\ub9ac\uace0 \uba54\ud0c0 \uc694\uc18c\uc640 \uac19\uc740 \uac83\ub4e4\uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"Structure"),"\ub97c \ub9cc\ub4e4\uba74\uc11c \ud588\ub358\uac83\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc870\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\uc9c0\uae08 \ub2f9\uc7a5 \ud574\ubcf4\uae30: ",(0,l.kt)("inlineCode",{parentName:"p"},"head"),"\ub97c \uc704\ud55c 3 \uac1c\uc758 \ud568\uc218\ub97c \uad6c\ud604\ud574 HTML \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud655\uc7a5\ud574\ubcf4\uc138\uc694.\n\uc81c\ubaa9\uc744 \uc704\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"title_"),", \uc2a4\ud0c0\uc77c\uc2dc\ud2b8\ub97c \uc704\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"stylesheet_"),", \uadf8\ub9ac\uace0\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards"},"twitter cards"),"\n\uc640 \uac19\uc740 \uba54\ud0c0 \uc694\uc18c\ub97c \uc704\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"meta_"),"\uc785\ub2c8\ub2e4."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/HsBlog/Html.hs"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"-- Html.hs\n\nmodule HsBlog.Html\n  ( Html\n  , Head\n  , title_\n  , stylesheet_\n  , meta_\n  , Structure\n  , html_\n  , p_\n  , h_\n  , ul_\n  , ol_\n  , code_\n , Content\n  , txt_\n  , img_\n  , link_\n  , b_\n  , i_\n  , render\n  )\n  where\n\nimport Prelude hiding (head)\nimport HsBlog.Html.Internal\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/HsBlog/Html/Internal.hs"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'newtype Head\n  = Head String\n\n-- * EDSL\n\nhtml_ :: Head -> Structure -> Html\nhtml_ (Head head) content =\n  Html\n    ( el "html"\n      ( el "head" head\n        <> el "body" (getStructureString content)\n      )\n    )\n\n-- * Head\n\ntitle_ :: String -> Head\ntitle_ = Head . el "title" . escape\n\nstylesheet_ :: FilePath -> Head\nstylesheet_ path =\n  Head $ "<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"" <> escape path <> "\\">"\n\nmeta_ :: String -> String -> Head\nmeta_ name content =\n  Head $ "<meta name=\\"" <> escape name <> "\\" content=\\"" <> escape content <> "\\">"\n\ninstance Semigroup Head where\n  (<>) (Head h1) (Head h2) =\n    Head (h1 <> h2)\n\ninstance Monoid Head where\n  mempty = Head ""\n'))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"conver"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"buildIndex"),"\uac00 \uc0c8\ub85c\uc6b4 API\ub97c \uc0ac\uc6a9\ud558\uac8c \uc218\uc815\ud558\uc138\uc694.\n",(0,l.kt)("inlineCode",{parentName:"p"},"buildIndex"),"\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \ubc18\ud658\ud574\uc57c \ud569\ub2c8\ub2e4!"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/HsBlog/Convert.hs"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'import Prelude hiding (head)\nimport HsBlog.Env (Env(..))\n\nconvert :: Env -> String -> Markup.Document -> Html.Html\nconvert env title doc =\n  let\n    head =\n      Html.title_ (eBlogName env <> " - " <> title)\n        <> Html.stylesheet_ (eStylesheetPath env)\n    article =\n      foldMap convertStructure doc\n    websiteTitle =\n      Html.h_ 1 (Html.link_ "index.html" $ Html.txt_ $ eBlogName env)\n    body =\n      websiteTitle <> article\n  in\n    Html.html_ head body\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/HsBlog/Directory.hs"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'buildIndex :: [(FilePath, Markup.Document)] -> Reader Env Html.Html\nbuildIndex files = do\n  env <- ask\n  let\n    previews =\n      map\n        ( \\(file, doc) ->\n          case doc of\n            Markup.Head 1 head : article ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ head))\n                <> foldMap convertStructure (take 2 article)\n                <> Html.p_ (Html.link_ file (Html.txt_ "..."))\n            _ ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ file))\n        )\n        files\n  pure $ Html.html_\n      ( Html.title_ (eBlogName env)\n        <> Html.stylesheet_ (eStylesheetPath env)\n      )\n      ( Html.h_ 1 (Html.link_ "index.html" (Html.txt_ "Blog"))\n        <> Html.h_ 2 (Html.txt_ "Posts")\n        <> mconcat previews\n      )\n'))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Env"),"\ub97c \uc704\ud55c \uba85\ub839\uc904 \ud30c\uc11c\ub97c \ub9cc\ub4e4\uc5b4, ",(0,l.kt)("inlineCode",{parentName:"p"},"convert-dir"),"\uba85\ub839\uc5b4\uc5d0 \uc5f0\uacb0\ud558\uc138\uc694.\n\uadf8\ub9ac\uace0 \uacb0\uacfc\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"convertDirectory")," \ud568\uc218\uc5d0 \uc804\ub2ec\ud558\uc138\uc694."))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"\uc815\ub2f5"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"src/HsBlog.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"import HsBlog.Env (defaultEnv)\n\nconvertSingle :: String -> Handle -> Handle -> IO ()\n\nprocess :: String -> String -> String\nprocess title = Html.render . convert defaultEnv title . Markup.parse\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"app/OptParse.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},'import HsBlog.Env\n\n------------------------------------------------\n-- * Our command-line options model\n\n-- | Model\ndata Options\n = ConvertSingle SingleInput SingleOutput\n | ConvertDir FilePath FilePath Env\n deriving Show\n\n------------------------------------------------\n-- * Directory conversion parser\n\npConvertDir :: Parser Options\npConvertDir =\n ConvertDir <$> pInputDir <*> pOutputDir <*> pEnv\n\n-- | Parser for blog environment\npEnv :: Parser Env\npEnv =\n Env <$> pBlogName <*> pStylesheet\n\n-- | Blog name parser\npBlogName :: Parser String\npBlogName =\n strOption\n   ( long "name"\n     <> short \'N\'\n     <> metavar "STRING"\n     <> help "Blog name"\n     <> value (eBlogName defaultEnv)\n     <> showDefault\n   )\n\n-- | Stylesheet parser\npStylesheet :: Parser String\npStylesheet =\n strOption\n   ( long "style"\n     <> short \'S\'\n     <> metavar "FILE"\n     <> help "Stylesheet filename"\n     <> value (eStylesheetPath defaultEnv)\n     <> showDefault\n   )\n\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"app/Main.hs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-haskell"},"main :: IO ()\nmain = do\n options <- parse\n case options of\n   ConvertDir input output env ->\n     HsBlog.convertDirectory env input output\n\n   ...\n")))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"\uc694\uc57d"},"\uc694\uc57d"),(0,l.kt)("p",null,"\uc9c1\uc811 \uc778\uc790\ub97c \uc804\ub2ec\ud558\ub294 \ubc29\ubc95\uacfc ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95 \uc911 \uc5b4\ub5a4\uac83\uc744 \uc120\ud638\ud558\uc2dc\ub098\uc694?"),(0,l.kt)("p",null,"\uc800\ub294 \uc0c1\ud669\uc5d0 \ub530\ub77c ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ub450 \ubc88\uc9f8 \ubc29\uc2dd\uc774 \uc9c1\uc811 \uc778\uc790 \uc804\ub2ec\ud558\ub294 \uccab \ubc88\uc9f8 \ubc29\uc2dd\ubcf4\ub2e4 \ub354 \uc88b\ub2e4\uace0 \ub9d0\ud560 \uc218\ub294 \uc5c6\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"ReaderT"),"\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774\ub7ec\ud55c \uac1c\ub150\uacfc \uae30\uc220\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc5d0\uac8c\ub294 \ubd88\uce5c\uc808\ud55c \ucf54\ub4dc\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \uc0c1\ud669\uc5d0\uc11c\ub294 \ud070 \uc774\uc810\uc744 \uc5bb\uc9c0 \ubabb\ud560 \uac83\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud504\ub85c\uadf8\ub7a8\uc774 \ucee4\uc9c8\uc218\ub85d ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc774 \ub354 \uc720\uc6a9\ud574\uc9d1\ub2c8\ub2e4.\n\uc6b0\ub9ac\uc758 \ube44\uad50\uc801 \uc791\uc740 \uc608\uc81c\uc5d0\uc11c\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc801\ud569\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc ",(0,l.kt)("inlineCode",{parentName:"p"},"Reader"),"\ub294 \uc775\ud600\uc57c \ud560 \uc911\uc694\ud55c \uae30\uc220\uc774\ub77c\uace0 \uc0dd\uac01\ud558\uae30\uc5d0 \uc774 \ucc45\uc5d0 \ud3ec\ud568\ud588\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uace0\uae09 \uae30\uc220\uc744 \uc0ac\uc6a9\ud588\uc744 \ub54c\uc758 \uc774\uc810\uacfc \ube44\uc6a9\uc744 \uace0\ub824\ud558\ub294 \uac83\uc740 \uc911\uc694\ud569\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 \ub54c\ub85c\ub294 \ud560 \uc218 \uc788\ub2e4\uba74, \ub354 \uac04\ub2e8\ud55c \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Git \ucee4\ubc0b\uc744 \ud1b5\ud574\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/commit/f9fe7179fcf0e6c818f6caa860b52e991432dab2"},"\uc774\ubc88\uc5d0 \uc218\uc815\ud55c \ub0b4\uc5ed"),"\n\uacfc ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/soupi/learn-haskell-blog-generator/tree/f9fe7179fcf0e6c818f6caa860b52e991432dab2"},"\ud604\uc7ac\uae4c\uc9c0 \ucf54\ub4dc")," \ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")))}s.isMDXComponent=!0}}]);