"use strict";(self.webpackChunklearn_haskell_blog_generator=self.webpackChunklearn_haskell_blog_generator||[]).push([[891],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?r.createElement(k,a(a({ref:t},u),{},{components:n})):r.createElement(k,a({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4866:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const l={},a="\ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubd05\uc2dc\ub2e4!",o={unversionedId:"errors_and_files/implementation",id:"errors_and_files/implementation",title:"\ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubd05\uc2dc\ub2e4!",description:"\uc9c0\uae08\uae4c\uc9c0 \ub9ce\uc740 \uc124\uba85\uc744 \ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c\ub294 \ubc30\uc6b4\uac83\uc744 \ud65c\uc6a9\ud574\ubd05\uc2dc\ub2e4. \ub2e4\uc74c \uc791\uc5c5\uc744 \ud560 \uac83\uc785\ub2c8\ub2e4.",source:"@site/docs/06-errors_and_files/04-implementation.md",sourceDirName:"06-errors_and_files",slug:"/errors_and_files/implementation",permalink:"/learn-haskell-blog-generator/errors_and_files/implementation",draft:!1,editUrl:"https://github.com/jbl428/learn-haskell-blog-generator/tree/book/docs/06-errors_and_files/04-implementation.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\uc608\uc678",permalink:"/learn-haskell-blog-generator/errors_and_files/exceptions"},next:{title:"\uc694\uc57d",permalink:"/learn-haskell-blog-generator/errors_and_files/summary"}},p={},s=[{value:"\uc0c8\ub85c\uc6b4 \ubaa8\ub4c8",id:"\uc0c8\ub85c\uc6b4-\ubaa8\ub4c8",level:2},{value:"\ub514\ub809\ud130\ub9ac \ubcc0\ud658\ud558\uae30",id:"\ub514\ub809\ud130\ub9ac-\ubcc0\ud658\ud558\uae30",level:2},{value:"<code>getDirFilesAndContent</code>",id:"getdirfilesandcontent",level:3},{value:"<code>applyIoOnList</code>",id:"applyioonlist",level:4},{value:"<code>filterAndReportFailures</code>",id:"filterandreportfailures",level:4},{value:"<code>createOutputDirectoryOrExit</code>",id:"createoutputdirectoryorexit",level:3},{value:"<code>txtsToRenderedHtml</code>",id:"txtstorenderedhtml",level:3},{value:"<code>copyFiles</code> \uacfc <code>writeFiles</code>",id:"copyfiles-\uacfc-writefiles",level:3},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2}],u={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\ucf54\ub4dc\ub97c-\uc791\uc131\ud574\ubd05\uc2dc\ub2e4"},"\ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubd05\uc2dc\ub2e4!"),(0,i.kt)("p",null,"\uc9c0\uae08\uae4c\uc9c0 \ub9ce\uc740 \uc124\uba85\uc744 \ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c\ub294 \ubc30\uc6b4\uac83\uc744 \ud65c\uc6a9\ud574\ubd05\uc2dc\ub2e4. \ub2e4\uc74c \uc791\uc5c5\uc744 \ud560 \uac83\uc785\ub2c8\ub2e4."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ucd9c\ub825 \ub514\ub809\ud1a0\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ub514\ub809\ud1a0\ub9ac\uc758 \ubaa8\ub4e0 \ud30c\uc77c \uc774\ub984\uc744 \uac00\uc838\uc635\ub2c8\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ud655\uc7a5\uc790\uc5d0 \ub530\ub77c \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4."),(0,i.kt)("li",{parentName:"ul"},".txt \ud30c\uc77c\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ub2e4\ub978 \ud30c\uc77c\uc740 \uc218\uc815\ud558\uc9c0 \uc54a\uace0 \ubcf5\uc0ac\ud569\ub2c8\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\uac01 \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \uad6c\ubb38 \ubd84\uc11d\ud558\uace0 \uacb0\uacfc\uc758 \uc0c9\uc778\uc744 \uc791\uc131\ud558\uace0, \ud30c\uc77c\uc744 HTML\ub85c \ubcc0\ud658\ud558\uace0, \ubaa8\ub4e0 \uac83\uc744 \ub300\uc0c1 \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc0dd\uc131\ud569\ub2c8\ub2e4.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"\ucd5c\uc885 \ud615\ud0dc\ub85c \uc81c\uc2dc\ub41c \ucf54\ub4dc\ub294 \ud55c \ubc88\uc5d0 \uc791\uc131\ud55c\uac8c \uc544\ub2d9\ub2c8\ub2e4.\n\ucf54\ub4dc \uc791\uc131, \ub9ac\ud329\ud130\ub9c1, \ud568\uc218 \ubd84\ud560, \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98 \ubcc0\uacbd \ub4f1\uc758 \ubc18\ubcf5 \uacfc\uc815\uc774\uc5c8\uc2b5\ub2c8\ub2e4.\n\ucf54\ub529 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \ub54c\ub294 \uc791\uace0 \uac04\ub2e8\ud55c \uac83\ubd80\ud130 \uc2dc\uc791\ud558\uace0, \uc791\ub3d9\ud558\uac8c \ub9cc\ub4e4\uace0, \ucf54\ub4dc\uac00 \ub354 \uba85\ud655\ud558\uace0 \ubaa8\ub4c8\ud654\ub418\ub3c4\ub85d \ub9ac\ud329\ud130\ub9c1\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\n\ud558\uc2a4\ucf08\uc5d0\uc11c\ub294 \uc6b0\ub9ac\uac00 \ucf54\ub4dc\ub97c \ub9ac\ud329\ud130\ub9c1\ud558\uace0 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac1c\uc120\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc5d0 \uc790\ubd80\uc2ec\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc0c8\ub85c\uc6b4 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uc791\uc131\ud560 \ub54c\ub3c4 \uadf8 \uc6d0\uce59\uc774 \uc720\uc9c0\ub429\ub2c8\ub2e4!")),(0,i.kt)("h2",{id:"\uc0c8\ub85c\uc6b4-\ubaa8\ub4c8"},"\uc0c8\ub85c\uc6b4 \ubaa8\ub4c8"),(0,i.kt)("p",null,"\uba3c\uc800 ",(0,i.kt)("inlineCode",{parentName:"p"},"HsBlog.Directory"),"\ub77c\ub294 \uc0c8\ub85c\uc6b4 \ubaa8\ub4c8\uc744 \ub9cc\ub4e4\uaca0\uc2b5\ub2c8\ub2e4.\n\uc774 \ubaa8\ub4c8\uc740 \ub514\ub809\ud130\ub9ac\uc640 \uc5ec\ub7ec \ud30c\uc77c\uc744 \ucc98\ub9ac\ud560 \uac83\uc785\ub2c8\ub2e4.\n\uc774 \ubaa8\ub4c8\uc5d0\uc11c\ub294 \uc774\uc804\uc5d0 \uc815\uc758\ud55c ",(0,i.kt)("inlineCode",{parentName:"p"},"convertDirectory"),"\uc640 ",(0,i.kt)("inlineCode",{parentName:"p"},"buildIndex")," \ud568\uc218\ub97c \ub0b4\ubcf4\ub0bc \uac83\uc785\ub2c8\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | \uc5ec\ub7ec \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\uace0 \ub514\ub809\ud1a0\ub9ac\ub97c \ubcc0\ud658\ud569\ub2c8\ub2e4\n\nmodule HsBlog.Directory\n  ( convertDirectory\n  , buildIndex\n  )\n  where\n")),(0,i.kt)("p",null,"\uc774 \ubaa8\ub4c8\uc5d0\uc11c\ub294 \ub514\ub809\ud130\ub9ac, \ud30c\uc77c \ubc0f \ud30c\uc77c \uacbd\ub85c\ub97c \uc870\uc791\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560\n",(0,i.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/directory-1.3.7.0/docs/System-Directory.html"},"directory"),"\n\uc640 ",(0,i.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/filepath-1.4.2.1/docs/System-FilePath.html"},"filepath"),"\n\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\uc6b0\ub9ac\uac00 \ubc30\uc6b4 \uc0c8\ub85c\uc6b4 \ucd94\uc0c1\ud654\uc778 ",(0,i.kt)("inlineCode",{parentName:"p"},"Traversable"),"\uc640 ",(0,i.kt)("inlineCode",{parentName:"p"},"Monad"),", \uadf8\ub9ac\uace0 \uc774\uc804\uc5d0 \ubc30\uc6b4 \uac1c\ub150\uacfc \ud0c0\uc785\uc778 ",(0,i.kt)("inlineCode",{parentName:"p"},"Either"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"IO")," \ubc0f \uc608\uc678\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4."),(0,i.kt)("p",null,"\uc774\ub97c \uc704\ud574, \uaf64 \ub9ce\uc740 \ubaa8\ub4c8\uc774 \ud544\uc694\ud569\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"import qualified HsBlog.Markup as Markup\nimport qualified HsBlog.Html as Html\nimport HsBlog.Convert (convert, convertStructure)\n\nimport Data.List (partition)\nimport Data.Traversable (for)\nimport Control.Monad (void, when)\n\nimport System.IO (hPutStrLn, stderr)\nimport Control.Exception (catch, displayException, SomeException(..))\nimport System.Exit (exitFailure)\nimport System.FilePath\n  ( takeExtension\n  , takeBaseName\n  , (<.>)\n  , (</>)\n  , takeFileName\n  )\nimport System.Directory\n  ( createDirectory\n  , removeDirectoryRecursive\n  , listDirectory\n  , doesDirectoryExist\n  , copyFile\n  )\n")),(0,i.kt)("p",null,"\uc774\ubc88\uc5d0 \uc0ac\uc6a9\ud560 \uac01 \ud568\uc218\ub4e4\uc774 \uc5b4\ub5a4 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\ub2e4\uba74 ",(0,i.kt)("a",{parentName:"p",href:"https://hoogle.haskell.org/"},"Hoogle"),"\uc744 \ucc38\uace0\ud558\uc138\uc694.\n\ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\uc640 \ubb38\uc11c\ub97c \uc77d\uace0 ",(0,i.kt)("inlineCode",{parentName:"p"},"ghci"),"\uc5d0\uc11c \uc2e4\ud5d8\ud574\ubcf4\uc138\uc694."),(0,i.kt)("h2",{id:"\ub514\ub809\ud130\ub9ac-\ubcc0\ud658\ud558\uae30"},"\ub514\ub809\ud130\ub9ac \ubcc0\ud658\ud558\uae30"),(0,i.kt)("p",null,"\uba3c\uc800 \ub2e4\ub978 \uc791\uc740 \ud568\uc218\ub4e4\uc744 \ucea1\uc220\ud654\ud55c \uace0\ucc28 \ud568\uc218\uc778 ",(0,i.kt)("inlineCode",{parentName:"p"},"convertDirectory"),"\uc758 \uc124\uba85\uc73c\ub85c \uc2dc\uc791\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n",(0,i.kt)("inlineCode",{parentName:"p"},"convertDirectory"),"\ub294 \uaf64 \uba85\ub839\ud615\uc801\uc778 \ubaa8\uc2b5\uc744 \ud558\uace0 \uc788\uc73c\uba70, \uc6b0\ub9ac\uac00 \ud574\uc57c\ud560 \uc791\uc5c5\uc744 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uc124\uba85\ud558\ub294 \uac83\ucc98\ub7fc \ubcf4\uc785\ub2c8\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | \ud2b9\uc815 \ub514\ub809\ud130\ub9ac\uc758 \ud30c\uc77c\uc744 \ub2e4\ub978 \ub514\ub809\ud130\ub9ac\ub85c \ubcf5\uc0ac\ud558\uace0, '.txt' \ud30c\uc77c\uc744 '.html' \ud30c\uc77c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n-- \uc77d\uae30\ub098 \uc4f0\uae30\uc5d0 \uc2e4\ud328\ud55c \uacbd\uc6b0 stderr\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4.\n--\n-- \ucd9c\ub825 \ub514\ub809\ud130\ub9ac \uc0dd\uc131\uc911\uc5d0 \uc608\uc678\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nconvertDirectory :: FilePath -> FilePath -> IO ()\nconvertDirectory inputDir outputDir = do\n  DirContents filesToProcess filesToCopy <- getDirFilesAndContent inputDir\n  createOutputDirectoryOrExit outputDir\n  let\n    outputHtmls = txtsToRenderedHtml filesToProcess\n  copyFiles outputDir filesToCopy\n  writeFiles outputDir outputHtmls\n  putStrLn \"Done.\"\n")),(0,i.kt)("p",null,"\uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 \uac01 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO")," \ud568\uc218\uac00 \uc5d0\ub7ec\ub97c \uc801\uc808\ud558\uac8c \ucc98\ub9ac\ud558\uace0, \ud544\uc694\ud560 \ub54c \ud504\ub85c\uc81d\ud2b8\ub97c \uc885\ub8cc\ud55c\ub2e4\uace0 \uac00\uc815\ud588\uc2b5\ub2c8\ub2e4."),(0,i.kt)("p",null,"\uc774\uc81c \ub2e8\uacc4\ubcc4\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,i.kt)("h3",{id:"getdirfilesandcontent"},(0,i.kt)("inlineCode",{parentName:"h3"},"getDirFilesAndContent")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ud544\uc694\ud55c \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\ndata DirContents\n  = DirContents\n    { dcFilesToProcess :: [(FilePath, String)]\n      -- ^ \ud30c\uc77c \uacbd\ub85c\uc640 \uadf8 \ub0b4\uc6a9\n    , dcFilesToCopy :: [FilePath]\n      -- ^ Other file paths, to be copied directly\n      -- ^ \ub2e4\ub978 \ud30c\uc77c \uacbd\ub85c, \uc9c1\uc811 \ubcf5\uc0ac\ub420 \uac83\n    }\n\n-- | \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4\ngetDirFilesAndContent :: FilePath -> IO DirContents\n\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"getDirFilesAndContent"),"\ub294 \ucc98\ub9ac\ub97c \uc704\ud55c \uc5f0\uad00\ub3c4\ub2c8 \ud30c\uc77c\ub4e4\uc744 \uc81c\uacf5\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. --\n\ub9c8\ud06c\uc5c5\uc73c\ub85c \ubcc0\ud658\ud574\uc57c \ud560 \ud30c\uc77c(\uadf8\ub9ac\uace0 \uadf8\ub4e4\uc758 \ud14d\uc2a4\ud2b8 \ub0b4\uc6a9)\uacfc \uc774\ubbf8\uc9c0\ub098 \uc2a4\ud0c0\uc77c\uc2dc\ud2b8\uc640 \uac19\uc774 \uadf8\ub300\ub85c \ubcf5\uc0ac\ud560 \ub2e4\ub978 \ud30c\uc77c\ub4e4\uc785\ub2c8\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4\ngetDirFilesAndContent :: FilePath -> IO DirContents\ngetDirFilesAndContent inputDir = do\n  files <- map (inputDir </>) <$> listDirectory inputDir\n  let\n    (txtFiles, otherFiles) =\n      partition ((== ".txt") . takeExtension) files\n  txtFilesAndContent <-\n    applyIoOnList readFile txtFiles >>= filterAndReportFailures\n  pure $ DirContents\n    { dcFilesToProcess = txtFilesAndContent\n    , dcFilesToCopy = otherFiles\n    }\n')),(0,i.kt)("p",null,"\uc774 \ud568\uc218\ub294 \ub124 \uac00\uc9c0 \uc911\uc694\ud55c \uc77c\uc744 \ud569\ub2c8\ub2e4:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\ub514\ub809\ud130\ub9ac \ub0b4\uc758 \ubaa8\ub4e0 \ud30c\uc77c\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4"),(0,i.kt)("li",{parentName:"ol"},"\ud30c\uc77c\ub4e4\uc744 \ud655\uc7a5\uc790\uc5d0 \ub530\ub77c \ub450 \uadf8\ub8f9\uc73c\ub85c \ub098\ub215\ub2c8\ub2e4"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".txt")," \ud30c\uc77c\uc758 \ub0b4\uc6a9\uc744 \uc77d\uace0, \ud30c\uc77c\uc744 \uc77d\ub294 \ub370 \uc2e4\ud328\ud55c \uacbd\uc6b0 \ubcf4\uace0\ud569\ub2c8\ub2e4"),(0,i.kt)("li",{parentName:"ol"},"\uacb0\uacfc\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uacb0\uacfc\ub97c \ub354 \uba85\ud655\ud558\uac8c \ud558\uae30 \uc704\ud574 \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uc815\uc758\ud588\uc2b5\ub2c8\ub2e4.")),(0,i.kt)("p",null,"(3)\ubc88\uc740 \ub098\uba38\uc9c0\ubcf4\ub2e4 \uc870\uae08 \ub354 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \uc774\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,i.kt)("h4",{id:"applyioonlist"},(0,i.kt)("inlineCode",{parentName:"h4"},"applyIoOnList")),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"applyIoOnList"),"\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \uac00\uc9d1\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"applyIoOnList :: (a -> IO b) -> [a] -> IO [(a, Either String b)]\n")),(0,i.kt)("p",null,"\uc774 \ud568\uc218\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO")," \ud568\uc218\ub97c \ud2b9\uc815 \uac12\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 \uc801\uc6a9\ud558\uace0, \uc131\uacf5\uacfc \uc2e4\ud328\ub97c \uae30\ub85d\ud569\ub2c8\ub2e4."),(0,i.kt)("p",null,"\ud55c \ubc88 \uad6c\ud604\ud574\ubcf4\uc138\uc694! \uc5b4\ub5a4 \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud560\uc9c0 \ud78c\ud2b8\uac00 \ud544\uc694\ud558\ub2e4\uba74, \uc774\uc804\uc5d0 \uc791\uc131\ud55c \uac00\uc838\uc624\uae30 \ubaa9\ub85d\uc744 \ucc38\uace0\ud558\uc138\uc694."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\uc815\ub2f5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | IO \ud568\uc218\ub97c \uac12\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 \uc801\uc6a9\ud558\uace0, \uc131\uacf5\uacfc \uc2e4\ud328\ub97c \uae30\ub85d\ud569\ub2c8\ub2e4\napplyIoOnList :: (a -> IO b) -> [a] -> IO [(a, Either String b)]\napplyIoOnList action inputs = do\n  for inputs $ \\input -> do\n    maybeResult <-\n      catch\n        (Right <$> action input)\n        ( \\(SomeException e) -> do\n          pure $ Left (displayException e)\n        )\n    pure (input, maybeResult)\n"))),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"applyIoOnList"),"\ub294 \ud2b9\uc815 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO")," \ud568\uc218\ub97c(\uc774\ubc88 \uacbd\uc6b0 ",(0,i.kt)("inlineCode",{parentName:"p"},"readFile"),") \ud2b9\uc815 \uac12\ub4e4\uc758 \ub9ac\uc2a4\ud2b8(\uc774\ubc88 \uacbd\uc6b0 ",(0,i.kt)("inlineCode",{parentName:"p"},"FilePath"),")\uc5d0 \uc801\uc6a9\ud558\ub294 \uace0\ucc28 \ud568\uc218\uc785\ub2c8\ub2e4.\n\uac01 \uc694\uc18c\uc5d0 \ub300\ud574, \uc694\uc18c \uadf8 \uc790\uccb4\uc640 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO")," \ud568\uc218\ub97c \uc801\uc6a9\ud55c \uacb0\uacfc\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"Either"),"\ub85c \ubcc0\ud658\ud55c \uac12\uc744 \ud568\uaed8 \ubc18\ud658\ud569\ub2c8\ub2e4.\n\uc5ec\uae30\uc11c ",(0,i.kt)("inlineCode",{parentName:"p"},"Left")," \ud0c0\uc785\uc740 ",(0,i.kt)("inlineCode",{parentName:"p"},"String"),"\uc73c\ub85c, \uc5d0\ub7ec\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4."),(0,i.kt)("p",null,"\uc774 \ud568\uc218\uc758 \ud0c0\uc785 \ub9cc\uc73c\ub85c\ub3c4 \ud568\uc218\uac00 \uc5b4\ub5a4 \uc77c\uc744 \ud560\uc9c0\uc5d0 \ub300\ud574 \ub9ce\uc740 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud0c0\uc785\uc774 \ub2e4\ud615\uc801\uc774\uae30 \ub54c\ubb38\uc5d0, ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"\uc5d0 \ub300\ud574 \ud560 \uc218 \uc788\ub294 \uc77c\uc740 \ud568\uc218\uc5d0 \uc801\uc6a9\ud558\ub294 \uac83 \ubfd0\uc774\uace0, ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uacf3\uc740 \ud568\uc218\uc758 \uacb0\uacfc\ubfd0\uc785\ub2c8\ub2e4."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"\uc774 \ud568\uc218\ub97c \ucc98\uc74c \uc791\uc131\ud560 \ub54c\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"readFile"),"\uc5d0\ub9cc \ud2b9\ud654\ub418\uc5b4 \uc788\uc5c8\uace0, ",(0,i.kt)("inlineCode",{parentName:"p"},"[FilePath]"),"\ub97c \ubc1b\uc544 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO [(FilePath, Either String String)]"),"\ub97c \ubc18\ud658\ud588\uc2b5\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \ucd94\ud6c4\uc5d0 \ub2e4\ub978 \uc0ac\uc6a9 \uc0ac\ub840\ub97c \ub9cc\ub098\uac8c \ub418\uc5c8\uace0(",(0,i.kt)("inlineCode",{parentName:"p"},"writeFiles"),"\uc640 ",(0,i.kt)("inlineCode",{parentName:"p"},"copyFiles"),"), ",(0,i.kt)("inlineCode",{parentName:"p"},"action"),", \uc785\ub825 \ud0c0\uc785, \ubc18\ud658 \ud0c0\uc785\uc744 \ubd84\ub9ac\ud588\uc2b5\ub2c8\ub2e4.")),(0,i.kt)("p",null,"\uc774 \ud568\uc218\ub294 \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc608\uc678\ub97c \uc0ac\uc6a9\ud558\uace0, ",(0,i.kt)("inlineCode",{parentName:"p"},"Either"),"\ub97c \uc0ac\uc6a9\ud574 \uc131\uacf5\uacfc \uc2e4\ud328\ub97c \ubaa8\ub450 \ud0c0\uc785 \uc2dc\uc2a4\ud15c\uc5d0 \ud45c\ud604\ud569\ub2c8\ub2e4.\n\uc774\ub97c \ud1b5\ud574 \uc608\uc678 \ucc98\ub9ac\ub97c \ud568\uc218 \ud638\ucd9c\uc790\uc5d0\uac8c \ubbf8\ub8f8\uacfc \ub3d9\uc2dc\uc5d0 \ud638\ucd9c\uc790\uac00 \uc608\uc678 \ucc98\ub9ac\ub97c \uc78a\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4!"),(0,i.kt)("p",null,"\ub2e4\uc74c\uc5d0\ub294, \uc5d0\ub7ec\ub97c \ubcf4\uace0\ud558\uace0 \uc2e4\ud328\ud558\ub294 \ubaa8\ub4e0 \uacbd\uc6b0\ub97c \ud544\ud130\ub9c1\ud558\ub294 \ud568\uc218\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,i.kt)("h4",{id:"filterandreportfailures"},(0,i.kt)("inlineCode",{parentName:"h4"},"filterAndReportFailures")),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"filterAndReportFailures"),"\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \uac00\uc9d1\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"filterAndReportFailures :: [(a, Either String b)] -> IO [(a, b)]\n")),(0,i.kt)("p",null,"\ud30c\uc77c\uc5d0 \ub300\ud55c \uc791\uc5c5\uc758 \uc2e4\ud328\ub97c \ud544\ud130\ub9c1\ud558\uace0, stderr\uc5d0 \uc5d0\ub7ec\ub97c \ubcf4\uace0\ud569\ub2c8\ub2e4."),(0,i.kt)("p",null,"\ud55c \ubc88 \uad6c\ud604\ud574\ubcf4\uc138\uc694!"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\uc815\ub2f5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | \ud30c\uc77c\uc5d0 \ub300\ud55c \uc791\uc5c5\uc758 \uc2e4\ud328\ub97c \ud544\ud130\ub9c1\ud558\uace0, stderr\uc5d0 \uc5d0\ub7ec\ub97c \ubcf4\uace0\ud569\ub2c8\ub2e4.\nfilterAndReportFailures :: [(a, Either String b)] -> IO [(a, b)]\nfilterAndReportFailures =\n  foldMap $ \\(file, contentOrErr) ->\n    case contentOrErr of\n      Left err -> do\n        hPutStrLn stderr err\n        pure []\n      Right content ->\n        pure [(file, content)]\n")),(0,i.kt)("p",null,"\uc774 \ucf54\ub4dc\ub294 \uc870\uae08 \ub180\ub77c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4 - \uc5b4\ub5bb\uac8c ",(0,i.kt)("inlineCode",{parentName:"p"},"foldMap"),"\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n\uae30\uc5b5\uc744 \ub5a0\uc62c\ub824\ubcf4\uba74, ",(0,i.kt)("inlineCode",{parentName:"p"},"foldMap"),"\uc758 \ud0c0\uc785\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"foldMap :: (Foldable t, Monoid m) => (a -> m) -> t a -> m\n")),(0,i.kt)("p",null,"\uc774 \ud568\uc218\uc758 \uc77c\ubc18\uc801\uc778 \ud0c0\uc785\uc744 \uc774\ubc88 \uc608\uc81c\uc5d0\uc11c \uc0ac\uc6a9\ud55c \ud0c0\uc785\uc73c\ub85c \uce58\ud658\ud574\uc11c \uc0dd\uac01\ud574\ubcf4\uba74 ",(0,i.kt)("inlineCode",{parentName:"p"},"IO [(a, b)]"),"\ub294 monoid\ub77c\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. - ",(0,i.kt)("inlineCode",{parentName:"p"},"[a]"),"\ub294 \uc784\uc758\uc758 ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"\uc5d0 \ub300\ud574 ",(0,i.kt)("inlineCode",{parentName:"p"},"[]"),"(\ube48 \ub9ac\uc2a4\ud2b8)\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"mempty"),"\ub85c, ",(0,i.kt)("inlineCode",{parentName:"p"},"++"),"\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"<>"),"\ub85c \uc0ac\uc6a9\ud558\ub294 monoid\uc774\uba70,\n",(0,i.kt)("inlineCode",{parentName:"p"},"IO a"),"\ub294 \uc784\uc758\uc758 ",(0,i.kt)("inlineCode",{parentName:"p"},"a"),"\uac00 monoid\uc77c \ub54c ",(0,i.kt)("inlineCode",{parentName:"p"},"pure mempty"),"\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"mempty"),"\ub85c, ",(0,i.kt)("inlineCode",{parentName:"p"},"liftA2 (<>)"),"\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"<>"),"\ub85c \uc0ac\uc6a9\ud558\ub294 monoid\uc785\ub2c8\ub2e4!"),(0,i.kt)("p",null,"\ub9cc\uc57d \ub2f9\uc2e0\uc774 \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uac19\uc740 \ub3d9\uc791\uc744 \ud558\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud588\ub2e4\uba74, \uadf8\uac83\ub3c4 \uad1c\ucc2e\uc2b5\ub2c8\ub2e4!\n\ub54c\ub54c\ub85c \ucd94\uc0c1\ud654\ub97c \uc0ac\uc6a9\ud574 \ub354 \uac04\uacb0\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\ub9cc \uae30\uc5b5\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\uc774\ub7ec\ud55c \ud568\uc218\ub4e4\uc740 \uc720\ud6a8\ud55c \uc815\ubcf4\ub97c \uac00\uc838\uc624\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\n\ub2e4\uc74c\uc73c\ub85c, \uc0c8 \ub514\ub809\ud1a0\ub9ac\ub97c \ub9cc\ub4dc\ub294 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,i.kt)("h3",{id:"createoutputdirectoryorexit"},(0,i.kt)("inlineCode",{parentName:"h3"},"createOutputDirectoryOrExit")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud558\uace0 \uc2e4\ud328\ud558\uba74 \ud504\ub85c\uadf8\ub7a8\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4.\ncreateOutputDirectoryOrExit :: FilePath -> IO ()\ncreateOutputDirectoryOrExit outputDir =\n  whenIO\n    (not <$> createOutputDirectory outputDir)\n    (hPutStrLn stderr "Cancelled." *> exitFailure)\n\n-- | \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n--   \ub514\ub809\ud130\ub9ac\uac00 \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\ncreateOutputDirectory :: FilePath -> IO Bool\ncreateOutputDirectory dir = do\n  dirExists <- doesDirectoryExist dir\n  create <-\n    if dirExists\n      then do\n        override <- confirm "Output directory exists. Override?"\n        when override (removeDirectoryRecursive dir)\n        pure override\n      else\n        pure True\n  when create (createDirectory dir)\n  pure create\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createOutputDirectoryOrExit"),"\ub294 \uc774\ub984 \uadf8\ub300\ub85c\uc758 \uc77c\uc744 \ud569\ub2c8\ub2e4 - \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud558\uace0, \uc2e4\ud328\ud558\uba74 \ud504\ub85c\uadf8\ub7a8\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"createOutputDirectory"),"\ub294 \uc0ac\uc2e4 \uaf64 \ub9ce\uc740 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ud568\uc218\uc785\ub2c8\ub2e4.\n\ub514\ub809\ud130\ub9ac\uac00 \uc774\ubbf8 \uc874\uc7ac\ud558\ub294\uc9c0 \ud655\uc778\ud558\uace0, \uc0ac\uc6a9\uc790\uac00 \ub36e\uc5b4\uc4f0\uae30\ub97c \uc6d0\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\n\ub9cc\uc57d \ub36e\uc5b4\uc4f0\uae30\ub97c \uc6d0\ud55c\ub2e4\uba74, \ub514\ub809\ud130\ub9ac\ub97c \uc0ad\uc81c\ud558\uace0 \uc0c8 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n\ub9cc\uc57d \ub36e\uc5b4\uc4f0\uae30\ub97c \uc6d0\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74, \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\uc790\uc758 \uacb0\uc815\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,i.kt)("h3",{id:"txtstorenderedhtml"},(0,i.kt)("inlineCode",{parentName:"h3"},"txtsToRenderedHtml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"let\n  outputHtmls = txtsToRenderedHtml filesToProcess\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\uc774 \ucf54\ub4dc\uc5d0\uc11c\ub294 \ud30c\uc77c\uc744 \ub9c8\ud06c\uc5c5\uc73c\ub85c \ubcc0\ud658\ud558\uace0, \uc785\ub825 \ud30c\uc77c \uacbd\ub85c\ub97c \ud574\ub2f9 \ucd9c\ub825 \ud30c\uc77c \uacbd\ub85c\ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4(",(0,i.kt)("inlineCode",{parentName:"p"},".txt")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},".html"),").\n\uadf8\ub9ac\uace0 \uc778\ub371\uc2a4 \ud398\uc774\uc9c0\ub97c \ube4c\ub4dc\ud558\uace0, \ubaa8\ub4e0 \uac83\uc744 HTML\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4."),(0,i.kt)("p",null,"\ub2e4\uc74c \ud0c0\uc785 \uc2dc\uadf8\ub2c8\ucc98\ub97c \uac00\uc9c0\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"txtsToRenderedHtml")," \ud568\uc218\ub97c \uad6c\ud604\ud574\ubcf4\uc138\uc694:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"txtsToRenderedHtml :: [(FilePath, String)] -> [(FilePath, String)]\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\ud78c\ud2b8"),(0,i.kt)("p",null,"\ub2e4\uc74c \uc138 \uac00\uc9c0 \ud568\uc218\ub97c \uc815\uc758\ud574\uc11c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"txtsToRenderedHtml :: [(FilePath, String)] -> [(FilePath, String)]\n\ntoOutputMarkupFile :: (FilePath, String) -> (FilePath, Markup.Document)\n\nconvertFile :: (FilePath, Markup.Document) -> (FilePath, Html.Html)\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\uc815\ub2f5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub9c8\ud06c\uc5c5\uc73c\ub85c \ubcc0\ud658\ud558\uace0, \uc778\ub371\uc2a4\ub97c \ube4c\ub4dc\ud558\uace0, html\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.\ntxtsToRenderedHtml :: [(FilePath, String)] -> [(FilePath, String)]\ntxtsToRenderedHtml txtFiles =\n  let\n    txtOutputFiles = map toOutputMarkupFile txtFiles\n    index = ("index.html", buildIndex txtOutputFiles)\n  in\n    map (fmap Html.render) (index : map convertFile txtOutputFiles)\n\ntoOutputMarkupFile :: (FilePath, String) -> (FilePath, Markup.Document)\ntoOutputMarkupFile (file, content) =\n  (takeBaseName file <.> "html", Markup.parse content)\n\nconvertFile :: (FilePath, Markup.Document) -> (FilePath, Html.Html)\nconvertFile (file, doc) = (file, convert file doc)\n')),(0,i.kt)("p",null,"\uc774 \ucf54\ub4dc\uc5d0\uc11c \ud765\ubbf8\ub85c\uc6b8 \uc810\uc740 ",(0,i.kt)("inlineCode",{parentName:"p"},"map (fmap Html.render)")," \ubd80\ubd84\uc785\ub2c8\ub2e4.\n\ud29c\ud50c\uc5d0 ",(0,i.kt)("inlineCode",{parentName:"p"},"fmap"),"\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc774\uc720\ub294, ",(0,i.kt)("inlineCode",{parentName:"p"},"Either"),"\ucc98\ub7fc \ub450 \ubc88\uc9f8 \uc778\uc790\uc5d0 \ub300\ud574 ",(0,i.kt)("inlineCode",{parentName:"p"},"Functor"),"\uc774\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"copyfiles-\uacfc-writefiles"},(0,i.kt)("inlineCode",{parentName:"h3"},"copyFiles")," \uacfc ",(0,i.kt)("inlineCode",{parentName:"h3"},"writeFiles")),(0,i.kt)("p",null,"\uc774\uc81c \ub0a8\uc740 \uc791\uc5c5\uc740 \ucc98\ub9ac\uac00 \uc644\ub8cc\ub41c \ud6c4 \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\uc744 \uc0c8\ub85c \uc0dd\uc131\ub41c \ub514\ub809\ud130\ub9ac\uc5d0 \uc791\uc131\ud558\ub294 \uac83\uc785\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | \ub514\ub809\ud130\ub9ac\uc5d0 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud558\uace0, \uc624\ub958\ub97c stderr\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4.\ncopyFiles :: FilePath -> [FilePath] -> IO ()\ncopyFiles outputDir files = do\n  let\n    copyFromTo file = copyFile file (outputDir </> takeFileName file)\n  void $ applyIoOnList copyFromTo files >>= filterAndReportFailures\n")),(0,i.kt)("p",null,"\uc5ec\uae30\uc11c \ub2e4\uc2dc \ud55c \ubc88 ",(0,i.kt)("inlineCode",{parentName:"p"},"applyIoOnList"),"\ub97c \uc0ac\uc6a9\ud574\uc11c \ub354 \ubcf5\uc7a1\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.\n\ud30c\uc77c\uc744 \uc77d\ub294 \ub300\uc2e0, \uc785\ub825 \uacbd\ub85c\uc5d0\uc11c \uc0c8\ub85c \uc0dd\uc131\ub41c \ucd9c\ub825 \uacbd\ub85c\ub85c \ubcf5\uc0ac\ud569\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 \uacb0\uacfc(",(0,i.kt)("inlineCode",{parentName:"p"},"[(FilePath, Either String ())]")," \ud0c0\uc785)\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"filterAndReportFailures"),"\uc5d0 \uc804\ub2ec\ud574\uc11c \uc624\ub958\ub97c \ucd9c\ub825\ud558\uace0, \ubcf5\uc0ac\uc5d0 \uc2e4\ud328\ud55c \uac83\ub4e4\uc744 \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4.\n",(0,i.kt)("inlineCode",{parentName:"p"},"filterAndReportFailures"),"\uc758 \ubc18\ud658\uac12\uc5d0\ub294 \uad00\uc2ec\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0, ",(0,i.kt)("inlineCode",{parentName:"p"},"void"),"\ub97c \uc0ac\uc6a9\ud574\uc11c \ubc84\ub9bd\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 ",(0,i.kt)("inlineCode",{parentName:"p"},"()"),"\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},"-- | Write files to a directory, recording errors to stderr.\nwriteFiles :: FilePath -> [(FilePath, String)] -> IO ()\nwriteFiles outputDir files = do\n  let\n    writeFileContent (file, content) =\n      writeFile (outputDir </> file) content\n  void $ applyIoOnList writeFileContent files >>= filterAndReportFailures\n")),(0,i.kt)("p",null,"\uc774 \ucf54\ub4dc\ub294 \ud0c0\uc785\uc774 \ub2e4\ub974\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 ",(0,i.kt)("inlineCode",{parentName:"p"},"copyFiles"),"\uc640 \uac70\uc758 \ub3d9\uc77c\ud569\ub2c8\ub2e4.\n\ud558\uc2a4\ucf08\uc758 \ub9e4\uac1c\ubcc0\uc218 \ub2e4\ud615\uc131\uacfc \ucd94\uc0c1\ud654\ub97c \uc704\ud55c \ud0c0\uc785 \ud074\ub798\uc2a4\uc758 \uc870\ud569\uc740 \uc815\ub9d0 \uac15\ub825\ud558\uace0, \ub9ce\uc740 \ucf54\ub4dc\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"applyIoOnList"),"\ub97c \ud638\ucd9c\ud558\uace0 \uc774\ud6c4\uc5d0 ",(0,i.kt)("inlineCode",{parentName:"p"},"filterAndReportFailures"),"\ub97c \ud638\ucd9c\ud558\ub294 \ud328\ud134\uc774 \ub2e4\uc2dc \ud55c \ubc88 \ub098\uc654\uc2b5\ub2c8\ub2e4.\n\uc774\ub294 \ub9ac\ud329\ud1a0\ub9c1\uc758 \ud6c4\ubcf4\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \ubc88 \uc2dc\ub3c4\ud574\ubcf4\uc138\uc694!\n\uc791\uc131\ud55c \ucf54\ub4dc\uc5d0 \ub300\ud574 \uc5b4\ub5bb\uac8c \uc0dd\uac01\ud558\uc2dc\ub098\uc694? \uc774\uc804\ubcf4\ub2e4 \uc774\ud574\ud558\uae30 \uc27d\ub098\uc694? \ub354 \ubaa8\ub4c8\ud654\ub418\uc5c8\ub098\uc694? \uc7a5\ub2e8\uc810\uc740 \ubb34\uc5c7\uc778\uac00\uc694?"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"\uc694\uc57d"},"\uc694\uc57d"),(0,i.kt)("p",null,"\uc774\uc81c \uc6b0\ub9ac\ub294 \ub514\ub809\ud130\ub9ac\ub97c \uc548\uc804\ud558\uac8c \ubcc0\ud658\ud558\ub294 \uc5ed\ud560\uc744 \ud558\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"HsBlog.Directory")," \ubaa8\ub4c8\uc744 \uc644\uc131\ud588\uc2b5\ub2c8\ub2e4.\n\ucf54\ub4dc\ub294 \uc544\ub9c8\ub3c4 \uc624\ub958\uac00 \uc804\uccb4 \ud504\ub85c\uadf8\ub7a8\uc744 \ucda9\ub3cc\uc2dc\ud0a4\ub294 \uac83\uc744 \ud5c8\uc6a9\ud55c\ub2e4\uba74 \ud6e8\uc52c \ub354 \ub2e8\uc21c\ud654\ub420 \uc218 \uc788\uc5c8\uc744 \uac83\uc785\ub2c8\ub2e4.\n\ud558\uc9c0\ub9cc \ub54c\ub54c\ub85c \uc774\ub294 \uacac\uace0\ud568\uc744 \uc704\ud574 \uc9c0\ubd88\ud574\uc57c \ud558\ub294 \ub300\uac00\uc785\ub2c8\ub2e4.\n\uc5b4\ub5a4 \uac83\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc5b4\ub5a4 \uac83\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc5c6\ub294\uc9c0 \uc120\ud0dd\ud558\ub294 \uac83\uc740 \uc5ec\ub7ec\ubd84\uc5d0\uac8c \ub2ec\ub838\uc2b5\ub2c8\ub2e4.\n\uc9c0\uae08\uae4c\uc9c0\uc758 \uc5ec\uc815\uc774 \ud558\uc2a4\ucf08\uc5d0\uc11c \uc5d0\ub7ec \ucc98\ub9ac\ub97c \uc5b4\ub5bb\uac8c \uc811\uadfc\ud574\uc57c \ud558\ub294\uc9c0\uc5d0 \ub300\ud574 \ubc30\uc6b8 \uc218 \uc788\uc5c8\uae30\ub97c \ubc14\ub78d\ub2c8\ub2e4."),(0,i.kt)("p",null,"\uc804\uccb4 \ubaa8\ub4c8 \ucf54\ub4dc:"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"HsBlog.Directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-haskell"},'-- | \uc5ec\ub7ec \ud30c\uc77c\uc744 \ucc98\ub9ac\ud558\uace0 \ub514\ub809\ud1a0\ub9ac\ub97c \ubcc0\ud658\ud569\ub2c8\ub2e4\n\nmodule HsBlog.Directory\n  ( convertDirectory\n  , buildIndex\n  )\n  where\n\nimport qualified HsBlog.Markup as Markup\nimport qualified HsBlog.Html as Html\nimport HsBlog.Convert (convert, convertStructure)\n\nimport Data.List (partition)\nimport Data.Traversable (for)\nimport Control.Monad (void, when)\n\nimport System.IO (hPutStrLn, stderr)\nimport Control.Exception (catch, displayException, SomeException(..))\nimport System.Exit (exitFailure)\nimport System.FilePath\n  ( takeExtension\n  , takeBaseName\n  , (<.>)\n  , (</>)\n  , takeFileName\n  )\nimport System.Directory\n  ( createDirectory\n  , removeDirectoryRecursive\n  , listDirectory\n  , doesDirectoryExist\n  , copyFile\n  )\n\n-- | \ud2b9\uc815 \ub514\ub809\ud130\ub9ac\uc758 \ud30c\uc77c\uc744 \ub2e4\ub978 \ub514\ub809\ud130\ub9ac\ub85c \ubcf5\uc0ac\ud558\uace0, \'.txt\' \ud30c\uc77c\uc744 \'.html\' \ud30c\uc77c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n-- \uc77d\uae30\ub098 \uc4f0\uae30\uc5d0 \uc2e4\ud328\ud55c \uacbd\uc6b0 stderr\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4.\n--\n-- \ucd9c\ub825 \ub514\ub809\ud130\ub9ac \uc0dd\uc131\uc911\uc5d0 \uc608\uc678\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nconvertDirectory :: FilePath -> FilePath -> IO ()\nconvertDirectory inputDir outputDir = do\n  DirContents filesToProcess filesToCopy <- getDirFilesAndContent inputDir\n  createOutputDirectoryOrExit outputDir\n  let\n    outputHtmls = txtsToRenderedHtml filesToProcess\n  copyFiles outputDir filesToCopy\n  writeFiles outputDir outputHtmls\n  putStrLn "Done."\n\n------------------------------------\n-- * \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9 \uc77d\uae30\n\n-- | \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4\ngetDirFilesAndContent :: FilePath -> IO DirContents\ngetDirFilesAndContent inputDir = do\n  files <- map (inputDir </>) <$> listDirectory inputDir\n  let\n    (txtFiles, otherFiles) =\n      partition ((== ".txt") . takeExtension) files\n  txtFilesAndContent <-\n    applyIoOnList readFile txtFiles >>= filterAndReportFailures\n  pure $ DirContents\n    { dcFilesToProcess = txtFilesAndContent\n    , dcFilesToCopy = otherFiles\n    }\n\n-- | \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ud544\uc694\ud55c \ub514\ub809\ud130\ub9ac \ub0b4\uc6a9\ndata DirContents\n  = DirContents\n    { dcFilesToProcess :: [(FilePath, String)]\n      -- ^ File paths and their content\n    , dcFilesToCopy :: [FilePath]\n      -- ^ Other file paths, to be copied directly\n    }\n\n------------------------------------\n-- * \uc778\ub371\uc2a4 \ud398\uc774\uc9c0 \uc0dd\uc131\n\nbuildIndex :: [(FilePath, Markup.Document)] -> Html.Html\nbuildIndex files =\n  let\n    previews =\n      map\n        ( \\(file, doc) ->\n          case doc of\n            Markup.Heading 1 heading : article ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ heading))\n                <> foldMap convertStructure (take 2 article)\n                <> Html.p_ (Html.link_ file (Html.txt_ "..."))\n            _ ->\n              Html.h_ 3 (Html.link_ file (Html.txt_ file))\n        )\n        files\n  in\n    Html.html_\n      "Blog"\n      ( Html.h_ 1 (Html.link_ "index.html" (Html.txt_ "Blog"))\n        <> Html.h_ 2 (Html.txt_ "Posts")\n        <> mconcat previews\n      )\n\n------------------------------------\n-- * \ubcc0\ud658\n\n-- | \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub9c8\ud06c\uc5c5\uc73c\ub85c \ubcc0\ud658\ud558\uace0, \uc778\ub371\uc2a4\ub97c \ube4c\ub4dc\ud558\uace0, html\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.\ntxtsToRenderedHtml :: [(FilePath, String)] -> [(FilePath, String)]\ntxtsToRenderedHtml txtFiles =\n  let\n    txtOutputFiles = map toOutputMarkupFile txtFiles\n    index = ("index.html", buildIndex txtOutputFiles)\n  in\n    map (fmap Html.render) (index : map convertFile txtOutputFiles)\n\ntoOutputMarkupFile :: (FilePath, String) -> (FilePath, Markup.Document)\ntoOutputMarkupFile (file, content) =\n  (takeBaseName file <.> "html", Markup.parse content)\n\nconvertFile :: (FilePath, Markup.Document) -> (FilePath, Html.Html)\nconvertFile (file, doc) = (file, convert file doc)\n\n------------------------------------\n-- * \ub514\ub809\ud130\ub9ac\uc5d0 \ucd9c\ub825\n\n-- | \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud558\uace0 \uc2e4\ud328\ud558\uba74 \ud504\ub85c\uadf8\ub7a8\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4.\ncreateOutputDirectoryOrExit :: FilePath -> IO ()\ncreateOutputDirectoryOrExit outputDir =\n  whenIO\n    (not <$> createOutputDirectory outputDir)\n    (hPutStrLn stderr "Cancelled." *> exitFailure)\n\n-- | \ucd9c\ub825 \ub514\ub809\ud130\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n--   \ub514\ub809\ud130\ub9ac\uac00 \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\ncreateOutputDirectory :: FilePath -> IO Bool\ncreateOutputDirectory dir = do\n  dirExists <- doesDirectoryExist dir\n  create <-\n    if dirExists\n      then do\n        override <- confirm "Output directory exists. Override?"\n        when override (removeDirectoryRecursive dir)\n        pure override\n      else\n        pure True\n  when create (createDirectory dir)\n  pure create\n\n-- | \ub514\ub809\ud130\ub9ac\uc5d0 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud558\uace0, \uc624\ub958\ub97c stderr\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4.\ncopyFiles :: FilePath -> [FilePath] -> IO ()\ncopyFiles outputDir files = do\n  let\n    copyFromTo file = copyFile file (outputDir </> takeFileName file)\n  void $ applyIoOnList copyFromTo files >>= filterAndReportFailures\n\n-- | Write files to a directory, recording errors to stderr.\nwriteFiles :: FilePath -> [(FilePath, String)] -> IO ()\nwriteFiles outputDir files = do\n  let\n    writeFileContent (file, content) =\n      writeFile (outputDir </> file) content\n  void $ applyIoOnList writeFileContent files >>= filterAndReportFailures\n\n------------------------------------\n-- * IO \uc791\uc5c5\uacfc \uc624\ub958 \ucc98\ub9ac\n\n-- | IO \ud568\uc218\ub97c \uac12\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 \uc801\uc6a9\ud558\uace0, \uc131\uacf5\uacfc \uc2e4\ud328\ub97c \uae30\ub85d\ud569\ub2c8\ub2e4\napplyIoOnList :: (a -> IO b) -> [a] -> IO [(a, Either String b)]\napplyIoOnList action inputs = do\n  for inputs $ \\input -> do\n    maybeResult <-\n      catch\n        (Right <$> action input)\n        ( \\(SomeException e) -> do\n          pure $ Left (displayException e)\n        )\n    pure (input, maybeResult)\n\n-- | \ud30c\uc77c\uc5d0 \ub300\ud55c \uc791\uc5c5\uc758 \uc2e4\ud328\ub97c \ud544\ud130\ub9c1\ud558\uace0, stderr\uc5d0 \uc5d0\ub7ec\ub97c \ubcf4\uace0\ud569\ub2c8\ub2e4.\nfilterAndReportFailures :: [(a, Either String b)] -> IO [(a, b)]\nfilterAndReportFailures =\n  foldMap $ \\(file, contentOrErr) ->\n    case contentOrErr of\n      Left err -> do\n        hPutStrLn stderr err\n        pure []\n      Right content ->\n        pure [(file, content)]\n\n------------------------------------\n-- * \uc720\ud2f8\ub9ac\ud2f0\n\nconfirm :: String -> IO Bool\nconfirm question = do\n  putStrLn (question <> " (y/n)")\n  answer <- getLine\n  case answer of\n    "y" -> pure True\n    "n" -> pure False\n    _ -> do\n      putStrLn "\uc798\ubabb\ub41c \uc751\ub2f5\uc785\ub2c8\ub2e4. y \ub610\ub294 n\uc744 \uc0ac\uc6a9\ud558\uc138\uc694."\n      confirm question\n\nwhenIO :: IO Bool -> IO () -> IO ()\nwhenIO cond action = do\n  result <- cond\n  if result\n    then action\n    else pure ()\n'))))}c.isMDXComponent=!0}}]);